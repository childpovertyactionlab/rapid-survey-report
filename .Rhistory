filter(!is.na(CPAL.FSTR.001)) %>%
group_by(CPAL.DEMO.001) %>%
summarize(pct = sum(value, na.rm = TRUE) / n(),
n = n(),
n_true = sum(value, na.rm = TRUE),
.groups = 'drop') %>%
mutate(GEOID = as.character(CPAL.DEMO.001)) %>%
left_join(zctas_dallas, by = "GEOID") %>%
mutate(
per_capita = case_when(
estimate > 0 ~ n/estimate,
TRUE ~ 0)
) %>%
filter(!is.na(NAME)) %>%
st_as_sf()
basics_df <- df %>%
filter(!is.na(CPAL.FSTR.001)) %>%
group_by(CPAL.DEMO.001) %>%
summarize(pct = sum(CPAL.FSTR.001 > 0, na.rm = TRUE) / n(),
n = n(),
n_true = sum(CPAL.FSTR.001 > 0, na.rm = TRUE),
.groups = 'drop') %>%
mutate(GEOID = as.character(CPAL.DEMO.001)) %>%
left_join(zctas_dallas, by = "GEOID") %>%
mutate(
per_capita = case_when(
estimate > 0 ~ n/estimate,
TRUE ~ 0)
) %>%
filter(!is.na(NAME)) %>%
st_as_sf()
View(basics_df)
library(tidyverse)
library(tidycensus)
library(ggplot2)
library(cpaltemplates)
library(haven)
library(readxl)
library(purrr)
library(sf)
library(leaflet)
library(DT)
library(tigris) # To get county shapefiles
zctas_national <- get_acs(geography = "zcta", variables = "B01003_001", geometry = TRUE) %>%
st_as_sf()
zctas_national <- get_acs(geography = "zcta", variables = "B01003_001", geometry = TRUE) %>%
st_as_sf()
dallas_county <- get_acs(geography = "county", variables = "B01003_001", state = "TX", county = "Dallas", geometry = TRUE) %>%
st_as_sf()
dallas_county_acs <- get_acs(geography = "county",
variables = c("B17001_001", "B17001_002E", "B19013_001E"),
year = 2021,
survey = "acs5",
state = "TX",
county = "Dallas") %>%
select(-moe) %>%
spread(key = variable, value = estimate) %>%
mutate(povertyRate = B17001_002/B17001_001)
zctas_dallas <- zctas_national[st_intersects(dallas_county, zctas_national, sparse = FALSE), ]
# priorities <- read_excel("D:/CPAL Dropbox/Analytics/04_Projects/RAPID/CPAL_Codebook.8.2.23_with_priorities.xlsx") %>%
# drop_na(PRIORITY) %>%
# pull(1)
demographics <- c(
"CPALID",
"Source",
"UserLanguage",
"age_yr",
"Annual2023Income",
"Income2023M2Y",
"Income2023W2Y",
"POVERTYLine2023"
)
#
# data1raw <- read_sav("data/Q1 2023 Responses/RAPID-Dallas Initial Recruitment 1 Data.sav") %>%
#   mutate(CPAL.DEMO.007.2 = as.character(CPAL.DEMO.007.2))
# data2raw <- read_sav("data/Q2 2023 Responses/RAPID-DALLAS_MasterFile_For_CPAL.8.2.23 (1).sav")
data2raw <- read_sav("~/data/RAPID/RAPID-DALLAS_MasterFile_For_CPAL.10.02.2023.sav")
# data <- read_csv("C:/users/taylo/CPAL Dropbox/Analytics/04_Projects/RAPID/example.csv")
#
# cols <- Reduce(intersect, list(c(demographics, priorities),
#                                # colnames(data1raw),
#                                colnames(data2raw)))
data <- data2raw %>%
# select(all_of(cols)) %>%
select(-ends_with("TEXT"))
response_maps <- list(
CPAL.DEMO.007.2 = c(
"1" = "American Indian or Alaska Native",
"2" = "Asian",
"3" = "Black or African American",
"4" = "Native Hawaiian or Other Pacific Islander",
"5" = "White",
"6" = "Other",
"8" = "Middle Eastern or North African",
"9" = "Hispanic, Latine, or Latin origin"
),
CPAL.DEMO.009 = c(
summarize = F,
"1" = "English",
"2" = "Arabic",
"3" = "Chinese",
"4" = "French",
"5" = "German",
"6" = "Italian",
"7" = "Japanese",
"8" = "Korean",
"9" = "Russian",
"10" = "Spanish",
"11" = "Vietnamese",
"12" = "Other",
"13" = "ASL/Sign Language"
),
CPAL.DEMO.010 = c(
summarize = F,
"0" = "No",
"1" = "Yes",
"-98" = "Unsure",
"-97" = "Do not wish to disclose",
"-99" = "Not applicable"
),
CPAL.DEMO.011 = c(
summarize = T,
"1" = "Two parents",
"2" = "One parent",
"3" = "Other children/siblings older than 6",
"4" = "Adult relatives",
"5" = "Adult non-relatives",
"6" = "Other"
),
CPAL.DEMO.014 = c(
summarize = F,
"1" = "Less than high school",
"2" = "Some high school",
"3" = "High school diploma or equivalent",
"4" = "Some college",
"5" = "Associate degree",
"6" = "Bachelor's degree",
"7" = "Master's degree",
"8" = "Doctorate or professional",
"9" = "Other",
"10" = "Trade school",
"11" = "Technical certification"
),
CPAL.DEMO.015 = c(
summarize = F,
"0" = "No",
"9" = "GED",
"10" = "Undergraduate or post-secondary",
"11" = "Graduate degree program",
"12" = "Non-degree credentialing program",
"13" = "Not listed"
),
CPAL.FSTR.004.a = c(
summarize = T,
""
)
)
summarize_subparts <- function(df, prefix, maps=response_maps) {
cols <- grep(paste0("^",prefix), names(df), value = TRUE)
response_map <- maps[[prefix]]
summarized <- df %>%
gather(key = "subpart", value = "response", starts_with(prefix)) %>%
mutate(subpart = str_extract(subpart, "\\d+$"),
mapped_value = ifelse(response == 1, response_map[subpart], NA_character_)) %>%
group_by(CPALID) %>%
summarize(!!prefix := list(mapped_value)) %>%
mutate_at(2, ~map(., ~na.omit(.)))
df <- df %>%
left_join(summarized, by = "CPALID") %>%
select(-all_of(cols))
return(df)
}
df <- data %>%
summarize_subparts("CPAL.DEMO.007.2") %>% mutate(Education_Category = case_when(
CPAL.DEMO.014 %in% c("Less than high school", "Some high school") ~ "No high school degree",
CPAL.DEMO.014 %in% c("High school diploma or equivalent", "Some college") ~ "High school degree",
CPAL.DEMO.014 %in% c("Associate degree", "Bachelor's degree", "Master's degree", "Doctorate or professional", "Trade school", "Technical certification", "Other") ~ "Post-secondary degree or certification",
)) %>%
mutate(CPAL.DEMO.007.2 = case_when(
is.na(CPAL.DEMO.007.2) ~ NA,
lengths(CPAL.DEMO.007.2) > 1 ~ "Multiracial or other",
CPAL.DEMO.007.2 == "Other" ~ "Multiracial or other",
TRUE ~ as.character(CPAL.DEMO.007.2)
)) %>%
# mutate(Annual2023Income = case_when(
#          Annual2023Income > 20 & Annual2023Income < 100 ~ Annual2023Income*1000,
#          Annual2023Income == Income2023W2Y & Annual2023Income < 1000 ~ Annual2023Income*52,
#          Annual2023Income == Income2023M2Y & Annual2023Income > 999 & Annual2023Income < 3000 ~ Annual2023Income*12,
#          TRUE ~ Annual2023Income
#        )) %>%
filter(Annual2023Income < 10000000, Annual2023Income > 1000) %>%
mutate(IncomeQuartile = case_when(
is.na(Annual2023Income) ~ NA,
TRUE ~ cut(
Annual2023Income,
breaks = c(-Inf, quantile(Annual2023Income, probs = c(0.25, 0.50, 0.75), na.rm = T), Inf),
labels = c(1,2,3,4),
include.lowest = T))) %>%
mutate(
ChildUnder6 = ifelse(!is.na(CPAL.CBCL.015) & CPAL.CBCL.015 %in% 1:6, 1, 0)
) %>%
mutate(`Income Bracket` = factor(case_when(
Annual2023Income < 15000 ~ "Less than $15,000",
Annual2023Income >= 15000 & Annual2023Income < 24999 ~ "$15,000 to $24,999",
Annual2023Income >= 25000 & Annual2023Income < 34999 ~ "$25,000 to $34,999",
Annual2023Income >= 35000 & Annual2023Income < 49999 ~ "$35,000 to $49,999",
Annual2023Income >= 50000 & Annual2023Income < 74999 ~ "$50,000 to $74,999",
Annual2023Income >= 75000 & Annual2023Income < 99999 ~ "$75,000 to $99,999",
Annual2023Income >= 100000 & Annual2023Income < 149999 ~ "$100,000 to $149,999",
Annual2023Income >= 150000 ~ "$150,000 and above"
),
levels = c("Less than $15,000",
"$15,000 to $24,999",
"$25,000 to $34,999",
"$35,000 to $49,999",
"$50,000 to $74,999",
"$75,000 to $99,999",
"$100,000 to $150,999",
"$150,000 and above")
)) %>%
mutate(age_bucket = cut(age_yr, breaks = c(0, 9, 19, 29, 39, 49, 59, 69, 79, Inf),
labels = c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80+")))
df %>%
filter(Annual2023Income >= 50000 & Annual2023Income < 150000) %>%
summarise(percentage = mean(`CPAL.DEMO.011_1` == 1, na.rm = TRUE))
percentage_0k_49k <- df %>%
filter(Annual2023Income < 50000) %>%
summarise(percentage = mean(`CPAL.DEMO.011_1` == 1, na.rm = TRUE))
View(response_maps)
View(percentage_0k_49k)
remove(percentage_0k_49k)
View(df)
two_parent <- df %>%
group_by(`Income Bracket`) %>%
summarise(two_parent_percentage = mean(`CPAL.DEMO.011_1` == 1, na.rm = TRUE)
t
df <- data %>%
summarize_subparts("CPAL.DEMO.007.2") %>% mutate(Education_Category = case_when(
CPAL.DEMO.014 %in% c("Less than high school", "Some high school") ~ "No high school degree",
CPAL.DEMO.014 %in% c("High school diploma or equivalent", "Some college") ~ "High school degree",
CPAL.DEMO.014 %in% c("Associate degree", "Bachelor's degree", "Master's degree", "Doctorate or professional", "Trade school", "Technical certification", "Other") ~ "Post-secondary degree or certification",
)) %>%
mutate(CPAL.DEMO.007.2 = case_when(
is.na(CPAL.DEMO.007.2) ~ NA,
lengths(CPAL.DEMO.007.2) > 1 ~ "Multiracial or other",
CPAL.DEMO.007.2 == "Other" ~ "Multiracial or other",
TRUE ~ as.character(CPAL.DEMO.007.2)
)) %>%
# mutate(Annual2023Income = case_when(
#          Annual2023Income > 20 & Annual2023Income < 100 ~ Annual2023Income*1000,
#          Annual2023Income == Income2023W2Y & Annual2023Income < 1000 ~ Annual2023Income*52,
#          Annual2023Income == Income2023M2Y & Annual2023Income > 999 & Annual2023Income < 3000 ~ Annual2023Income*12,
#          TRUE ~ Annual2023Income
#        )) %>%
filter(Annual2023Income < 10000000, Annual2023Income > 1000) %>%
mutate(IncomeQuartile = case_when(
is.na(Annual2023Income) ~ NA,
TRUE ~ cut(
Annual2023Income,
breaks = c(-Inf, quantile(Annual2023Income, probs = c(0.25, 0.50, 0.75), na.rm = T), Inf),
labels = c(1,2,3,4),
include.lowest = T))) %>%
mutate(
ChildUnder6 = ifelse(!is.na(CPAL.CBCL.015) & CPAL.CBCL.015 %in% 1:6, 1, 0)
) %>%
mutate(`Income Bracket` = factor(case_when(
Annual2023Income < 15000 ~ "Less than $15,000",
Annual2023Income >= 15000 & Annual2023Income < 24999 ~ "$15,000 to $24,999",
Annual2023Income >= 25000 & Annual2023Income < 34999 ~ "$25,000 to $34,999",
Annual2023Income >= 35000 & Annual2023Income < 49999 ~ "$35,000 to $49,999",
Annual2023Income >= 50000 & Annual2023Income < 74999 ~ "$50,000 to $74,999",
Annual2023Income >= 75000 & Annual2023Income < 99999 ~ "$75,000 to $99,999",
Annual2023Income >= 100000 & Annual2023Income < 149999 ~ "$100,000 to $149,999",
Annual2023Income >= 150000 ~ "$150,000 and above"
),
levels = c("Less than $15,000",
"$15,000 to $24,999",
"$25,000 to $34,999",
"$35,000 to $49,999",
"$50,000 to $74,999",
"$75,000 to $99,999",
"$100,000 to $150,999",
"$150,000 and above")
)) %>%
mutate(age_bucket = cut(age_yr, breaks = c(0, 9, 19, 29, 39, 49, 59, 69, 79, Inf),
labels = c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80+"))) %>%
mutate(`Over/Under 50k` = case_when(
Annual2023Income < 49999 ~ "Less than $50,000",
Annual2023Income >= 50000 ~ "$50,000 and above",
TRUE ~ NA
),
)
df %>%
replace_na(list(`CPAL.DEMO.011_1` = 0)) %>% # Replacing NA with 0
group_by(`Over/Under 50k`) %>%
summarise(two_parent_percentage = mean(`CPAL.DEMO.011_1` == 1, na.rm = TRUE) * 100)
over_under_50k_two_parents <- df %>%
replace_na(list(`CPAL.DEMO.011_1` = 0)) %>%
group_by(`Over/Under 50k`) %>%
summarise(two_parent_percentage = mean(`CPAL.DEMO.011_1` == 1, na.rm = TRUE) * 100)
View(over_under_50k_two_parents)
pull(over_under_50k_two_parents[1,2])
scales::percent(pull(over_under_50k_two_parents[1,2]))
over_under_50k_two_parents <- df %>%
replace_na(list(`CPAL.DEMO.011_1` = 0)) %>%
group_by(`Over/Under 50k`) %>%
summarise(two_parent_percentage = mean(`CPAL.DEMO.011_1` == 1, na.rm = TRUE) )
scales::percent(pull(over_under_50k_two_parents[1,2]))
scales::percent(pull(over_under_50k_two_parents[1,2]), accuracy = 0.1)
scales::percent(pull(over_under_50k_two_parents[2,2]), accuracy = 0.1)
library(tidyverse)
library(tidyverse)
library(tidycensus)
library(ggplot2)
library(cpaltemplates)
library(ggplot2)
library(cpaltemplates)
library(haven)
library(readxl)
library(purrr)
library(sf)
library(leaflet)
library(DT)
census_api_key("7b32db9a1faf6b92a567a778f7763e70285eba97", install = TRUE, overwrite = TRUE)
library(tigris) # To get county shapefiles
zctas_national <- get_acs(geography = "zcta", variables = "B01003_001", geometry = TRUE) %>%
st_as_sf()
zctas_national <- get_acs(geography = "zcta", variables = "B01003_001", geometry = TRUE) %>%
st_as_sf()
dallas_county <- get_acs(geography = "county", variables = "B01003_001", state = "TX", county = "Dallas", geometry = TRUE) %>%
st_as_sf()
dallas_county_acs <- get_acs(geography = "county",
variables = c("B17001_001", "B17001_002E", "B19013_001E"),
year = 2021,
survey = "acs5",
state = "TX",
county = "Dallas") %>%
select(-moe) %>%
spread(key = variable, value = estimate) %>%
mutate(povertyRate = B17001_002/B17001_001)
zctas_dallas <- zctas_national[st_intersects(dallas_county, zctas_national, sparse = FALSE), ]
# priorities <- read_excel("D:/CPAL Dropbox/Analytics/04_Projects/RAPID/CPAL_Codebook.8.2.23_with_priorities.xlsx") %>%
# drop_na(PRIORITY) %>%
# pull(1)
demographics <- c(
"CPALID",
"Source",
"UserLanguage",
"age_yr",
"Annual2023Income",
"Income2023M2Y",
"Income2023W2Y",
"POVERTYLine2023"
)
#
# data1raw <- read_sav("data/Q1 2023 Responses/RAPID-Dallas Initial Recruitment 1 Data.sav") %>%
#   mutate(CPAL.DEMO.007.2 = as.character(CPAL.DEMO.007.2))
# data2raw <- read_sav("data/Q2 2023 Responses/RAPID-DALLAS_MasterFile_For_CPAL.8.2.23 (1).sav")
data2raw <- read_sav("~/data/RAPID/RAPID-DALLAS_MasterFile_For_CPAL.10.02.2023.sav")
# data <- read_csv("C:/users/taylo/CPAL Dropbox/Analytics/04_Projects/RAPID/example.csv")
#
# cols <- Reduce(intersect, list(c(demographics, priorities),
#                                # colnames(data1raw),
#                                colnames(data2raw)))
data <- data2raw %>%
# select(all_of(cols)) %>%
select(-ends_with("TEXT"))
response_maps <- list(
CPAL.DEMO.007.2 = c(
"1" = "American Indian or Alaska Native",
"2" = "Asian",
"3" = "Black or African American",
"4" = "Native Hawaiian or Other Pacific Islander",
"5" = "White",
"6" = "Other",
"8" = "Middle Eastern or North African",
"9" = "Hispanic, Latine, or Latin origin"
),
CPAL.DEMO.009 = c(
summarize = F,
"1" = "English",
"2" = "Arabic",
"3" = "Chinese",
"4" = "French",
"5" = "German",
"6" = "Italian",
"7" = "Japanese",
"8" = "Korean",
"9" = "Russian",
"10" = "Spanish",
"11" = "Vietnamese",
"12" = "Other",
"13" = "ASL/Sign Language"
),
CPAL.DEMO.010 = c(
summarize = F,
"0" = "No",
"1" = "Yes",
"-98" = "Unsure",
"-97" = "Do not wish to disclose",
"-99" = "Not applicable"
),
CPAL.DEMO.011 = c(
summarize = T,
"1" = "Two parents",
"2" = "One parent",
"3" = "Other children/siblings older than 6",
"4" = "Adult relatives",
"5" = "Adult non-relatives",
"6" = "Other"
),
CPAL.DEMO.014 = c(
summarize = F,
"1" = "Less than high school",
"2" = "Some high school",
"3" = "High school diploma or equivalent",
"4" = "Some college",
"5" = "Associate degree",
"6" = "Bachelor's degree",
"7" = "Master's degree",
"8" = "Doctorate or professional",
"9" = "Other",
"10" = "Trade school",
"11" = "Technical certification"
),
CPAL.DEMO.015 = c(
summarize = F,
"0" = "No",
"9" = "GED",
"10" = "Undergraduate or post-secondary",
"11" = "Graduate degree program",
"12" = "Non-degree credentialing program",
"13" = "Not listed"
),
CPAL.FSTR.004.a = c(
summarize = T,
""
)
)
summarize_subparts <- function(df, prefix, maps=response_maps) {
cols <- grep(paste0("^",prefix), names(df), value = TRUE)
response_map <- maps[[prefix]]
summarized <- df %>%
gather(key = "subpart", value = "response", starts_with(prefix)) %>%
mutate(subpart = str_extract(subpart, "\\d+$"),
mapped_value = ifelse(response == 1, response_map[subpart], NA_character_)) %>%
group_by(CPALID) %>%
summarize(!!prefix := list(mapped_value)) %>%
mutate_at(2, ~map(., ~na.omit(.)))
df <- df %>%
left_join(summarized, by = "CPALID") %>%
select(-all_of(cols))
return(df)
}
df <- data %>%
summarize_subparts("CPAL.DEMO.007.2") %>% mutate(Education_Category = case_when(
CPAL.DEMO.014 %in% c("Less than high school", "Some high school") ~ "No high school degree",
CPAL.DEMO.014 %in% c("High school diploma or equivalent", "Some college") ~ "High school degree",
CPAL.DEMO.014 %in% c("Associate degree", "Bachelor's degree", "Master's degree", "Doctorate or professional", "Trade school", "Technical certification", "Other") ~ "Post-secondary degree or certification",
)) %>%
mutate(CPAL.DEMO.007.2 = case_when(
is.na(CPAL.DEMO.007.2) ~ NA,
lengths(CPAL.DEMO.007.2) > 1 ~ "Multiracial or other",
CPAL.DEMO.007.2 == "Other" ~ "Multiracial or other",
TRUE ~ as.character(CPAL.DEMO.007.2)
)) %>%
# mutate(Annual2023Income = case_when(
#          Annual2023Income > 20 & Annual2023Income < 100 ~ Annual2023Income*1000,
#          Annual2023Income == Income2023W2Y & Annual2023Income < 1000 ~ Annual2023Income*52,
#          Annual2023Income == Income2023M2Y & Annual2023Income > 999 & Annual2023Income < 3000 ~ Annual2023Income*12,
#          TRUE ~ Annual2023Income
#        )) %>%
filter(Annual2023Income < 10000000, Annual2023Income > 1000) %>%
mutate(IncomeQuartile = case_when(
is.na(Annual2023Income) ~ NA,
TRUE ~ cut(
Annual2023Income,
breaks = c(-Inf, quantile(Annual2023Income, probs = c(0.25, 0.50, 0.75), na.rm = T), Inf),
labels = c(1,2,3,4),
include.lowest = T))) %>%
mutate(
ChildUnder6 = ifelse(!is.na(CPAL.CBCL.015) & CPAL.CBCL.015 %in% 1:6, 1, 0)
) %>%
mutate(`Income Bracket` = factor(case_when(
Annual2023Income < 15000 ~ "Less than $15,000",
Annual2023Income >= 15000 & Annual2023Income < 24999 ~ "$15,000 to $24,999",
Annual2023Income >= 25000 & Annual2023Income < 34999 ~ "$25,000 to $34,999",
Annual2023Income >= 35000 & Annual2023Income < 49999 ~ "$35,000 to $49,999",
Annual2023Income >= 50000 & Annual2023Income < 74999 ~ "$50,000 to $74,999",
Annual2023Income >= 75000 & Annual2023Income < 99999 ~ "$75,000 to $99,999",
Annual2023Income >= 100000 & Annual2023Income < 149999 ~ "$100,000 to $149,999",
Annual2023Income >= 150000 ~ "$150,000 and above"
),
levels = c("Less than $15,000",
"$15,000 to $24,999",
"$25,000 to $34,999",
"$35,000 to $49,999",
"$50,000 to $74,999",
"$75,000 to $99,999",
"$100,000 to $150,999",
"$150,000 and above")
)) %>%
mutate(age_bucket = cut(age_yr, breaks = c(0, 9, 19, 29, 39, 49, 59, 69, 79, Inf),
labels = c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60-69", "70-79", "80+"))) %>%
mutate(`Over/Under 50k` = case_when(
Annual2023Income < 49999 ~ "Less than $50,000",
Annual2023Income >= 50000 ~ "$50,000 and above",
TRUE ~ NA
),
)
dallas_county <- get_acs(geography = "county", variables = "B01003_001", state = "TX", county = "Dallas", geometry = TRUE) %>%
st_as_sf()
