{"title":"RAPID Q2 Overview","markdown":{"yaml":{"title":"RAPID Q2 Overview"},"headingText":"priorities <- read_excel(\"D:/CPAL Dropbox/Analytics/04_Projects/RAPID/CPAL_Codebook.8.2.23_with_priorities.xlsx\") %>%","containsRefs":false,"markdown":"\n\n```{r setup, output = F}\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(ggplot2)\nlibrary(cpaltemplates)\nlibrary(haven)\nlibrary(readxl)\nlibrary(purrr)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(DT)\n\ncensus_api_key(\"7b32db9a1faf6b92a567a778f7763e70285eba97\", install = TRUE, overwrite = TRUE)\n\nlibrary(tigris) # To get county shapefiles\n\nzctas_national <- get_acs(geography = \"zcta\", year = 2020, variables = \"B01003_001\", geometry = TRUE) %>%\n  st_as_sf()\n\ndallas_county <- get_acs(geography = \"county\", variables = \"B01003_001\", state = \"TX\", county = \"Dallas\", geometry = TRUE) %>%\n  st_as_sf()\n\ndallas_county_acs <- get_acs(geography = \"county\", \n                             variables = c(\"B17001_001\", \"B17001_002E\", \"B19013_001E\"), \n                             year = 2021, \n                             survey = \"acs5\",\n                             state = \"TX\",\n                             county = \"Dallas\") %>%\n  select(-moe) %>%\n  spread(key = variable, value = estimate) %>%\n  mutate(povertyRate = B17001_002/B17001_001)\n\nzctas_dallas <- zctas_national[st_intersects(dallas_county, zctas_national, sparse = FALSE), ]\n\n# drop_na(PRIORITY) %>%\n# pull(1)\ndemographics <- c(\n  \"CPALID\",\n  \"Source\",\n  \"UserLanguage\",\n  \"age_yr\",\n  \"Annual2023Income\",\n  \"Income2023M2Y\",\n  \"Income2023W2Y\",\n  \"POVERTYLine2023\"\n)\n# \n# data1raw <- read_sav(\"data/Q1 2023 Responses/RAPID-Dallas Initial Recruitment 1 Data.sav\") %>%\n#   mutate(CPAL.DEMO.007.2 = as.character(CPAL.DEMO.007.2))\n# data2raw <- read_sav(\"data/Q2 2023 Responses/RAPID-DALLAS_MasterFile_For_CPAL.8.2.23 (1).sav\")\ndata2raw <- read_sav(\"C:/Users/cpalr/Documents/Birth to Three/RAPID/data/Q2 2023 Responses/RAPID-DALLAS_MasterFile_For_CPAL.8.2.23 (1).sav\")\n# data <- read_csv(\"C:/users/taylo/CPAL Dropbox/Analytics/04_Projects/RAPID/example.csv\")\n# \n# cols <- Reduce(intersect, list(c(demographics, priorities),\n#                                # colnames(data1raw),\n#                                colnames(data2raw)))\ndata <- data2raw %>%\n  # select(all_of(cols)) %>%\n  select(-ends_with(\"TEXT\"))\n\n\nresponse_maps <- list(\n  CPAL.DEMO.007.2 = c(\n    \"1\" = \"American Indian or Alaska Native\",\n    \"2\" = \"Asian\",\n    \"3\" = \"Black or African American\",\n    \"4\" = \"Native Hawaiian or Other Pacific Islander\",\n    \"5\" = \"White\",\n    \"6\" = \"Other\",\n    \"8\" = \"Middle Eastern or North African\",\n    \"9\" = \"Hispanic, Latine, or Latin origin\"\n  ),\n  CPAL.DEMO.009 = c(\n    summarize = F,\n    \"1\" = \"English\",\n    \"2\" = \"Arabic\",\n    \"3\" = \"Chinese\",\n    \"4\" = \"French\",\n    \"5\" = \"German\",\n    \"6\" = \"Italian\",\n    \"7\" = \"Japanese\",\n    \"8\" = \"Korean\",\n    \"9\" = \"Russian\",\n    \"10\" = \"Spanish\",\n    \"11\" = \"Vietnamese\",\n    \"12\" = \"Other\",\n    \"13\" = \"ASL/Sign Language\"\n  ),\n  CPAL.DEMO.010 = c(\n    summarize = F,\n    \"0\" = \"No\",\n    \"1\" = \"Yes\",\n    \"-98\" = \"Unsure\",\n    \"-97\" = \"Do not wish to disclose\",\n    \"-99\" = \"Not applicable\"\n  ),\n  CPAL.DEMO.011 = c(\n    summarize = T,\n    \"1\" = \"Two parents\",\n    \"2\" = \"One parent\",\n    \"3\" = \"Other children/siblings older than 6\",\n    \"4\" = \"Adult relatives\",\n    \"5\" = \"Adult non-relatives\",\n    \"6\" = \"Other\"\n  ),\n  CPAL.DEMO.014 = c(\n    summarize = F,\n    \"1\" = \"Less than high school\",\n    \"2\" = \"Some high school\",\n    \"3\" = \"High school diploma or equivalent\",\n    \"4\" = \"Some college\",\n    \"5\" = \"Associate degree\",\n    \"6\" = \"Bachelor's degree\",\n    \"7\" = \"Master's degree\",\n    \"8\" = \"Doctorate or professional\",\n    \"9\" = \"Other\",\n    \"10\" = \"Trade school\",\n    \"11\" = \"Technical certification\"\n  ),\n  CPAL.DEMO.015 = c(\n    summarize = F,\n    \"0\" = \"No\",\n    \"9\" = \"GED\",\n    \"10\" = \"Undergraduate or post-secondary\",\n    \"11\" = \"Graduate degree program\",\n    \"12\" = \"Non-degree credentialing program\",\n    \"13\" = \"Not listed\"\n  ),\n  CPAL.FSTR.004.a = c(\n    summarize = T,\n    \"\"\n    \n  )\n)     \n\nsummarize_subparts <- function(df, prefix, maps=response_maps) {\n  cols <- grep(paste0(\"^\",prefix), names(df), value = TRUE)\n  response_map <- maps[[prefix]]\n  summarized <- df %>%\n    gather(key = \"subpart\", value = \"response\", starts_with(prefix)) %>%\n    mutate(subpart = str_extract(subpart, \"\\\\d+$\"),\n           mapped_value = ifelse(response == 1, response_map[subpart], NA_character_)) %>%\n    group_by(CPALID) %>%\n    summarize(!!prefix := list(mapped_value)) %>%\n    mutate_at(2, ~map(., ~na.omit(.))) \n  df <- df %>%\n    left_join(summarized, by = \"CPALID\") %>%\n    select(-all_of(cols))\n  return(df)\n}\n\ndf <- data %>%\n  summarize_subparts(\"CPAL.DEMO.007.2\") %>% mutate(Education_Category = case_when(\n    CPAL.DEMO.014 %in% c(\"Less than high school\", \"Some high school\") ~ \"No high school degree\",\n    CPAL.DEMO.014 %in% c(\"High school diploma or equivalent\", \"Some college\") ~ \"High school degree\",\n    CPAL.DEMO.014 %in% c(\"Associate degree\", \"Bachelor's degree\", \"Master's degree\", \"Doctorate or professional\", \"Trade school\", \"Technical certification\", \"Other\") ~ \"Post-secondary degree or certification\",\n  )) %>%\n  mutate(CPAL.DEMO.007.2 = case_when(\n    is.na(CPAL.DEMO.007.2) ~ NA,\n    lengths(CPAL.DEMO.007.2) > 1 ~ \"Multiracial or other\",\n    CPAL.DEMO.007.2 == \"Other\" ~ \"Multiracial or other\",\n    TRUE ~ as.character(CPAL.DEMO.007.2)\n  )) %>%\n  mutate(Annual2023Income = case_when(\n           Annual2023Income > 20 & Annual2023Income < 100 ~ Annual2023Income*1000,\n           Annual2023Income == Income2023W2Y & Annual2023Income < 1000 ~ Annual2023Income*52,\n           Annual2023Income == Income2023M2Y & Annual2023Income > 999 & Annual2023Income < 3000 ~ Annual2023Income*12,\n           TRUE ~ Annual2023Income\n         )) %>%\n  filter(Annual2023Income < 10000000, Annual2023Income > 1000) %>%\n  mutate(IncomeQuartile = case_when(\n    is.na(Annual2023Income) ~ NA,\n    TRUE ~ cut(\n      Annual2023Income,\n      breaks = c(-Inf, quantile(Annual2023Income, probs = c(0.25, 0.50, 0.75), na.rm = T), Inf),\n      labels = c(1,2,3,4),\n      include.lowest = T))) %>%\n  mutate(\n      ChildUnder6 = ifelse(!is.na(CPAL.CBCL.015) & CPAL.CBCL.015 %in% 1:6, 1, 0)\n  ) %>%  \n  mutate(`Income Bracket` = factor(case_when(\n      Annual2023Income < 15000 ~ \"Less than $15,000\",\n      Annual2023Income >= 15000 & Annual2023Income < 24999 ~ \"$15,000 to $24,999\",\n      Annual2023Income >= 25000 & Annual2023Income < 34999 ~ \"$25,000 to $34,999\",\n      Annual2023Income >= 35000 & Annual2023Income < 49999 ~ \"$35,000 to $49,999\",\n      Annual2023Income >= 50000 & Annual2023Income < 74999 ~ \"$50,000 to $74,999\",\n      Annual2023Income >= 75000 & Annual2023Income < 99999 ~ \"$75,000 to $99,999\",\n      Annual2023Income >= 100000 & Annual2023Income < 149999 ~ \"$100,000 to $150,999\",\n      Annual2023Income >= 150000 ~ \"$150,000 and above\"\n    ),\n    levels = c(\"Less than $15,000\",\n               \"$15,000 to $24,999\",\n               \"$25,000 to $34,999\",\n               \"$35,000 to $49,999\",\n               \"$50,000 to $74,999\",\n               \"$75,000 to $99,999\",\n               \"$100,000 to $150,999\",\n               \"$150,000 and above\")\n  )) %>%\n  mutate(age_bucket = cut(age_yr, breaks = c(0, 9, 19, 29, 39, 49, 59, 69, 79, Inf), \n                     labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"))) %>%\n  mutate(`Over/Under 50k` = case_when(\n    Annual2023Income < 49999 ~ \"Less than $50,000\",\n    Annual2023Income >= 50000 ~ \"$50,000 and above\",\n    TRUE ~ NA\n    ),\n  )\n\n\n\n# for (code in names(response_maps)) {\n#   if (response_maps[[code]]['summarize']) {\n#     df <- summarize_subparts(df, code)\n#   } else {\n#     df <- map_only(df, code)\n#   }\n# }\n\n\n```\n\n```{r generate_sample}\n\n# ## SAMPLE DF\n# \n#   generate_sample_data <- function(column_map) {\n#     possible_values <- as.character(0:(length(column_map) - 2))\n#     sample(possible_values, 100, replace = TRUE)\n#   }\n#   \n#   df <- as.data.frame(lapply(response_maps, generate_sample_data))\n#   \n#   for(col in names(response_maps)) {\n#     map <- response_maps[[col]]\n#     df[[col]] <- map[as.numeric(df[[col]]) + 1] \n#   }\n#   df$CPAL.DEMO.007.2 <- factor(df$CPAL.DEMO.007.2)\n#   \n#   df$Annual2023Income <- sample(20000:120000, 100, replace = TRUE)\n#   \n#   df$CPAL.POLICY.035 <- sample(0:1, 100, replace = TRUE)\n#   \n#   zip_codes <- c(75052, 75217, 75211, 75228, 75243, 75043, 75040, 75150, 75227, 75115, 75064)\n#   \n#   df$ZIP_Code <- as.factor(sample(zip_codes, nrow(df), replace = TRUE))\n#   \n#   df$age_yr <- sample(18:70, 100, replace = TRUE)\n#   \n#   df$CPAL.BEN.001 <- sample(c(1,0,-98), 100, replace = TRUE)\n#   \n#   for (i in 1:5) {\n#     condition <- df$CPAL.BEN.001 == 1\n#     df[[paste0(\"CPAL.BEN.001.a_\", i)]] <- NA  # Initialize the new column with NAs\n#     df[[paste0(\"CPAL.BEN.001.a_\", i)]][condition] <- sample(c(1, NA), sum(condition), replace = TRUE)\n#   }\n# \n#   df$CPAL.BEN.001.b <- sample(c(1,0), 100, replace = TRUE)\n#   \n#   df$CPAL.JOB.015 <- sample(c(0,1,2,3,4), 100, replace = TRUE)\n#   \n#   for (i in c(1:5, 8:11, 13, 16)) {\n#     condition <- df$CPAL.JOB.015 == 1\n#     df[[paste0(\"CPAL.JOB.015.a_\", i)]] <- NA  # Initialize the new column with NAs\n#     df[[paste0(\"CPAL.JOB.015.a_\", i)]][condition] <- sample(c(1, NA), sum(condition), replace = TRUE)\n#   }  \n#   \n#   df$CPAL.JOB.008 <- sample(c(0,1,2,3,4,5,6), 100, replace = TRUE)\n#   \n#   df$POVERTYLine2023 <- sample(c(1,2,NA), 100, prob=c(.45,.45,.1), replace=TRUE)\n#   \n#   df$CPAL.EHQ.001 <- sample(c(0,1,2,3,4), 100, replace = TRUE)\n#   \n#   df$CPAL.EHQ.002 <- sample(c(0,1,2,3), 100, replace = TRUE)\n# \n#   df$CPAL.FSTR.001 <- sample(c(0,1,2,3), 100, replace = TRUE)\n#   \n#   df$CPAL.FTAX.001 <- sample(c(0,1,-98), 100, prob=c(.49,.49,.02), replace=TRUE)\n#   \n#   df$CPAL.DEBT.007 <- sample(c(1,2,3,4), 100, replace = TRUE)\n#   \n#   df$CPAL.HOME.005 <- sample(c(0,1,2), 100, replace = TRUE)\n#   df$CPAL.HOME.006 <- sample(c(0,1,2), 100, replace = TRUE)\n# \n#   df$CPAL.MH.009 <- sample(c(0,1,NA), 100, replace = TRUE)\n#   df$CPAL.MH.010 <- sample(c(0,1,NA), 100, replace = TRUE)\n#   \n#   df$CPAL.HEALTH.002 <- sample(c(2,1,-98), prob = c(.48,.48,.04), 100, replace = TRUE)\n#   df$CPAL.HEALTH.003.2 <- sample(c(2,1), 100, replace = TRUE)\n#   df$CPAL.HEALTH.004.2 <- sample(c(0,1), 100, replace = TRUE)\n# \n# \n# ##\n  \ndemographics <- c(names(response_maps), \"Annual2023Income\", \"ZIP_Code\")\n\n\n```\n\n::::: {.shadecontent}\n\n::: grid\n\n::: g-col-6\n\n##### Distribution of Respondents by Race\n\n```{r racedist, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.DEMO.007.2)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.1, label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size = 8) +\n  labs(fill = \"Race\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.text = element_text(size=14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\n```\n\n:::\n\n::: g-col-6\n\n##### Income Distribution of Respondents (Under $200,000)\n\n```{r incomedist, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\nggplot() +\n  geom_histogram(data = df %>% filter(Annual2023Income < 200000), aes(x = Annual2023Income, fill = palette_cpal_main[1]), binwidth = 5000, boundary = 0, alpha = 0.85) +\n  scale_x_continuous(\n    labels = scales::dollar_format(),\n    limits = c(0, 225000),\n    breaks = seq(0, 225000, by = 50000),\n    minor_breaks = seq(0, 225000, by = 10000) \n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    axis.text.x = element_text(size=16),\n    axis.text.y = element_text(size=16),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\n```\n\n:::\n\n::: g-col-6\n\n##### Median Income of Respondents by Race\n\n```{r raceinc, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  summarise(median_income = median(Annual2023Income, na.rm = TRUE)) %>%\n  ggplot(aes(x = median_income, y = CPAL.DEMO.007.2)) + \n  geom_col(fill = palette_cpal_main[1], size = 4, alpha = 0.8, width = 0.7) +\n  scale_x_continuous(labels = scales::dollar_format(), limits = c(0, 70000)) +\n  scale_y_discrete(labels = function(x) {\n    return(stringr::str_wrap(x, width = 22))\n  }) +\n  theme_minimal() +\n  theme(\n    axis.title = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = \"none\",\n    axis.text.x = element_text(size=14),\n    axis.text.y = element_text(size=14),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\n```\n\n:::\n\n::: g-col-6\n\n##### Age Distribution of Respondents\n\n```{r agedist, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  ggplot(aes(x = age_yr)) +\n    geom_histogram(binwidth = 2.5, alpha = 0.8, fill = palette_cpal_main[1]) +\n    scale_x_continuous(limits = c(0,80)) +\n    labs(x = \"Age\") + \n    theme_minimal() +\n    theme(\n      legend.position = \"none\",\n      axis.title.y = element_blank(),\n      axis.title.x = element_text(size=18),\n      axis.text.x = element_text(size=16),\n      axis.text.y = element_text(size=16),\n      plot.background = element_rect(fill = \"transparent\", colour = NA),\n      panel.background = element_rect(fill = \"transparent\", colour = NA),\n      strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\n```\n\n:::\n\n::: g-col-6\n\n##### Respondent Distribution by Zip Code\n\n```{r zipdist, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n\nzip_counts <- df %>%\n  count(CPAL.DEMO.001) %>%\n  mutate(GEOID = as.character(CPAL.DEMO.001))\n\nzctas_merged <- left_join(zctas_dallas, zip_counts, by = \"GEOID\") %>%\n  mutate(\n    n = case_when(\n      is.na(n) ~ 0,\n      TRUE ~ n\n  )) %>%\n  mutate(\n    per_capita = case_when(\n      estimate > 0 ~ n/estimate,\n      estimate == 0 ~ n/1000)\n  )\n\n# leaflet(zctas_merged) %>%\n#   addProviderTiles(\"CartoDB.Positron\") %>%\n#   addPolygons(\n#     fillColor = ~colorNumeric(\"YlGn\", per_capita)(per_capita),\n#     weight = 1,\n#     opacity = 1,\n#     color = \"white\",\n#     fillOpacity = 0.7,\n#     highlight = TRUE,\n#     label = ~as.character(GEOID),\n#     popup = paste0(\"ZIP: \", GEOID, \"<br/>Per capita: \", formatted_per_capita, \"<br/>Count: \", n)\n#   ) %>%\n#   addLegend(pal = colorNumeric(\"YlGn\", zctas_merged$per_capita, n = 5), values = zctas_merged$per_capita, title = \"Count\")\n\nleaflet(zctas_merged) %>%\n  addProviderTiles(\"CartoDB.Positron\") %>%\n  addPolygons(\n    fillColor = ~colorNumeric(\"YlGn\", n)(n),\n    weight = 1,\n    opacity = 1,\n    color = \"white\",\n    fillOpacity = 0.7,\n    highlight = TRUE,\n    label = ~as.character(GEOID),\n    popup = ~paste0(\"ZIP: \", GEOID, \"<br/>Per capita: \", round(per_capita*1000, digits = 2), \"/1000<br/>Count: \", n)\n  ) %>%\n  addLegend(pal = colorNumeric(\"YlGn\", zctas_merged$n, n = 5), values = zctas_merged$n, title = \"Count\", position = \"bottomright\", labFormat = labelFormat(transform = function(x) round(x)))\n\n```\n\n:::\n\n::: g-col-6\n\n##### Respondents by Number of Children Age 6 or Younger\n\n```{r child6, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  mutate(`Number of children age 6 or younger` = case_when(\n    is.na(CPAL.CBCL.015) ~ \"None\",\n    TRUE ~ as.character(CPAL.CBCL.015)\n  )) %>%\n  group_by(`Number of children age 6 or younger`) %>%\n  summarise(\n    `Median income` = scales::dollar(median(Annual2023Income, na.rm = TRUE)),\n    `Median respondent age` = paste0(round(median(`age_yr`, na.rm = TRUE), digits = 0), \" yrs.\"),\n    n = n()\n  ) %>%\n  ungroup() %>%\n  datatable(options = list(paging = FALSE,\n                           searching = FALSE,                            \n                           info = FALSE),\n            rownames = FALSE)\n\n```\n\n:::\n\n:::\n\n:::::\n\n```{r mapping, output = FALSE}\n# df %>%\n#   mutate(housing_problems = case_when(\n#     \n#   ))\n```\n\n# Categories\n\n::: {.callout-note appearance=\"simple\"}\n\n## Core Questions\n\nStarred <i class=\"bi bi-star\"></i> questions are considered \"core\" insights.\n\n:::\n\n## Benefits and benefits delivery\n\n::: grid\n::: g-col-5\n**CPAL.JOB.015**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> Are you receiving any sort of public or employment benefits, such as Supplemental Nutrition Assistance Program (SNAP), Temporary Assistance for Needy Families (TANF), Social Security Income (SSI) or others?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.JOB.015)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r benefits01, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.JOB.015)) %>%\n  mutate(CPAL.JOB.015 = case_when(\n    CPAL.JOB.015 == 1 ~ \"Yes\",\n    CPAL.JOB.015 == 0 ~ \"No\",\n    CPAL.JOB.015 == 2 ~ \"Didn't qualify\",\n    CPAL.JOB.015 == 3 ~ \"Intend to apply\",\n    CPAL.JOB.015 == 4 ~ \"Applied and waiting for a decision\"\n  )) %>%\n  group_by(CPAL.JOB.015) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.JOB.015)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size = 6) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \n                               \"No\" = palette_cpal_main[2], \n                               \"Didn't qualify\" = \"#b0663e\",\n                               \"Intend to apply\" = \"#4c8a4a\",\n                               \"Applied and waiting for a decision\" = palette_cpal_main[4]),\n                    breaks = c(\"Yes\", \"No\", \"Didn't qualify\", \"Intend to apply\", \"Applied and waiting for a decision\")\n                    )\n\n```\n\n*Percent* of those receiving benefits who *receive* benefits for...\n\n```{r benefits1, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.JOB.015.a_\")) %>% \n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1 & CPAL.JOB.015 == 1, na.rm = T)/sum(CPAL.JOB.015 == 1, na.rm = T))) %>% \n  arrange(desc(percentage)) %>%\n  ggplot(aes(x = percentage, y = answer, fill = palette_cpal_main[1])) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = 1.1, \n        size = 6, \n        colour = \"white\") +\n    geom_text(aes(label = ifelse(percentage <= 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1, \n        size = 6, \n        colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_y_discrete(labels = c(\"CPAL.JOB.015.a_1\" = \"Health or medical services\",\n                              \"CPAL.JOB.015.a_2\" = \"Food\",\n                              \"CPAL.JOB.015.a_3\" = \"Income (i.e. TANF)\",\n                              \"CPAL.JOB.015.a_4\" = \"Disability (non-military)\",\n                              \"CPAL.JOB.015.a_5\" = \"Military benefits\",\n                              \"CPAL.JOB.015.a_8\" = \"Housing\",\n                              \"CPAL.JOB.015.a_9\" = \"Childcare\",\n                              \"CPAL.JOB.015.a_10\" = \"Other\",\n                              \"CPAL.JOB.015.a_11\" = \"Transportation\",\n                              \"CPAL.JOB.015.a_13\" = \"Clothing\",\n                              \"CPAL.JOB.015.a_16\" = \"Unemployment\"\n                              ))\n\n```\n:::\n\n::: g-col-5\n**CPAL.BEN.001.b**\n\n> Do your food benefits make it possible to buy enough groceries each month?\n\n**Rate of response (all respondents):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.BEN.001.b)))/nrow(df), accuracy = 0.1)`\n\n**Rate of response (receives food benefits):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.BEN.001.b)))/nrow(df %>% filter(!is.na(CPAL.BEN.001.b))), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r benefits03, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.BEN.001.b)) %>%\n  mutate(CPAL.BEN.001.b = case_when(\n    CPAL.BEN.001.b == 1 ~ \"Yes\",\n    CPAL.BEN.001.b == 0 ~ \"No\",\n    CPAL.BEN.001.b == -98 ~ \"Unsure\",\n  )) %>%\n  group_by(CPAL.BEN.001.b) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.BEN.001.b)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.1, label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 16),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Unsure\" = \"#ababab\"),\n                    breaks = c(\"Yes\", \"No\", \"Unsure\"))\n\n```\n:::\n\n::: g-col-5\n**CPAL.BEN.001**\n\n> Have you tried to apply for a federal or local benefit in the last year, such as SNAP, WIC, Medicaid, or rental assistance?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.JOB.015)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r benefits02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  mutate(CPAL.BEN.001 = case_when(\n    CPAL.BEN.001 == 1 ~ \"Yes\",\n    CPAL.BEN.001 == 0 ~ \"No\",\n    CPAL.BEN.001 == -98 ~ \"Unsure\",\n    is.na(CPAL.BEN.001) ~ \"Unsure\"\n  )) %>%\n  group_by(CPAL.BEN.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.BEN.001)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.15, label = ifelse(prop > 0.05, scales::percent(prop, scale = 100), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size = 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 16),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Unsure\" = \"#ababab\"),\n                    breaks = c(\"Yes\", \"No\", \"Unsure\"))\n\n```\n\n*Percent* of those *applying* for benefits who found that...\n\n```{r benefits2, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.BEN.001.a_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1 & CPAL.BEN.001 == 1, na.rm = T)/sum(CPAL.BEN.001 == 1, na.rm = T))) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[1-3]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = 1.1, \n          size = 8, \n          colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1, \n        size = 8, \n        colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.BEN.001.a_1\" = \"The application was simple and easy to complete\",\n                 \"CPAL.BEN.001.a_2\" = \"I felt confident that I would receive help soon\",\n                 \"CPAL.BEN.001.a_3\" = \"I was able to access support in completing the application\" ,\n                 \"CPAL.BEN.001.a_4\" = \"The process was frustrating\",\n                 \"CPAL.BEN.001.a_5\" = \"It was hard to know what was needed to complete the application\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n:::\n\n:::\n\n## Employment and income\n\n::: grid\n::: g-col-5\n**CPAL.JOB.008**\n\n> Current employment status\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.JOB.008)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r empl01, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.JOB.008)) %>%\n  mutate(CPAL.JOB.008 = case_when(\n    CPAL.JOB.008 == 1 ~ \"Working (either full- or part-time)\",\n    CPAL.JOB.008 == 2 ~ \"Unemployed or laid off\",\n    CPAL.JOB.008 == 3 ~ \"Temporarily out of work or furloughed\",\n    CPAL.JOB.008 == 4 ~ \"Other\",\n    CPAL.JOB.008 == 5 ~ \"Stay-at-home parent (not seeking work)\",\n    CPAL.JOB.008 == 6 ~ \"Student (either working or not working)\"\n  )) %>%\n  group_by(CPAL.JOB.008) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.JOB.008)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.05, label = ifelse(prop > 0.1, scales::percent(prop * 100, scale = 1, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size = 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Working (either full- or part-time)\" = palette_cpal_main[1], \n                               \"Unemployed or laid off\" = palette_cpal_main[2], \n                               \"Temporarily out of work or furloughed\" = \"#b0663e\",\n                               \"Student (either working or not working)\" = \"#4c8a4a\",\n                               \"Stay-at-home parent (not seeking work)\" = palette_cpal_main[4],\n                               \"Other\" = \"#ababab\"),\n                    breaks = c(\"Working (either full- or part-time)\",\n                               \"Unemployed or laid off\",\n                               \"Temporarily out of work or furloughed\", \n                               \"Stay-at-home parent (not seeking work)\",\n                               \"Student (either working or not working)\",\n                               \"Other\")\n                    )\n\n```\n:::\n\n:::\n\n::: grid\n\n::: g-col-5\n**Annual2023Income**\n\n> Reported income from last year\n\n**Rate of Response:** `r round((nrow(df %>% filter(!is.na(Annual2023Income)))/nrow(df))*100, 2)`\n\n**Median Income:** `r scales::dollar_format()(median(df$Annual2023Income, na.rm = TRUE))`\n\n**Maximum Income:** `r scales::dollar_format()(max(df$Annual2023Income, na.rm = TRUE))`\n:::\n\n::: g-col-7\n\n&nbsp;\n\nThe Dallas County median income in 2021 was **`r scales::dollar(dallas_county_acs %>% pull(B19013_001))`**, so *this survey sample is lower-income* than Dallas County as a whole.\n\n```{r empl02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(Annual2023Income), Annual2023Income < 200000, Annual2023Income > 2000) %>%\n  ggplot(aes(x = factor(1), y = Annual2023Income)) + \n  geom_violin(trim=FALSE, fill=palette_cpal_main[1], color=palette_cpal_main[1]) + \n  labs(title = NULL,\n       x = NULL,\n       y = NULL) + \n  theme_minimal() +\n  theme(axis.title.x=element_blank(),\n        axis.ticks.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.text.y = element_text(size=16)) +\n  scale_y_continuous(labels = scales::dollar_format())\n\n```\n\n:::\n\n:::\n\n::: {.column-margin}\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n`r paste0(nrow(df %>% filter(Annual2023Income > 199999.99)), \" respondents reporting income above $200,000 not visualized. Maximum reported income is \", scales::dollar(max(df$Annual2023Income, na.rm = T)))`\n:::\n\n\n::: grid\n\n::: g-col-5\n**POVERTYLine2023**\n\n> Above or below poverty line\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(POVERTYLine2023)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\nThe Dallas County poverty rate in 2021 was **`r scales::percent(dallas_county_acs %>% pull(povertyRate))`**, so *this survey sample is lower-income* than Dallas County as a whole.\n\n```{r empl03, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(POVERTYLine2023)) %>%\n  mutate(POVERTYLine2023 = case_when(\n    POVERTYLine2023 == 1 ~ \"Under the poverty line\",\n    POVERTYLine2023 == 2 ~ \"Over the poverty line\",\n    TRUE ~ as.character(POVERTYLine2023)\n  )) %>%\n  count(POVERTYLine2023) %>%\n  mutate(prop = n / sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = POVERTYLine2023)) +\n  geom_bar(stat = \"identity\", width = 0.4) +\n  geom_text(aes(label = scales::percent(prop, accuracy = 0.1), y = prop, size = 2), color = \"white\", position = position_stack(vjust = 0.5)) +\n  geom_text(aes(label = POVERTYLine2023, y = prop, x = 1.3, size = 2), color = \"dimgrey\", position = position_stack(vjust = 0.5)) +\n  labs(title = NULL,\n       x = NULL,\n       y = NULL) +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    legend.position = \"none\"\n  ) +\n  scale_size_continuous(range = c(4, 6))\n\n# df %>%\n#   filter(!is.na(POVERTYLine2023), !is.na(CPAL.DEMO.007.2)) %>%\n#   count(POVERTYLine2023, CPAL.DEMO.007.2) %>%\n#   group_by(CPAL.DEMO.007.2) %>%\n#   mutate(prop = n / sum(n)) %>%\n#   ggplot(aes(x = CPAL.DEMO.007.2, y = prop, fill = interaction(CPAL.DEMO.007.2, POVERTYLine2023))) +\n#   geom_bar(stat = \"identity\", position = \"stack\", width = 0.8) +\n#   geom_text(data = . %>% filter(POVERTYLine2023 == \"Under\"),\n#             aes(label = scales::percent(prop), y = prop),\n#             color = \"white\", size = 4, \n#             # position = position_stack(vjust = 0.5)\n#             ) +\n#   scale_fill_manual(values = c(scales::alpha(palette_cpal_main[c(1:4,6:9)], 0.5), palette_cpal_main[c(1:4,6:9)]), \n#                     # name = \"Race\",\n#                     # breaks = unique(interaction(df$CPAL.DEMO.007.2, df$POVERTYLine2023)),\n#                     labels = rep(unique(df$CPAL.DEMO.007.2), 2)) + \n#   labs(title = NULL, x = NULL, y = NULL) +\n#   scale_y_continuous(labels = scales::percent) +\n#   theme_minimal() +\n#   theme(\n#     axis.text = element_blank(),\n#     axis.title = element_blank(),\n#     axis.ticks = element_blank(),\n#     panel.grid = element_blank()\n#   )\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.EHQ.001**\n\n> Which of the following best describes what has happened to your family income in the past month?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.EHQ.001)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n**`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.001), CPAL.EHQ.001 < 2))/nrow(df %>% filter(is.numeric(CPAL.EHQ.001))), accuracy = 0.1)`** of respondents report a *decrease* in monthly income, while only **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.001), CPAL.EHQ.001 > 2))/nrow(df %>% filter(is.numeric(CPAL.EHQ.001))), accuracy = 0.1)`** report an *increase*.\n\n```{r empl04, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  mutate(CPAL.EHQ.001 = factor(\n    case_when(\n      CPAL.EHQ.001 == 0 ~ \"Has decreased very much\",\n      CPAL.EHQ.001 == 1 ~ \"Has decreased somewhat\",\n      CPAL.EHQ.001 == 2 ~ \"Has stayed the same\",\n      CPAL.EHQ.001 == 3 ~ \"Has increased somewhat\",\n      CPAL.EHQ.001 == 4 ~ \"Has increased very much\",\n      TRUE ~ NA\n    ),\n    levels = c(\"Has decreased very much\", \n               \"Has decreased somewhat\", \n               \"Has stayed the same\", \n               \"Has increased somewhat\", \n               \"Has increased very much\")\n  )) %>%\n  filter(!is.na(CPAL.EHQ.001)) %>%\n  group_by(CPAL.EHQ.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = prop, y = CPAL.EHQ.001, fill = CPAL.EHQ.001)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  geom_text(aes(label = ifelse(prop > 0.05, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), hjust = 1.1, size = 8, colour = \"white\") +\n  geom_text(aes(label = ifelse(prop < 0.05, scales::percent(prop, scale = 100), \"\")), \n          position = position_dodge(width=0.9), hjust = -0.1, size = 8, colour = \"grey\") +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 14),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_fill_manual(values = colorRampPalette(c(palette_cpal_main[2], \"#ababab\", palette_cpal_main[1]))(5),\n                    breaks = c(\"Has decreased very much\",\n                               \"Has decreased somewhat\",\n                               \"Has stayed the same\", \n                               \"Has increased somewhat\",\n                               \"Has increased very much\")\n                    ) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), expand = expansion(mult = c(0.1, 0)))\n\n```\n\n#### **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.001), CPAL.EHQ.001 < 2, !is.na(CPAL.CBCL.015), CPAL.CBCL.015 > 0))/nrow(df %>% filter(!is.na(CPAL.CBCL.015), CPAL.CBCL.015 > 0, is.numeric(CPAL.EHQ.001))), accuracy = 0.1)`** of respondents with at least one child aged *6 or younger* report a *decrease* in monthly income, compared to **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.001), CPAL.EHQ.001 > 2, !is.na(CPAL.CBCL.015), CPAL.CBCL.015 > 0))/nrow(df %>% filter(!is.na(CPAL.CBCL.015), CPAL.CBCL.015 > 0, is.numeric(CPAL.EHQ.001))), accuracy = 0.1)`** reporting an *increase*.\n\n:::\n\n::: g-col-5\n**CPAL.EHQ.002**\n\n> Which of the following best describes your family financially at this time?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.EHQ.002)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n**`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.002), CPAL.EHQ.002 > 0))/nrow(df), accuracy = 0.1)`** of respondents report at least some family *financial problems*.\n\n```{r empl05, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.EHQ.002)) %>%\n  mutate(CPAL.EHQ.002 = factor(\n    case_when(\n      CPAL.EHQ.002 == 0 ~ \"No problems\",\n      CPAL.EHQ.002 == 1 ~ \"Minor problems\",\n      CPAL.EHQ.002 == 2 ~ \"Major problems\",\n      CPAL.EHQ.002 == 3 ~ \"Extreme problems\",\n    ),\n    levels = c(\"No problems\", \"Minor problems\", \"Major problems\", \"Extreme problems\")\n  )) %>%\n  group_by(CPAL.EHQ.002) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = prop, y = CPAL.EHQ.002, fill = CPAL.EHQ.002)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  geom_text(aes(label = ifelse(prop > 0.1, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = 1.1, \n            size = 8, \n            colour = \"white\") +\n  geom_text(aes(label = ifelse(prop <= 0.1, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1,\n        size = 8, \n        colour = \"grey\") +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 14),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_fill_manual(values = colorRampPalette(c(\"#ABABAB\", palette_cpal_main[2], \"#592523\"))(5),\n                    c(\"No problems\", \"Minor problems\", \"Major problems\", \"Extreme problems\")) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), expand = expansion(mult = c(0.1, 0)))\n\n\n```\n\n*White respondents* are least likely to report any financial hardships.\n\n```{r empl05_2, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.EHQ.002), CPAL.DEMO.007.2 %in% c(\n    \"Hispanic, Latine, or Latin origin\",\n    \"Black or African American\",\n    \"White\"\n  )) %>%\n  mutate(CPAL.EHQ.002 = factor(\n    case_when(\n      CPAL.EHQ.002 == 0 ~ 0,\n      CPAL.EHQ.002 > 0 ~ 1\n    )\n  )) %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  summarize(no = sum(CPAL.EHQ.002 == 0)/n(), yes = sum(CPAL.EHQ.002 == 1)/n()) %>%\n  gather(key = \"financial_problems\", value = \"prop\", -CPAL.DEMO.007.2) %>%\n  ggplot(aes(x = CPAL.DEMO.007.2, y = prop, fill = palette_cpal_main[1], alpha = financial_problems)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  geom_text(aes(label = ifelse(financial_problems == \"yes\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n          position = position_identity(), hjust = 1.1, size = 8, colour = \"white\") +\n  coord_flip() +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 12),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_alpha_manual(values = c(0.2, 1))\n\n\n\n```\n\n**`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.002), CPAL.EHQ.002 > 0, !is.na(POVERTYLine2023), as.numeric(POVERTYLine2023) == 1))/nrow(df %>% filter(is.numeric(CPAL.EHQ.002), !is.na(POVERTYLine2023), as.numeric(POVERTYLine2023) == 1)), accuracy = 0.1)`** of those *under* the poverty line report *family financial problems*, as do **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.002), CPAL.EHQ.002 > 0, !is.na(POVERTYLine2023), as.numeric(POVERTYLine2023) == 2))/nrow(df %>% filter(is.numeric(CPAL.EHQ.002), !is.na(POVERTYLine2023), as.numeric(POVERTYLine2023) == 2)), accuracy = 0.1)`** of those *above* the poverty line.**\n\n```{r empl05_3, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.EHQ.002), !is.na(POVERTYLine2023)) %>%\n  mutate(\n    CPAL.EHQ.002 = factor(\n      case_when(\n        CPAL.EHQ.002 == 0 ~ 0,\n        CPAL.EHQ.002 > 0 ~ 1)),\n    POVERTYLine2023 = as.factor(POVERTYLine2023)\n  ) %>%\n  group_by(POVERTYLine2023) %>%\n  summarize(no = sum(CPAL.EHQ.002 == 0)/n(), yes = sum(CPAL.EHQ.002 == 1)/n()) %>%\n  mutate(POVERTYLine2023 = recode(POVERTYLine2023, `1` = \"Under the poverty line, reporting problems\", `2` = \"Over the poverty line, reporting problems\")) %>%\n  gather(key = \"financial_problems\", value = \"prop\", -POVERTYLine2023) %>%\n  ggplot(aes(x = POVERTYLine2023, y = prop, fill = POVERTYLine2023, alpha = financial_problems)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  geom_text(aes(label = ifelse(financial_problems == \"yes\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n          position = position_identity(), \n          hjust = 1.1, \n          size = 8, \n          colour = \"white\") +\n  coord_flip() +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 12),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_color_manual(values = c(\"Over the poverty line, reporting problems\" = palette_cpal_main[1], \n                                \"Under the poverty line, reporting problems\" = palette_cpal_main[2]),\n                     breaks = c(\n                       \"Over the poverty line, reporting problems\",\n                       \"Under the poverty line, reporting problems\"\n                     )) +\n  scale_alpha_manual(values = c(0.2, 1))\n\n```\n:::\n\n::: g-col-5\n**CPAL.FSTR.001**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> In the past month, how hard has it been for your family to pay for the very basics like food, housing, medical care, and heating?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.FSTR.001)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n**`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.FSTR.001), CPAL.FSTR.001 > 0))/nrow(df), accuracy = 0.1)`** of respondents say paying for *basics* is *difficult*.\n\n**`r scales::percent(1 - nrow(df %>% filter(is.numeric(CPAL.FSTR.001), CPAL.FSTR.001 > 0, POVERTYLine2023 == 1))/nrow(df %>% filter(is.numeric(CPAL.FSTR.001), CPAL.FSTR.001 > 0)), accuracy = 0.1)`** of respondents who report difficulty paying for *basics* are *over* the poverty line.\n\n\n```{r empl06, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.FSTR.001)) %>%\n  mutate(CPAL.FSTR.001 = factor(\n    case_when(\n      CPAL.FSTR.001 == 0 ~ \"Not very hard\",\n      CPAL.FSTR.001 == 1 ~ \"Somewhat hard\",\n      CPAL.FSTR.001 == 2 ~ \"Hard\",\n      CPAL.FSTR.001 == 3 ~ \"Very hard\",\n    ),\n    levels = c(\"Not very hard\", \"Somewhat hard\", \"Hard\", \"Very hard\")\n  )) %>%\n  group_by(CPAL.FSTR.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = prop, y = CPAL.FSTR.001, fill = CPAL.FSTR.001)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  geom_text(aes(label = ifelse(prop > 0.10, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = 1.1, \n            size = 8, \n            colour = \"white\") +\n  geom_text(aes(label = ifelse(prop <= 0.10, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = -0.1, \n            size = 8, \n            colour = \"grey\") +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 16),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_fill_manual(values = colorRampPalette(c(\"#ABABAB\", palette_cpal_main[2], \"#592523\"))(5),\n                    c(\"Not very hard\", \"Somewhat hard\", \"Hard\", \"Very hard\")) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), expand = expansion(mult = c(0.1, 0)))\n\n```\n\n\n#### **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.FSTR.001), CPAL.FSTR.001 > 0, !is.na(CPAL.CBCL.015)))/nrow(df %>% filter(!is.na(CPAL.CBCL.015))), accuracy = 0.1)`** of respondents with at least one child *6 years old or younger* report *difficulty paying for basics*.\n\n\n```{r difficultypanel}\n\ndf %>%\n  filter(Annual2023Income < 10000000, !is.na(CPAL.FSTR.001)) %>%\n  mutate(CPAL.FSTR.001 = factor(\n    case_when(\n      CPAL.FSTR.001 == 0 ~ \"Not very hard\",\n      CPAL.FSTR.001 == 1 ~ \"Somewhat hard\",\n      CPAL.FSTR.001 == 2 ~ \"Hard\",\n      CPAL.FSTR.001 == 3 ~ \"Very hard\",\n    ),\n    levels = c(\"Not very hard\", \"Somewhat hard\", \"Hard\", \"Very hard\")\n  )) %>%\n  group_by(CPAL.FSTR.001) %>%\n  summarize(`Median income` = scales::dollar(median(Annual2023Income, na.rm = TRUE)),\n            `Median respondent age` = paste0(as.character(round(median(age_yr, na.rm = TRUE)), digits = 2), \" yrs.\"),\n            `Pct. with children under 6` = scales::percent(mean(ChildUnder6))) %>%\n  datatable(options = list(paging = FALSE,\n                           searching = FALSE,\n                           info = FALSE\n                           ),\n            rownames = FALSE)\n```\n\n&nbsp;\n\n```{r difficultymap}\n\nbasics_df <- df %>%\n  filter(!is.na(CPAL.FSTR.001)) %>%\n  group_by(CPAL.DEMO.001) %>%\n  summarize(pct = sum(CPAL.FSTR.001 > 0, na.rm = TRUE) / n(),\n            n = n(), \n            n_true = sum(CPAL.FSTR.001 > 0, na.rm = TRUE),\n            .groups = 'drop') %>%\n  mutate(GEOID = as.character(CPAL.DEMO.001)) %>%\n  left_join(zctas_dallas, by = \"GEOID\") %>%\n  mutate(\n    per_capita = case_when(\n      estimate > 0 ~ n/estimate,\n      TRUE ~ 0)\n  ) %>%\n  filter(!is.na(NAME)) %>%\n  st_as_sf()\n\nleaflet(basics_df) %>%\n  addProviderTiles(\"CartoDB.Positron\") %>%\n  addPolygons(\n    fillColor = ~colorNumeric(\"Reds\", pct)(pct),\n    weight = 1,\n    opacity = 1,\n    color = \"white\",\n    fillOpacity = 0.7,\n    highlight = TRUE,\n    label = ~as.character(GEOID),\n    popup = ~paste0(\"ZIP: \", GEOID, \n                    \"<br/>Percent struggling: \", scales::percent(pct, accuracy = 0.1),\n                    \"<br/>Count: \", n, \n                    \"<br/>Per capita: \", round(per_capita*1000, digits = 2), \"/1000\"\n                    )\n  ) %>%\n  addLegend(\n    pal = colorNumeric(\"Reds\", basics_df$pct),\n    values = basics_df$pct,\n    labels = scales::percent(basics_df$pct, accuracy = 0.1), \n    title = \"Percent who report <br/>paying for basics is difficult\")\n\n```\n:::\n\n::: g-col-5\n**CPAL.FTAX.001**\n\n> Did you file your taxes in 2023 (for the income year 2022)?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.FTAX.001)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r taxes, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.FTAX.001)) %>%\n  mutate(CPAL.FTAX.001 = case_when(\n    CPAL.FTAX.001 == 1 ~ \"Yes\",\n    CPAL.FTAX.001 == 0 ~ \"No\",\n    CPAL.FTAX.001 == -97 ~ \"Prefer not to answer\"\n  )) %>%\n  group_by(CPAL.FTAX.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.FTAX.001)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(label = ifelse(prop > 0.10, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Prefer not to answer\" = \"#ababab\"),\n                    breaks = c(\"Yes\", \"No\", \"Prefer not to answer\"))\n\n\ndf %>% \n  filter(rowSums(is.na(select(., starts_with(\"CPAL.FTAX.001.b_\")))) != length(select(., starts_with(\"CPAL.FTAX.001.b_\")))) %>%\n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.FTAX.001.b_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1 & CPAL.FTAX.001 == 1, na.rm = T)/sum(CPAL.FTAX.001 == 1, na.rm = T))) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[7]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.4, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = 1.1, \n          size = 8, \n          colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.4, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1, \n        size = 8, \n        colour = \"grey\") +\n  labs(title = \"Tax filers who found that...\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_text(size = 14),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.FTAX.001.b_1\" = \"I couldn't find the right forms\",\n                 \"CPAL.FTAX.001.b_2\" = \"I found it difficult to complete the right forms\",\n                 \"CPAL.FTAX.001.b_3\" = \"I was confused on where to begin\" ,\n                 \"CPAL.FTAX.001.b_4\" = \"I had trouble finding time\",\n                 \"CPAL.FTAX.001.b_5\" = \"I didn't understand how to file\",\n                 \"CPAL.FTAX.001.b_6\" = \"I needed help but didn't know where to find it\",\n                 \"CPAL.FTAX.001.b_7\" = \"I didn't have any challenges\",\n                 \"CPAL.FTAX.001.b_8\" = \"I experienced a challenge not listed\")\n    return(stringr::str_wrap(recodes[x], width = 40))\n  })\n\n\ndf %>% \n  filter(rowSums(is.na(select(., starts_with(\"CPAL.FTAX.001.c_\")))) != length(select(., starts_with(\"CPAL.FTAX.001.c_\"))))   %>%\n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.FTAX.001.c_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1 & CPAL.FTAX.001 == 0, na.rm = T)/sum(CPAL.FTAX.001 == 0, na.rm = T))) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[7]$\") ~ palette_cpal_main[2],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.4, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = 1.1, \n          size = 8, \n          colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.4, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1, \n        size = 8, \n        colour = \"grey\") +\n  labs(title = stringr::str_wrap(\"Respondents who didn't do their taxes because...\", width = 40)) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_text(size = 14),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.FTAX.001.c_1\" = \"I don't understand what forms I need\",\n                 \"CPAL.FTAX.001.c_2\" = \"I am confused on where to begin\",\n                 \"CPAL.FTAX.001.c_3\" = \"I don't have time\" ,\n                 \"CPAL.FTAX.001.c_4\" = \"I don't understand how to file\",\n                 \"CPAL.FTAX.001.c_5\" = \"I need help and I don't know where to find it\",\n                 \"CPAL.FTAX.001.c_6\" = \"I don't think I make enough to file\",\n                 \"CPAL.FTAX.001.c_7\" = \"I experienced a challenge not listed\")\n    return(stringr::str_wrap(recodes[x], width = 35))\n  })\n\n\n```\n\n:::\n:::\n\n## Healthcare and childcare\n\n::: grid\n\n::: g-col-5\n**CPAL.HEALTH.001.a**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> Which of the following best represents your health insurance coverage?\n:::\n:::\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.POLICY.016\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n```{r healthcare001, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.HEALTH.001.a\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"10$\") ~ palette_cpal_main[2],\n      stringr::str_detect(answer, \"997$|998$|999$\") ~ palette_cpal_main[5],\n      TRUE ~ palette_cpal_main[1]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.25, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.25, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\nscale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.HEALTH.001.a_1\" = \"Insurance through current or former employer\",\n                 \"CPAL.HEALTH.001.a_2\" = \"Self-pay\",\n                 \"CPAL.HEALTH.001.a_3\" = \"Medicare\" ,\n                 \"CPAL.HEALTH.001.a_4\" = \"Medicaid\",\n                 \"CPAL.HEALTH.001.a_5\" = \"TRICARE\",\n                 \"CPAL.HEALTH.001.a_6\" = \"Enrolled for VA healthcare\",\n                 \"CPAL.HEALTH.001.a_7\" = \"Indian Health Service\",\n                 \"CPAL.HEALTH.001.a_8\" = \"Other\",         \n                 \"CPAL.HEALTH.001.a_10\" = \"Not covered\",\n                 \"CPAL.HEALTH.001.a_997\" = \"Do not wish to disclose\",\n                 \"CPAL.HEALTH.001.a_998\" = \"Unsure\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.HEALTH.002**\n\n> Are your children that are between 0 and 5 years of age covered by any kind of health insurance?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HEALTH.002)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.HEALTH.002), CPAL.HEALTH.002 != -97) %>%\n  mutate(CPAL.HEALTH.002 = factor(\n    case_when(\n      CPAL.HEALTH.002 == 1 ~ \"Covered\",\n      CPAL.HEALTH.002 == 2 ~ \"Not covered\",\n      CPAL.HEALTH.002 == -98 ~ \"I don't know\",\n      TRUE ~ NA\n    ),\n    levels = c(\"Covered\", \n               \"Not covered\",\n               \"I don't know\")\n  )) %>%\n  filter(!is.na(CPAL.HEALTH.002)) %>%\n  group_by(CPAL.HEALTH.002) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HEALTH.002)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Covered\" = palette_cpal_main[1], \"Not covered\" = palette_cpal_main[2], \"I don't know\" = \"#ababab\"),\n                    breaks = c(\"Covered\", \"Not covered\", \"I don't know\"))\n\n```\n:::\n\n::: g-col-5\n**CPAL.HEALTH.003.2**\n\n> At any time in the last month, did you DELAY getting medical care (including physical or mental health visits)?\n\n**Rate of response (if applicable):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HEALTH.003.2)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care00, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.HEALTH.004.2), CPAL.HEALTH.003.2 != -97) %>%\n  mutate(CPAL.HEALTH.003.2 = factor(\n    case_when(\n      CPAL.HEALTH.003.2 == 1 ~ \"Yes\",\n      CPAL.HEALTH.003.2 == 0 ~ \"No\",\n      CPAL.HEALTH.003.2 == -98 ~ \"I don't know\"\n    ),\n    levels = c(\"Yes\", \n               \"No\",\n               \"I don't know\"\n               )\n  )) %>%\n  group_by(CPAL.HEALTH.003.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HEALTH.003.2)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.25,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size=7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(palette_cpal_main[1], palette_cpal_main[2], \"#ababab\"),\n                    breaks = c(\"Yes\",\n                               \"No\",\n                               \"I don't know\"\n                               )\n                    )\n```\n:::\n\n::: g-col-5\n**CPAL.POLICY.035**\n\n> Are you currently looking for childcare?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.POLICY.035)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care01, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.POLICY.035)) %>%\n  mutate(CPAL.POLICY.035 = factor(\n    case_when(\n      CPAL.POLICY.035 == 1 ~ \"Yes\",\n      CPAL.POLICY.035 == 0 ~ \"No\",\n    ),\n    levels = c(\"Yes\", \n               \"No\")\n  )) %>%\n  group_by(CPAL.POLICY.035) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.POLICY.035)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.2, label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2]),\n                    breaks = c(\"Yes\", \"No\"))\n\n```\n\n```{r care01_2, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>%\n  filter(!is.na(CPAL.POLICY.035), CPAL.POLICY.035 != -99, !is.na(Annual2023Income)) %>%\n  mutate(CPAL.POLICY.035 = factor(\n    CPAL.POLICY.035,\n  levels = c(0, \n             1)\n  )) %>%\n  mutate(`Income Bracket` = factor(case_when(\n      Annual2023Income < 15000 ~ \"Less than $15,000\",\n      Annual2023Income >= 15000 & Annual2023Income < 24999 ~ \"$15,000 to $24,999\",\n      Annual2023Income >= 25000 & Annual2023Income < 34999 ~ \"$25,000 to $34,999\",\n      Annual2023Income >= 35000 & Annual2023Income < 49999 ~ \"$35,000 to $49,999\",\n      Annual2023Income >= 50000 & Annual2023Income < 74999 ~ \"$50,000 to $74,999\",\n      Annual2023Income >= 75000 & Annual2023Income < 99999 ~ \"$75,000 to $99,999\",\n      Annual2023Income >= 100000 & Annual2023Income < 149999 ~ \"$100,000 to $150,999\",\n      Annual2023Income >= 150000 ~ \"$150,000 and above\"\n    ),\n    levels = c(\"Less than $15,000\",\n               \"$15,000 to $24,999\",\n               \"$25,000 to $34,999\",\n               \"$35,000 to $49,999\",\n               \"$50,000 to $74,999\",\n               \"$75,000 to $99,999\",\n               \"$100,000 to $150,999\",\n               \"$150,000 and above\")\n  )) %>%\n  group_by(`Income Bracket`) %>%\n  summarize(`Not looking` = sum(CPAL.POLICY.035 == 1)/n(), `Looking` = sum(CPAL.POLICY.035 == 0)/n()) %>%\n  gather(key = \"childcare\", value = \"prop\", -`Income Bracket`) %>%\n  ggplot(aes(x = `Income Bracket`, y = prop, fill = `Income Bracket`, alpha = childcare)) +\n  geom_text(aes(label = ifelse(childcare == \"Not looking\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n        position = position_stack(), hjust = -0.1, size = 8, colour = \"grey\") +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  coord_flip() +\n  labs(title = \"Looking for childcare by income\") +\n  theme(\n    axis.text.y = element_text(size = 16),\n    axis.title = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_alpha_manual(values = c(0.2, 1))\n```\n:::\n\n::: g-col-5\n**CPAL.POLICY.037**\n\n> Have you experienced disruptions to your childcare in the past month?\n\n**Rate of response (if applicable):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.POLICY.037), CPAL.POLICY.037 != -99))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care001, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.POLICY.037), CPAL.POLICY.037 != -99) %>%\n  mutate(CPAL.POLICY.037 = factor(\n    case_when(\n      CPAL.POLICY.037 == 0 ~ \"No disruptions\",\n      CPAL.POLICY.037 == 1 ~ \"Disruptions\",\n    ),\n    levels = c(\"No disruptions\", \n               \"Disruptions\")\n  )) %>%\n  group_by(CPAL.POLICY.037) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n    ggplot(aes(x = \"\", y = prop, fill = CPAL.POLICY.037)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.15, label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"No disruptions\" = palette_cpal_main[1], \"Disruptions\" = palette_cpal_main[2]),\n                    breaks = c(\"Disruptions\", \"No disruptions\"))\n\n```\n:::\n\n::: g-col-5\n**CPAL.POLICY.016**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> Currently, which of the following types of childcare do you use for your child(ren) under age 6 for at least 5 hours per week?\n:::\n:::\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.POLICY.016\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n```{r childcare001, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.POLICY.016\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[8:999]$\") ~ palette_cpal_main[2],\n      TRUE ~ palette_cpal_main[1]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\nscale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.POLICY.016_1\" = \"Daycare\",\n                 \"CPAL.POLICY.016_2\" = \"Paid family, friend, or neighbor\",\n                 \"CPAL.POLICY.016_3\" = \"Unpaid family, friend, or neighbor\" ,\n                 \"CPAL.POLICY.016_4\" = \"Private pre-K\",\n                 \"CPAL.POLICY.016_5\" = \"Public pre-K\",\n                 \"CPAL.POLICY.016_6\" = \"HeadStart or Early Head Start\",\n                 \"CPAL.POLICY.016_7\" = \"Faith-based nursery\",\n                 \"CPAL.POLICY.016_8\" = \"None of these\",\n                 \"CPAL.POLICY.016_998\" = \"Unsure\",\n                 \"CPAL.POLICY.016_999\" = \"None of these\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.HEALTH.002**\n\n> Have you missed a well baby check up in the past month?\n\n**Rate of response (if applicable):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HEALTH.004.2), CPAL.HEALTH.004.2 != -99))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care03, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.HEALTH.004.2), CPAL.HEALTH.004.2 != -99, CPAL.HEALTH.004.2 != -97) %>%\n  mutate(CPAL.HEALTH.004.2 = factor(\n    case_when(\n      CPAL.HEALTH.004.2 == 1 ~ \"Have missed\",\n      CPAL.HEALTH.004.2 == 0 ~ \"Have not missed\",\n    ),\n    levels = c(\"Have missed\", \n               \"Have not missed\"\n               )\n  )) %>%\n  group_by(CPAL.HEALTH.004.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HEALTH.004.2)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.25,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Have not missed\" = palette_cpal_main[1], \"Have missed\" = palette_cpal_main[2]),\n                    breaks = c(\"Have missed\", \"Have not missed\"))\n\n```\n:::\n:::\n\n\n## Housing and home conditions\n\n::: grid\n::: g-col-5\n**CPAL.DEBT.007**\n\n> Please describe your housing status\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.DEBT.007)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r home01, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.DEBT.007)) %>%\n  mutate(CPAL.DEBT.007 = factor(\n    case_when(\n      CPAL.DEBT.007 == 1 ~ \"I rent the home I live in\",\n      CPAL.DEBT.007 == 2 ~ \"I own the home I live in\",\n      CPAL.DEBT.007 == 3 ~ \"Currently unhoused/homeless\",\n      CPAL.DEBT.007 == 4 ~ \"Other\"),\n    levels = c(\"I rent the home I live in\", \"I own the home I live in\", \"Currently unhoused/homeless\", \"Other\")\n  )) %>%\n  group_by(CPAL.DEBT.007) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.DEBT.007)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.10,label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.6), colour = \"white\", size = 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) \n\n```\n:::\n\n::: g-col-5\n**CPAL.DEMO.011**\n\n> What are the living arrangements for children in your household under the age of 6 years?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.DEMO.011\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n\n```{r home06, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DEMO.011_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[999]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = -0.1,\n          size = 7, \n          colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14),\n    panel.grid.major.y = element_blank(),\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.DEMO.011_1\" = \"Two parents\",\n                 \"CPAL.DEMO.011_2\" = \"One parent\",\n                 \"CPAL.DEMO.011_3\" = \"Other children/siblings older than 6\" ,\n                 \"CPAL.DEMO.011_4\" = \"Adult relatives\",\n                 \"CPAL.DEMO.011_5\" = \"Adult non-relatives\",\n                 \"CPAL.DEMO.011_6\" = \"Other\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\nover_under_50k_two_parents <- df %>%\n  replace_na(list(`CPAL.DEMO.011_1` = 0)) %>%\n  group_by(`Over/Under 50k`) %>%\n  summarise(two_parent_percentage = mean(`CPAL.DEMO.011_1` == 1, na.rm = TRUE) )\n\n```\n\n#### **`r scales::percent(pull(over_under_50k_two_parents[1,2]), accuracy = 0.1)`** of respondents with income above $50,000 report a two-parent living arrangement, compared to only **`r scales::percent(pull(over_under_50k_two_parents[2,2]), accuracy = 0.1)`** of respondents with an income below $50,000.\n\n```{r home06_heatmap, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DEMO.011_\")) %>%\n  group_by(answer, `Income Bracket`) %>% \n  summarise(percentage = (sum(value == 1, na.rm = TRUE)/n())) %>%\n  ggplot(aes(x = `Income Bracket`, y = answer, fill = percentage)) +\n  geom_tile() +\n  scale_fill_gradient(low = scales::alpha(palette_cpal_main[2], 0), high = scales::alpha(palette_cpal_main[2], 1), labels = scales::percent_format()) +\n  labs(title = \"Heatmap by Income Bracket\") +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.DEMO.011_1\" = \"Two parents\",\n                 \"CPAL.DEMO.011_2\" = \"One parent\",\n                 \"CPAL.DEMO.011_3\" = \"Other children/siblings older than 6\",\n                 \"CPAL.DEMO.011_4\" = \"Adult relatives\",\n                 \"CPAL.DEMO.011_5\" = \"Adult non-relatives\",\n                 \"CPAL.DEMO.011_6\" = \"Other\")\n    return(stringr::str_wrap(recodes[x], width = 25))\n  }) +\n  theme_minimal() +\n  theme(\n    title = element_text(size = 14),\n    axis.title = element_blank(),\n    axis.text = element_text(size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid = element_blank(),\n  )\n```\n\n:::\n\n\n::: g-col-5\n**CPAL.INTERNET.001**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> How often is the internet available to people in your household?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.INTERNET.001)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n\n```{r internet, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.INTERNET.001)) %>%\n  mutate(CPAL.INTERNET.001 = factor(\n    case_when(\n      CPAL.INTERNET.001 == 0 ~ \"Never available\",\n      CPAL.INTERNET.001 == 1 ~ \"Rarely available\",\n      CPAL.INTERNET.001 == 2 ~ \"Sometimes available\",\n      CPAL.INTERNET.001 == 3 ~ \"Usually available\",\n      CPAL.INTERNET.001 == 4 ~ \"Always available\"\n    ),\n    levels = c(\"Never available\", \"Rarely available\", \"Sometimes available\", \"Usually available\", \"Always available\")\n  )) %>%\n  group_by(CPAL.INTERNET.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = prop, y = CPAL.INTERNET.001, fill = CPAL.INTERNET.001)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  geom_text(aes(label = ifelse(prop > 0.10, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = 1.1, \n            size = 8, \n            colour = \"white\") +\n  geom_text(aes(label = ifelse(prop <= 0.10, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = -0.1, \n            size = 8, \n            colour = \"grey\") +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 16),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = colorRampPalette(c( palette_cpal_main[2], palette_cpal_main[1]))(5),\n                    c(\"Never available\", \"Rarely available\", \"Sometimes available\", \"Usually available\", \"Always available\")) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), expand = expansion(mult = c(0.1, 0)))\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.HOME.005**\n\n> Is your home's heating equipment able to keep you warm in the winter?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HOME.005)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r home02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.HOME.005)) %>%\n  mutate(CPAL.HOME.005 = case_when(\n    CPAL.HOME.005 == 2 ~ \"Always\",\n    CPAL.HOME.005 == 0 ~ \"No\",\n    CPAL.HOME.005 == 1 ~ \"Sometimes\"\n  )) %>%\n  group_by(CPAL.HOME.005) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HOME.005)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1,label = ifelse(prop > 0.10, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Always\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Sometimes\" = palette_cpal_main[4]),\n                    breaks = c(\"Always\", \"Sometimes\", \"No\"))\n\n```\n:::\n\n::: g-col-5\n**CPAL.HOME.006**\n\n> Is your home's cooling equipment (air conditioning, fans, etc.) able to keep you cool in the summer?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HOME.006)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r home03, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.HOME.006)) %>%\n  mutate(CPAL.HOME.006 = case_when(\n    CPAL.HOME.006 == 2 ~ \"Always\",\n    CPAL.HOME.006 == 0 ~ \"No\",\n    CPAL.HOME.006 == 1 ~ \"Sometimes\"\n  )) %>%\n  group_by(CPAL.HOME.006) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HOME.006)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.2, label = ifelse(prop > 0.05, scales::percent(prop , scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Always\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Sometimes\" = palette_cpal_main[4]),\n                    breaks = c(\"Always\", \"Sometimes\", \"No\"))\n\n```\n:::\n\n::: g-col-12\nIn total, only **`r scales::percent(nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005), CPAL.HOME.006 == 2, CPAL.HOME.005 == 2))/nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005))), accuracy = 0.1)`** of respondents say that both their *heating and cooling always work* at home.\n\n<!-- When only considering respondents with at least one child 6 years old or under, this percentage `r paste0( ifelse(  nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005), CPAL.HOME.006 == 2, CPAL.HOME.005 == 2))/nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005))) < nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005), CPAL.HOME.006 == 2, CPAL.HOME.005 == 2, !is.na(CPAL.CBCL.015)))/nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005))), \"rises\", \"drops\"  ), \" to \", scales::percent(nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005), CPAL.HOME.006 == 2, CPAL.HOME.005 == 2, is.numeric(CPAL.CBCL.015)))/nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005))), accuracy = 0.1), \".\"  )` -->\n:::\n\n\n::: g-col-5\n**CPAL.MH.009**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> In the last 30 days, were you evicted from the place you rented?\n:::\n:::\n\n\n**Rate of response (renters):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.MH.009)))/nrow(df %>% filter(CPAL.DEBT.007 == 1)), accuracy = 0.1)`\n\n**Rate of response (total):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.MH.009)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n#### **`r scales::percent(nrow(df %>% filter(CPAL.MH.009 == 1, !is.na(CPAL.MH.009)))/nrow(df %>% filter(!is.na(CPAL.MH.009))), accuracy = 0.1)`** of renters report being *evicted* in the *past 30 days*.\n\n\n\n```{r home04, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.MH.009)) %>%\n  mutate(CPAL.MH.009 = case_when(\n    CPAL.MH.009 == 0 ~ \"Not evicted\",\n    CPAL.MH.009 == 1 ~ \"Evicted\",\n    TRUE ~ \"Other\"\n  )) %>%\n  filter(CPAL.MH.009 != \"Other\") %>%\n  group_by(CPAL.MH.009) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.MH.009)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.25,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Evicted\" = palette_cpal_main[2], \"Not evicted\" = palette_cpal_main[1]),\n                    breaks = c(\"Evicted\", \"Not evicted\"))\n\n```\n:::\n\n:::\n\n::: grid\n\n::: g-col-5\n\n:::\n\n::: g-col-7\n\n```{r home04_2, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.MH.009), CPAL.MH.009 %in% c(0:1)) %>%\n  group_by(`Income Bracket`) %>%\n  summarize(`Not evicted` = sum(CPAL.MH.009 == 0)/n(), `Evicted` = sum(CPAL.MH.009 == 1)/n()) %>%\n  gather(key = \"evicted\", value = \"prop\", -`Income Bracket`) %>%\n  mutate(\n    evicted = factor(\n      evicted,\n    levels = c(\"Not evicted\",\"Evicted\"))\n  ) %>%\n  ggplot(aes(x = `Income Bracket`, y = prop, fill = `Income Bracket`, alpha = evicted)) +\n  geom_text(aes(label = ifelse(evicted == \"Evicted\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n        position = position_stack(), hjust = -0.1, size = 8, colour = \"grey\") +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  coord_flip() +\n  labs(title = \"Evictions by income\") +\n  theme(\n    axis.text.y = element_text(size = 16),\n    axis.title = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_alpha_manual(values = c(0.2, 1))\n\n\n# df %>%\n#   filter(!is.na(CPAL.MH.009), CPAL.MH.009 %in% c(0:1)) %>%\n#   group_by(CPAL.DEMO.007.2) %>%\n#   summarize(`Not evicted` = sum(CPAL.MH.009 == 0)/n(), `Evicted` = sum(CPAL.MH.009 == 1)/n()) %>%\n#   gather(key = \"evicted\", value = \"prop\", -CPAL.DEMO.007.2) %>%\n#   mutate(\n#     evicted = factor(\n#       evicted,\n#     levels = c(\"Not evicted\",\"Evicted\"))\n#   ) %>%\n#   ggplot(aes(x = CPAL.DEMO.007.2, y = prop, fill = CPAL.DEMO.007.2, alpha = evicted)) +\n#   geom_text(aes(label = ifelse(evicted == \"Evicted\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n#         position = position_stack(), hjust = -0.1, size = 7, colour = \"grey\") +\n#   geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n#   coord_flip() +\n#   labs(title = \"Evictions by race\") +\n#   theme(\n#     axis.text.y = element_text(size = 16),\n#     axis.title = element_blank(),\n#     axis.text.x = element_blank(),\n#     legend.position = \"none\",\n#     plot.background = element_rect(fill = \"transparent\", colour = NA),\n#     panel.background = element_rect(fill = \"transparent\", colour = NA),\n#     strip.background = element_rect(fill = \"transparent\", colour = NA)\n#   ) +\n#   scale_alpha_manual(values = c(0.2, 1))\n\n```\n\n```{r whoevicted, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(CPAL.MH.009 == 1) %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n),\n         CPAL.DEMO.007.2 = stringr::str_wrap(CPAL.DEMO.007.2, width = 20)\n) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.DEMO.007.2)) +\n    geom_bar(width = 0.7, stat = \"identity\") +\n    coord_polar(theta = \"y\", start = 0) +\n    labs(title = \"Who is getting evicted?\") +\n    geom_text(aes(x=1.12,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n              position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 16),\n      legend.position = \"left\",\n      legend.title = element_blank(),\n      legend.key.size = unit(2, \"lines\"), \n      legend.text = element_text(size = 14),\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      axis.title = element_blank(),\n      panel.grid = element_blank(),\n      plot.background = element_rect(fill = \"transparent\", colour = NA),\n      panel.background = element_rect(fill = \"transparent\", colour = NA),\n      strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\n\n```\n\n:::\n\n:::\n\n::: {.column-margin}\n\nNote: evictions $n=`r nrow(df %>% filter(CPAL.MH.009 == 1))`$.\n\n:::\n\n::: grid\n\n::: g-col-5\n**CPAL.MH.010**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> In the last 30 days, was your mortgage foreclosed on?\n:::\n:::\n\n**Rate of response (homeowners):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.MH.010)))/nrow(df %>% filter(CPAL.DEBT.007 == 2)), accuracy = 0.1)`\n\n**Rate of response (total):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.MH.010)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n#### **`r scales::percent(nrow(df %>% filter(CPAL.MH.010 == 1, !is.na(CPAL.MH.010)))/nrow(df %>% filter(!is.na(CPAL.MH.010))), accuracy = 0.1)`** of homeowners report being *foreclosed on* in the *past 30 days*.\n\n\n```{r home05, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.MH.010)) %>%\n  mutate(CPAL.MH.010 = case_when(\n    CPAL.MH.010 == 0 ~ \"Not foreclosed\",\n    CPAL.MH.010 == 1 ~ \"Foreclosed\",\n    TRUE ~ \"Other\"\n  )) %>%\n  filter(CPAL.MH.010 != \"Other\") %>%\n  group_by(CPAL.MH.010) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.MH.010)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.25,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Foreclosed\" = palette_cpal_main[2], \"Not foreclosed\" = palette_cpal_main[1]),\n                    breaks = c(\"Foreclosed\", \"Not foreclosed\"))\n\n```\n\nMost homeowners make *less than \\$100,000*, as do **all** who were *foreclosed on*.\n\n:::\n\n:::\n\n::: grid\n\n::: g-col-5\n:::\n\n::: g-col-7\n```{r home05_2, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# df %>%\n#   filter(Annual2023Income < 500000) %>%\n#   filter(!is.na(CPAL.MH.010), CPAL.MH.010 %in% c(0:1)) %>%\n#   mutate(CPAL.MH.010 = case_when(\n#     CPAL.MH.010 == 0 ~ \"Not foreclosed on\",\n#     CPAL.MH.010 == 1 ~ \"Foreclosed on\",\n#     TRUE ~ \"Other\"\n#   )) %>%\n#   ggplot(aes(x = Annual2023Income, fill = CPAL.MH.010)) +\n#   geom_histogram(binwidth = 10000, boundary = 0) +\n#   scale_x_continuous(\n#     labels = scales::dollar_format(),\n#     limits = c(0, 500000)\n#   ) +\n#   theme_minimal() +\n#   theme(axis.title.x = element_blank(),\n#         plot.background = element_rect(fill = \"transparent\", colour = NA),\n#         panel.background = element_rect(fill = \"transparent\", colour = NA),\n#         strip.background = element_rect(fill = \"transparent\", colour = NA),\n#         legend.text = element_text(size = 12)\n#         ) +\n#   scale_fill_manual(values = c(\"Foreclosed on\" = palette_cpal_main[2], \"Not foreclosed on\" = palette_cpal_main[1]),\n#                     breaks = c(\"Foreclosed on\", \"Not foreclosed on\"))\n\ndf %>%\n  filter(!is.na(CPAL.MH.010), CPAL.MH.010 %in% c(0:1)) %>%\n  group_by(`Income Bracket`) %>%\n  summarize(`Not foreclosed on` = sum(CPAL.MH.010 == 0)/n(), `Foreclosed on` = sum(CPAL.MH.010 == 1)/n()) %>%\n  gather(key = \"foreclosed\", value = \"prop\", -`Income Bracket`) %>%\n  mutate(\n    foreclosed = factor(\n      foreclosed,\n    levels = c(\"Not foreclosed on\",\"Foreclosed on\"))\n  ) %>%\n  ggplot(aes(x = `Income Bracket`, y = prop, fill = `Income Bracket`, alpha = foreclosed)) +\n  geom_text(aes(label = ifelse(foreclosed == \"Foreclosed on\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n        position = position_stack(), hjust = -0.1, size = 8, colour = \"grey\") +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  coord_flip() +\n  labs(title = \"Foreclosures by income\") +\n  theme(\n    axis.text.y = element_text(size = 16),\n    axis.title = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_alpha_manual(values = c(0.2, 1))\n\n# df %>%\n#   filter(!is.na(CPAL.MH.010), CPAL.MH.010 %in% c(0:1)) %>%\n#   group_by(CPAL.DEMO.007.2) %>%\n#   summarize(`Not foreclosed on` = sum(CPAL.MH.010 == 0)/n(), `Foreclosed on` = sum(CPAL.MH.010 == 1)/n()) %>%\n#   gather(key = \"foreclosed\", value = \"prop\", -CPAL.DEMO.007.2) %>%\n#   mutate(\n#     foreclosed = factor(\n#       foreclosed,\n#     levels = c(\"Not foreclosed on\",\"Foreclosed on\"))\n#   ) %>%\n#   ggplot(aes(x = CPAL.DEMO.007.2, y = prop, fill = CPAL.DEMO.007.2, alpha = foreclosed)) +\n#   geom_text(aes(label = ifelse(foreclosed == \"Foreclosed on\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n#         position = position_stack(), hjust = -0.1, size = 8, colour = \"grey\") +\n#   geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n#   coord_flip() +\n#   labs(title = \"Foreclosures by race\") +\n#   theme(\n#     axis.text.y = element_text(size = 16),\n#     axis.title = element_blank(),\n#     axis.text.x = element_blank(),\n#     legend.position = \"none\",\n#     plot.background = element_rect(fill = \"transparent\", colour = NA),\n#     panel.background = element_rect(fill = \"transparent\", colour = NA),\n#     strip.background = element_rect(fill = \"transparent\", colour = NA)\n#   ) +\n#   scale_alpha_manual(values = c(0.2, 1))\n\n```\n\n```{r whoforc, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.MH.010), CPAL.MH.010 %in% c(0:1)) %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n),\n         CPAL.DEMO.007.2 = stringr::str_wrap(CPAL.DEMO.007.2, width = 20)\n) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.DEMO.007.2)) +\n    geom_bar(width = 0.7, stat = \"identity\") +\n    coord_polar(theta = \"y\", start = 0) +\n    labs(title = \"Who is getting foreclosed on?\") +\n    geom_text(aes(x=1.12,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n              position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 16),\n      legend.position = \"left\",\n      legend.title = element_blank(),\n      legend.key.size = unit(2, \"lines\"), \n      legend.text = element_text(size = 14),\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      axis.title = element_blank(),\n      panel.grid = element_blank(),\n      plot.background = element_rect(fill = \"transparent\", colour = NA),\n      panel.background = element_rect(fill = \"transparent\", colour = NA),\n      strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\n\n```\n\n:::\n\n:::\n\n\n::: {.column-margin}\n\nNote: foreclosures $n=`r nrow(df %>% filter(CPAL.MH.010 == 1))`$.\n\n&nbsp;\n\nThe selection of homeowners in lower income ranges is likely due to data misentry; *we are currently still reviewing these responses*.\n:::\n\n\n::: grid\n\n::: g-col-5\n**CPAL.DALLASCORE.003**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> During the past three months, has any member of your household spent at least one night in jail or prison?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.DALLASCORE.003_\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n<!-- **`r scales::percent(nrow(df %>% filter(CPAL.MH.010 == 1, !is.na(CPAL.MH.010)))/nrow(df %>% filter(!is.na(CPAL.MH.010))), accuracy = 0.1)` of respondents with at least one child aged 6 or younger in the home report a household member spending at least one night in jail or prison in the past 3 months.** -->\n\n\n```{r home07, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DALLASCORE.003_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[999]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = -0.1,\n          size = 7, \n          colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.DALLASCORE.003_1\" = \"Myself\",\n                 \"CPAL.DALLASCORE.003_2\" = \"A parent\",\n                 \"CPAL.DALLASCORE.003_3\" = \"A partner or spouse\" ,\n                 \"CPAL.DALLASCORE.003_4\" = \"A child\",\n                 \"CPAL.DALLASCORE.003_5\" = \"Other\",\n                 \"CPAL.DALLASCORE.003_999\" = \"Does not apply\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n\n\n:::\n\n:::\n\n\n## Community and wellbeing\n\n::: grid\n\n\n::: g-col-5\n**CPAL.CESD.001.b**\n\n> In the past month, please describe how often you felt hopeful about the future\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.CESD.001.b)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r other02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.CESD.001.b)) %>%\n  mutate(CPAL.CESD.001.b = case_when(\n    CPAL.CESD.001.b == 1 ~ \"Rarely or never\",\n    CPAL.CESD.001.b == 2 ~ \"Some or little of the time\",\n    CPAL.CESD.001.b == 3 ~ \"Occasionally or moderately\",\n    CPAL.CESD.001.b == 4 ~ \"Most or all of the time\"\n  )) %>%\n  group_by(CPAL.CESD.001.b) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.CESD.001.b)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.2, label = ifelse(prop > 0.08, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = colorRampPalette(c( palette_cpal_main[2], palette_cpal_main[1]))(4),\n                    breaks = c(\"Rarely or never\", \"Some or little of the time\", \"Occasionally or moderately\", \"Most or all of the time\"))\n\n```\n:::\n\n\n::: g-col-5\n**CPAL.SOCIALSUPP.003.a**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> Who do you turn to for social support? Think about who you turned to for social support in this last week.\n:::\n:::\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.SOCIALSUPP.003.a\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n```{r socialsupp, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  filter(rowSums(is.na(select(., starts_with(\"CPAL.SOCIALSUPP.003.a\")))) != length(select(., starts_with(\"CPAL.SOCIALSUPP.003.a\")))) %>%  \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.SOCIALSUPP.003.a\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      TRUE ~ palette_cpal_main[1]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.9) +\n  geom_text(aes(label = ifelse(percentage > 0.3, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.3, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\nscale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.SOCIALSUPP.003.a_1\" = \"Partner\",\n                 \"CPAL.SOCIALSUPP.003.a_2\" = \"Child\",\n                 \"CPAL.SOCIALSUPP.003.a_3\" = \"Parent\" ,\n                 \"CPAL.SOCIALSUPP.003.a_4\" = \"Relative\",\n                 \"CPAL.SOCIALSUPP.003.a_5\" = \"Friend\",\n                 \"CPAL.SOCIALSUPP.003.a_6\" = \"Neighbor\",\n                 \"CPAL.SOCIALSUPP.003.a_7\" = \"Co-worker\",\n                 \"CPAL.SOCIALSUPP.003.a_8\" = \"Member of a religious community\",         \n                 \"CPAL.SOCIALSUPP.003.a_9\" = \"Spiritual figure\",\n                 \"CPAL.SOCIALSUPP.003.a_10\" = \"Parent group\",\n                 \"CPAL.SOCIALSUPP.003.a_11\" = \"Health or mental health professional\",\n                 \"CPAL.SOCIALSUPP.003.a_12\" = \"Babysitter\",\n                 \"CPAL.SOCIALSUPP.003.a_13\" = \"Childcare provider\",\n                 \"CPAL.SOCIALSUPP.003.a_14\" = \"Mentor/teacher\"\n                 )\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n```{r socialsupp_pov, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  filter(POVERTYLine2023 == 1) %>%\n  filter(rowSums(is.na(select(., starts_with(\"CPAL.SOCIALSUPP.003.a\")))) != length(select(., starts_with(\"CPAL.SOCIALSUPP.003.a\")))) %>%  \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.SOCIALSUPP.003.a\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  ggplot(aes(x = percentage, y = answer)) +\n  geom_bar(stat = \"identity\", width = 0.9, fill = palette_cpal_main[2]) +\n  geom_text(aes(label = ifelse(percentage > 0.3, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.3, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\nscale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  labs(title = \"Only respondents under the poverty line\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16),\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.SOCIALSUPP.003.a_1\" = \"Partner\",\n                 \"CPAL.SOCIALSUPP.003.a_2\" = \"Child\",\n                 \"CPAL.SOCIALSUPP.003.a_3\" = \"Parent\" ,\n                 \"CPAL.SOCIALSUPP.003.a_4\" = \"Relative\",\n                 \"CPAL.SOCIALSUPP.003.a_5\" = \"Friend\",\n                 \"CPAL.SOCIALSUPP.003.a_6\" = \"Neighbor\",\n                 \"CPAL.SOCIALSUPP.003.a_7\" = \"Co-worker\",\n                 \"CPAL.SOCIALSUPP.003.a_8\" = \"Member of a religious community\",         \n                 \"CPAL.SOCIALSUPP.003.a_9\" = \"Spiritual figure\",\n                 \"CPAL.SOCIALSUPP.003.a_10\" = \"Parent group\",\n                 \"CPAL.SOCIALSUPP.003.a_11\" = \"Health or mental health professional\",\n                 \"CPAL.SOCIALSUPP.003.a_12\" = \"Babysitter\",\n                 \"CPAL.SOCIALSUPP.003.a_13\" = \"Childcare provider\",\n                 \"CPAL.SOCIALSUPP.003.a_14\" = \"Mentor/teacher\"\n                 )\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.DALLASCORE.002**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> In the past 3 months, have you done any of the following out of concern for your own safety while in your neighborhood?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.DALLASSCORE.002_\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n```{r other01, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DALLASCORE.002_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[999]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.DALLASCORE.002_1\" = \"Avoid certain streets\",\n                 \"CPAL.DALLASCORE.002_2\" = \"Stay in at night\",\n                 \"CPAL.DALLASCORE.002_3\" = \"Not travel alone\" ,\n                 \"CPAL.DALLASCORE.002_4\" = \"Avoid certain buildings or locations\",\n                 \"CPAL.DALLASCORE.002_5\" = \"Carry a weapon\",\n                 \"CPAL.DALLASCORE.002_6\" = \"Call 911\",\n                 \"CPAL.DALLASCORE.002_999\" = \"Does not apply\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\ndf %>%\n  mutate(unsafe = case_when(\n    rowSums(select(., starts_with(\"CPAL.DALLASCORE.002_\"), -CPAL.DALLASCORE.002_999) == 1, na.rm = TRUE) > 0 ~ 1,\n    CPAL.DALLASCORE.002_999 == 1 ~ 0,\n    TRUE ~ NA_real_\n  )) %>%\n  filter(!is.na(unsafe)) %>%\n  mutate(unsafe = factor(unsafe, levels = c(0, 1)),\n         weight = if_else(unsafe == 1, -1, 1)) %>%\n  ggplot(aes(x = age_yr, fill = unsafe, weight = weight)) +\n    geom_histogram(binwidth = 2.5, alpha = 0.8) +\n    geom_text(aes(x = 80, y = 20, label = \"Did not report feeling unsafe\"), size = 5, hjust = 1) +\n    geom_text(aes(x = 80, y = -20, label = \"Reported feeling unsafe\"), size = 5, hjust = 1) +\n    scale_x_continuous(limits = c(0,80)) +\n    scale_y_continuous(limits = c(-150, 150)) +\n    labs(x = \"Age\", title = stringr::str_wrap(\"Ages of respondents\", width = 40)) + \n    theme_minimal() +\n    theme(\n      legend.position = \"none\",\n      plot.title = element_text(size = 18),\n      axis.title.y = element_blank(),\n      axis.title.x = element_text(size=18),\n      axis.text.x = element_text(size=16),\n      axis.text.y = element_blank(), # Hide y-axis text\n      axis.ticks.y = element_blank(), # Hide y-axis ticks\n      plot.background = element_rect(fill = \"transparent\", colour = NA),\n      panel.background = element_rect(fill = \"transparent\", colour = NA),\n      strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\nage_groups <- c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\")\n\ndf %>%\n  filter(rowSums(select(., starts_with(\"CPAL.DALLASCORE.002_\"), -CPAL.DALLASCORE.002_999) == 1, na.rm = TRUE) > 0) %>%\n  group_by(age_bucket) %>%\n  summarise(percentage = sum(CPAL.DALLASCORE.002_5 == 1, na.rm = TRUE) / n()) %>%\n  right_join(data.frame(age_bucket = factor(age_groups, levels = age_groups)), by = \"age_bucket\") %>%\n  replace_na(list(percentage = 0)) %>%\n  ggplot(aes(x = age_bucket, y = percentage)) +\n  geom_bar(stat = \"identity\", width = 0.7, fill = palette_cpal_main[2], position = \"dodge\") +\n  geom_text(aes(label = ifelse(percentage > 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n            position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n            position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\n  coord_flip() +\n  labs(title = stringr::str_wrap(\"Proportion of respondents who reported carrying a weapon as a response to feeling unsafe, by age group\", width = 40),\n       x = \"Age group\",\n       y = \"Proportion\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 1),\n                     limits = c(0, 0.25)) + \n  theme_minimal() +\n  theme(\n    title = element_text(size = 16),\n    legend.position = \"none\",\n    axis.text.y = element_text(size = 14),\n    axis.text.x = element_blank(),\n    axis.title = element_blank()\n  )\n  \n```\n\n#### All respondents who report carrying a weapon as a response to feeling unsafe are between 20 to 49 years old.\n\n```{r other01_map, dev = \"png\", dev.args=list(bg=\"transparent\")}\n  \nsafety_df <- df %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DALLASCORE.002_\")) %>%\n  filter(answer != \"CPAL.DALLASCORE.002_999\") %>%\n  group_by(CPAL.DEMO.001) %>%\n  summarize(pct = sum(value, na.rm = TRUE) / n(),\n            n = n(), \n            n_true = sum(value, na.rm = TRUE),\n            .groups = 'drop') %>%\n  mutate(GEOID = as.character(CPAL.DEMO.001)) %>%\n  left_join(zctas_dallas, by = \"GEOID\") %>%\n  mutate(\n    per_capita = case_when(\n      estimate > 0 ~ n/estimate,\n      TRUE ~ 0)\n  ) %>%\n  filter(!is.na(NAME)) %>%\n  st_as_sf()\n\nleaflet(safety_df) %>%\n  addProviderTiles(\"CartoDB.Positron\") %>%\n  addPolygons(\n    fillColor = ~colorNumeric(\"Reds\", pct)(pct),\n    weight = 1,\n    opacity = 1,\n    color = \"white\",\n    fillOpacity = 0.7,\n    highlight = TRUE,\n    label = ~as.character(GEOID),\n    popup = ~paste0(\"ZIP: \", GEOID, \n                    \"<br/>Percent concerned: \", scales::percent(pct, accuracy = 0.1),\n                    \"<br/>Count: \", n, \n                    \"<br/>Per capita: \", round(per_capita*1000, digits = 2), \"/1000\"\n                    )\n  ) %>%\n  addLegend(\n    pal = colorNumeric(\"Reds\", safety_df$pct),\n    values = safety_df$pct,\n    labels = function(values) { scales::percent(values, accuracy = 0.1) }, \n    title = \"Percent who report <br/>concern with safety\"\n  )\n\n```\n\n:::\n\n:::","srcMarkdownNoYaml":"\n\n```{r setup, output = F}\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(ggplot2)\nlibrary(cpaltemplates)\nlibrary(haven)\nlibrary(readxl)\nlibrary(purrr)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(DT)\n\ncensus_api_key(\"7b32db9a1faf6b92a567a778f7763e70285eba97\", install = TRUE, overwrite = TRUE)\n\nlibrary(tigris) # To get county shapefiles\n\nzctas_national <- get_acs(geography = \"zcta\", year = 2020, variables = \"B01003_001\", geometry = TRUE) %>%\n  st_as_sf()\n\ndallas_county <- get_acs(geography = \"county\", variables = \"B01003_001\", state = \"TX\", county = \"Dallas\", geometry = TRUE) %>%\n  st_as_sf()\n\ndallas_county_acs <- get_acs(geography = \"county\", \n                             variables = c(\"B17001_001\", \"B17001_002E\", \"B19013_001E\"), \n                             year = 2021, \n                             survey = \"acs5\",\n                             state = \"TX\",\n                             county = \"Dallas\") %>%\n  select(-moe) %>%\n  spread(key = variable, value = estimate) %>%\n  mutate(povertyRate = B17001_002/B17001_001)\n\nzctas_dallas <- zctas_national[st_intersects(dallas_county, zctas_national, sparse = FALSE), ]\n\n# priorities <- read_excel(\"D:/CPAL Dropbox/Analytics/04_Projects/RAPID/CPAL_Codebook.8.2.23_with_priorities.xlsx\") %>%\n# drop_na(PRIORITY) %>%\n# pull(1)\ndemographics <- c(\n  \"CPALID\",\n  \"Source\",\n  \"UserLanguage\",\n  \"age_yr\",\n  \"Annual2023Income\",\n  \"Income2023M2Y\",\n  \"Income2023W2Y\",\n  \"POVERTYLine2023\"\n)\n# \n# data1raw <- read_sav(\"data/Q1 2023 Responses/RAPID-Dallas Initial Recruitment 1 Data.sav\") %>%\n#   mutate(CPAL.DEMO.007.2 = as.character(CPAL.DEMO.007.2))\n# data2raw <- read_sav(\"data/Q2 2023 Responses/RAPID-DALLAS_MasterFile_For_CPAL.8.2.23 (1).sav\")\ndata2raw <- read_sav(\"C:/Users/cpalr/Documents/Birth to Three/RAPID/data/Q2 2023 Responses/RAPID-DALLAS_MasterFile_For_CPAL.8.2.23 (1).sav\")\n# data <- read_csv(\"C:/users/taylo/CPAL Dropbox/Analytics/04_Projects/RAPID/example.csv\")\n# \n# cols <- Reduce(intersect, list(c(demographics, priorities),\n#                                # colnames(data1raw),\n#                                colnames(data2raw)))\ndata <- data2raw %>%\n  # select(all_of(cols)) %>%\n  select(-ends_with(\"TEXT\"))\n\n\nresponse_maps <- list(\n  CPAL.DEMO.007.2 = c(\n    \"1\" = \"American Indian or Alaska Native\",\n    \"2\" = \"Asian\",\n    \"3\" = \"Black or African American\",\n    \"4\" = \"Native Hawaiian or Other Pacific Islander\",\n    \"5\" = \"White\",\n    \"6\" = \"Other\",\n    \"8\" = \"Middle Eastern or North African\",\n    \"9\" = \"Hispanic, Latine, or Latin origin\"\n  ),\n  CPAL.DEMO.009 = c(\n    summarize = F,\n    \"1\" = \"English\",\n    \"2\" = \"Arabic\",\n    \"3\" = \"Chinese\",\n    \"4\" = \"French\",\n    \"5\" = \"German\",\n    \"6\" = \"Italian\",\n    \"7\" = \"Japanese\",\n    \"8\" = \"Korean\",\n    \"9\" = \"Russian\",\n    \"10\" = \"Spanish\",\n    \"11\" = \"Vietnamese\",\n    \"12\" = \"Other\",\n    \"13\" = \"ASL/Sign Language\"\n  ),\n  CPAL.DEMO.010 = c(\n    summarize = F,\n    \"0\" = \"No\",\n    \"1\" = \"Yes\",\n    \"-98\" = \"Unsure\",\n    \"-97\" = \"Do not wish to disclose\",\n    \"-99\" = \"Not applicable\"\n  ),\n  CPAL.DEMO.011 = c(\n    summarize = T,\n    \"1\" = \"Two parents\",\n    \"2\" = \"One parent\",\n    \"3\" = \"Other children/siblings older than 6\",\n    \"4\" = \"Adult relatives\",\n    \"5\" = \"Adult non-relatives\",\n    \"6\" = \"Other\"\n  ),\n  CPAL.DEMO.014 = c(\n    summarize = F,\n    \"1\" = \"Less than high school\",\n    \"2\" = \"Some high school\",\n    \"3\" = \"High school diploma or equivalent\",\n    \"4\" = \"Some college\",\n    \"5\" = \"Associate degree\",\n    \"6\" = \"Bachelor's degree\",\n    \"7\" = \"Master's degree\",\n    \"8\" = \"Doctorate or professional\",\n    \"9\" = \"Other\",\n    \"10\" = \"Trade school\",\n    \"11\" = \"Technical certification\"\n  ),\n  CPAL.DEMO.015 = c(\n    summarize = F,\n    \"0\" = \"No\",\n    \"9\" = \"GED\",\n    \"10\" = \"Undergraduate or post-secondary\",\n    \"11\" = \"Graduate degree program\",\n    \"12\" = \"Non-degree credentialing program\",\n    \"13\" = \"Not listed\"\n  ),\n  CPAL.FSTR.004.a = c(\n    summarize = T,\n    \"\"\n    \n  )\n)     \n\nsummarize_subparts <- function(df, prefix, maps=response_maps) {\n  cols <- grep(paste0(\"^\",prefix), names(df), value = TRUE)\n  response_map <- maps[[prefix]]\n  summarized <- df %>%\n    gather(key = \"subpart\", value = \"response\", starts_with(prefix)) %>%\n    mutate(subpart = str_extract(subpart, \"\\\\d+$\"),\n           mapped_value = ifelse(response == 1, response_map[subpart], NA_character_)) %>%\n    group_by(CPALID) %>%\n    summarize(!!prefix := list(mapped_value)) %>%\n    mutate_at(2, ~map(., ~na.omit(.))) \n  df <- df %>%\n    left_join(summarized, by = \"CPALID\") %>%\n    select(-all_of(cols))\n  return(df)\n}\n\ndf <- data %>%\n  summarize_subparts(\"CPAL.DEMO.007.2\") %>% mutate(Education_Category = case_when(\n    CPAL.DEMO.014 %in% c(\"Less than high school\", \"Some high school\") ~ \"No high school degree\",\n    CPAL.DEMO.014 %in% c(\"High school diploma or equivalent\", \"Some college\") ~ \"High school degree\",\n    CPAL.DEMO.014 %in% c(\"Associate degree\", \"Bachelor's degree\", \"Master's degree\", \"Doctorate or professional\", \"Trade school\", \"Technical certification\", \"Other\") ~ \"Post-secondary degree or certification\",\n  )) %>%\n  mutate(CPAL.DEMO.007.2 = case_when(\n    is.na(CPAL.DEMO.007.2) ~ NA,\n    lengths(CPAL.DEMO.007.2) > 1 ~ \"Multiracial or other\",\n    CPAL.DEMO.007.2 == \"Other\" ~ \"Multiracial or other\",\n    TRUE ~ as.character(CPAL.DEMO.007.2)\n  )) %>%\n  mutate(Annual2023Income = case_when(\n           Annual2023Income > 20 & Annual2023Income < 100 ~ Annual2023Income*1000,\n           Annual2023Income == Income2023W2Y & Annual2023Income < 1000 ~ Annual2023Income*52,\n           Annual2023Income == Income2023M2Y & Annual2023Income > 999 & Annual2023Income < 3000 ~ Annual2023Income*12,\n           TRUE ~ Annual2023Income\n         )) %>%\n  filter(Annual2023Income < 10000000, Annual2023Income > 1000) %>%\n  mutate(IncomeQuartile = case_when(\n    is.na(Annual2023Income) ~ NA,\n    TRUE ~ cut(\n      Annual2023Income,\n      breaks = c(-Inf, quantile(Annual2023Income, probs = c(0.25, 0.50, 0.75), na.rm = T), Inf),\n      labels = c(1,2,3,4),\n      include.lowest = T))) %>%\n  mutate(\n      ChildUnder6 = ifelse(!is.na(CPAL.CBCL.015) & CPAL.CBCL.015 %in% 1:6, 1, 0)\n  ) %>%  \n  mutate(`Income Bracket` = factor(case_when(\n      Annual2023Income < 15000 ~ \"Less than $15,000\",\n      Annual2023Income >= 15000 & Annual2023Income < 24999 ~ \"$15,000 to $24,999\",\n      Annual2023Income >= 25000 & Annual2023Income < 34999 ~ \"$25,000 to $34,999\",\n      Annual2023Income >= 35000 & Annual2023Income < 49999 ~ \"$35,000 to $49,999\",\n      Annual2023Income >= 50000 & Annual2023Income < 74999 ~ \"$50,000 to $74,999\",\n      Annual2023Income >= 75000 & Annual2023Income < 99999 ~ \"$75,000 to $99,999\",\n      Annual2023Income >= 100000 & Annual2023Income < 149999 ~ \"$100,000 to $150,999\",\n      Annual2023Income >= 150000 ~ \"$150,000 and above\"\n    ),\n    levels = c(\"Less than $15,000\",\n               \"$15,000 to $24,999\",\n               \"$25,000 to $34,999\",\n               \"$35,000 to $49,999\",\n               \"$50,000 to $74,999\",\n               \"$75,000 to $99,999\",\n               \"$100,000 to $150,999\",\n               \"$150,000 and above\")\n  )) %>%\n  mutate(age_bucket = cut(age_yr, breaks = c(0, 9, 19, 29, 39, 49, 59, 69, 79, Inf), \n                     labels = c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\"))) %>%\n  mutate(`Over/Under 50k` = case_when(\n    Annual2023Income < 49999 ~ \"Less than $50,000\",\n    Annual2023Income >= 50000 ~ \"$50,000 and above\",\n    TRUE ~ NA\n    ),\n  )\n\n\n\n# for (code in names(response_maps)) {\n#   if (response_maps[[code]]['summarize']) {\n#     df <- summarize_subparts(df, code)\n#   } else {\n#     df <- map_only(df, code)\n#   }\n# }\n\n\n```\n\n```{r generate_sample}\n\n# ## SAMPLE DF\n# \n#   generate_sample_data <- function(column_map) {\n#     possible_values <- as.character(0:(length(column_map) - 2))\n#     sample(possible_values, 100, replace = TRUE)\n#   }\n#   \n#   df <- as.data.frame(lapply(response_maps, generate_sample_data))\n#   \n#   for(col in names(response_maps)) {\n#     map <- response_maps[[col]]\n#     df[[col]] <- map[as.numeric(df[[col]]) + 1] \n#   }\n#   df$CPAL.DEMO.007.2 <- factor(df$CPAL.DEMO.007.2)\n#   \n#   df$Annual2023Income <- sample(20000:120000, 100, replace = TRUE)\n#   \n#   df$CPAL.POLICY.035 <- sample(0:1, 100, replace = TRUE)\n#   \n#   zip_codes <- c(75052, 75217, 75211, 75228, 75243, 75043, 75040, 75150, 75227, 75115, 75064)\n#   \n#   df$ZIP_Code <- as.factor(sample(zip_codes, nrow(df), replace = TRUE))\n#   \n#   df$age_yr <- sample(18:70, 100, replace = TRUE)\n#   \n#   df$CPAL.BEN.001 <- sample(c(1,0,-98), 100, replace = TRUE)\n#   \n#   for (i in 1:5) {\n#     condition <- df$CPAL.BEN.001 == 1\n#     df[[paste0(\"CPAL.BEN.001.a_\", i)]] <- NA  # Initialize the new column with NAs\n#     df[[paste0(\"CPAL.BEN.001.a_\", i)]][condition] <- sample(c(1, NA), sum(condition), replace = TRUE)\n#   }\n# \n#   df$CPAL.BEN.001.b <- sample(c(1,0), 100, replace = TRUE)\n#   \n#   df$CPAL.JOB.015 <- sample(c(0,1,2,3,4), 100, replace = TRUE)\n#   \n#   for (i in c(1:5, 8:11, 13, 16)) {\n#     condition <- df$CPAL.JOB.015 == 1\n#     df[[paste0(\"CPAL.JOB.015.a_\", i)]] <- NA  # Initialize the new column with NAs\n#     df[[paste0(\"CPAL.JOB.015.a_\", i)]][condition] <- sample(c(1, NA), sum(condition), replace = TRUE)\n#   }  \n#   \n#   df$CPAL.JOB.008 <- sample(c(0,1,2,3,4,5,6), 100, replace = TRUE)\n#   \n#   df$POVERTYLine2023 <- sample(c(1,2,NA), 100, prob=c(.45,.45,.1), replace=TRUE)\n#   \n#   df$CPAL.EHQ.001 <- sample(c(0,1,2,3,4), 100, replace = TRUE)\n#   \n#   df$CPAL.EHQ.002 <- sample(c(0,1,2,3), 100, replace = TRUE)\n# \n#   df$CPAL.FSTR.001 <- sample(c(0,1,2,3), 100, replace = TRUE)\n#   \n#   df$CPAL.FTAX.001 <- sample(c(0,1,-98), 100, prob=c(.49,.49,.02), replace=TRUE)\n#   \n#   df$CPAL.DEBT.007 <- sample(c(1,2,3,4), 100, replace = TRUE)\n#   \n#   df$CPAL.HOME.005 <- sample(c(0,1,2), 100, replace = TRUE)\n#   df$CPAL.HOME.006 <- sample(c(0,1,2), 100, replace = TRUE)\n# \n#   df$CPAL.MH.009 <- sample(c(0,1,NA), 100, replace = TRUE)\n#   df$CPAL.MH.010 <- sample(c(0,1,NA), 100, replace = TRUE)\n#   \n#   df$CPAL.HEALTH.002 <- sample(c(2,1,-98), prob = c(.48,.48,.04), 100, replace = TRUE)\n#   df$CPAL.HEALTH.003.2 <- sample(c(2,1), 100, replace = TRUE)\n#   df$CPAL.HEALTH.004.2 <- sample(c(0,1), 100, replace = TRUE)\n# \n# \n# ##\n  \ndemographics <- c(names(response_maps), \"Annual2023Income\", \"ZIP_Code\")\n\n\n```\n\n::::: {.shadecontent}\n\n::: grid\n\n::: g-col-6\n\n##### Distribution of Respondents by Race\n\n```{r racedist, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.DEMO.007.2)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.1, label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size = 8) +\n  labs(fill = \"Race\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.text = element_text(size=14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\n```\n\n:::\n\n::: g-col-6\n\n##### Income Distribution of Respondents (Under $200,000)\n\n```{r incomedist, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\nggplot() +\n  geom_histogram(data = df %>% filter(Annual2023Income < 200000), aes(x = Annual2023Income, fill = palette_cpal_main[1]), binwidth = 5000, boundary = 0, alpha = 0.85) +\n  scale_x_continuous(\n    labels = scales::dollar_format(),\n    limits = c(0, 225000),\n    breaks = seq(0, 225000, by = 50000),\n    minor_breaks = seq(0, 225000, by = 10000) \n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    axis.text.x = element_text(size=16),\n    axis.text.y = element_text(size=16),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\n```\n\n:::\n\n::: g-col-6\n\n##### Median Income of Respondents by Race\n\n```{r raceinc, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  summarise(median_income = median(Annual2023Income, na.rm = TRUE)) %>%\n  ggplot(aes(x = median_income, y = CPAL.DEMO.007.2)) + \n  geom_col(fill = palette_cpal_main[1], size = 4, alpha = 0.8, width = 0.7) +\n  scale_x_continuous(labels = scales::dollar_format(), limits = c(0, 70000)) +\n  scale_y_discrete(labels = function(x) {\n    return(stringr::str_wrap(x, width = 22))\n  }) +\n  theme_minimal() +\n  theme(\n    axis.title = element_blank(),\n    panel.grid.major.y = element_blank(),\n    legend.position = \"none\",\n    axis.text.x = element_text(size=14),\n    axis.text.y = element_text(size=14),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\n```\n\n:::\n\n::: g-col-6\n\n##### Age Distribution of Respondents\n\n```{r agedist, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  ggplot(aes(x = age_yr)) +\n    geom_histogram(binwidth = 2.5, alpha = 0.8, fill = palette_cpal_main[1]) +\n    scale_x_continuous(limits = c(0,80)) +\n    labs(x = \"Age\") + \n    theme_minimal() +\n    theme(\n      legend.position = \"none\",\n      axis.title.y = element_blank(),\n      axis.title.x = element_text(size=18),\n      axis.text.x = element_text(size=16),\n      axis.text.y = element_text(size=16),\n      plot.background = element_rect(fill = \"transparent\", colour = NA),\n      panel.background = element_rect(fill = \"transparent\", colour = NA),\n      strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\n```\n\n:::\n\n::: g-col-6\n\n##### Respondent Distribution by Zip Code\n\n```{r zipdist, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n\nzip_counts <- df %>%\n  count(CPAL.DEMO.001) %>%\n  mutate(GEOID = as.character(CPAL.DEMO.001))\n\nzctas_merged <- left_join(zctas_dallas, zip_counts, by = \"GEOID\") %>%\n  mutate(\n    n = case_when(\n      is.na(n) ~ 0,\n      TRUE ~ n\n  )) %>%\n  mutate(\n    per_capita = case_when(\n      estimate > 0 ~ n/estimate,\n      estimate == 0 ~ n/1000)\n  )\n\n# leaflet(zctas_merged) %>%\n#   addProviderTiles(\"CartoDB.Positron\") %>%\n#   addPolygons(\n#     fillColor = ~colorNumeric(\"YlGn\", per_capita)(per_capita),\n#     weight = 1,\n#     opacity = 1,\n#     color = \"white\",\n#     fillOpacity = 0.7,\n#     highlight = TRUE,\n#     label = ~as.character(GEOID),\n#     popup = paste0(\"ZIP: \", GEOID, \"<br/>Per capita: \", formatted_per_capita, \"<br/>Count: \", n)\n#   ) %>%\n#   addLegend(pal = colorNumeric(\"YlGn\", zctas_merged$per_capita, n = 5), values = zctas_merged$per_capita, title = \"Count\")\n\nleaflet(zctas_merged) %>%\n  addProviderTiles(\"CartoDB.Positron\") %>%\n  addPolygons(\n    fillColor = ~colorNumeric(\"YlGn\", n)(n),\n    weight = 1,\n    opacity = 1,\n    color = \"white\",\n    fillOpacity = 0.7,\n    highlight = TRUE,\n    label = ~as.character(GEOID),\n    popup = ~paste0(\"ZIP: \", GEOID, \"<br/>Per capita: \", round(per_capita*1000, digits = 2), \"/1000<br/>Count: \", n)\n  ) %>%\n  addLegend(pal = colorNumeric(\"YlGn\", zctas_merged$n, n = 5), values = zctas_merged$n, title = \"Count\", position = \"bottomright\", labFormat = labelFormat(transform = function(x) round(x)))\n\n```\n\n:::\n\n::: g-col-6\n\n##### Respondents by Number of Children Age 6 or Younger\n\n```{r child6, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  mutate(`Number of children age 6 or younger` = case_when(\n    is.na(CPAL.CBCL.015) ~ \"None\",\n    TRUE ~ as.character(CPAL.CBCL.015)\n  )) %>%\n  group_by(`Number of children age 6 or younger`) %>%\n  summarise(\n    `Median income` = scales::dollar(median(Annual2023Income, na.rm = TRUE)),\n    `Median respondent age` = paste0(round(median(`age_yr`, na.rm = TRUE), digits = 0), \" yrs.\"),\n    n = n()\n  ) %>%\n  ungroup() %>%\n  datatable(options = list(paging = FALSE,\n                           searching = FALSE,                            \n                           info = FALSE),\n            rownames = FALSE)\n\n```\n\n:::\n\n:::\n\n:::::\n\n```{r mapping, output = FALSE}\n# df %>%\n#   mutate(housing_problems = case_when(\n#     \n#   ))\n```\n\n# Categories\n\n::: {.callout-note appearance=\"simple\"}\n\n## Core Questions\n\nStarred <i class=\"bi bi-star\"></i> questions are considered \"core\" insights.\n\n:::\n\n## Benefits and benefits delivery\n\n::: grid\n::: g-col-5\n**CPAL.JOB.015**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> Are you receiving any sort of public or employment benefits, such as Supplemental Nutrition Assistance Program (SNAP), Temporary Assistance for Needy Families (TANF), Social Security Income (SSI) or others?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.JOB.015)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r benefits01, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.JOB.015)) %>%\n  mutate(CPAL.JOB.015 = case_when(\n    CPAL.JOB.015 == 1 ~ \"Yes\",\n    CPAL.JOB.015 == 0 ~ \"No\",\n    CPAL.JOB.015 == 2 ~ \"Didn't qualify\",\n    CPAL.JOB.015 == 3 ~ \"Intend to apply\",\n    CPAL.JOB.015 == 4 ~ \"Applied and waiting for a decision\"\n  )) %>%\n  group_by(CPAL.JOB.015) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.JOB.015)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size = 6) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \n                               \"No\" = palette_cpal_main[2], \n                               \"Didn't qualify\" = \"#b0663e\",\n                               \"Intend to apply\" = \"#4c8a4a\",\n                               \"Applied and waiting for a decision\" = palette_cpal_main[4]),\n                    breaks = c(\"Yes\", \"No\", \"Didn't qualify\", \"Intend to apply\", \"Applied and waiting for a decision\")\n                    )\n\n```\n\n*Percent* of those receiving benefits who *receive* benefits for...\n\n```{r benefits1, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.JOB.015.a_\")) %>% \n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1 & CPAL.JOB.015 == 1, na.rm = T)/sum(CPAL.JOB.015 == 1, na.rm = T))) %>% \n  arrange(desc(percentage)) %>%\n  ggplot(aes(x = percentage, y = answer, fill = palette_cpal_main[1])) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = 1.1, \n        size = 6, \n        colour = \"white\") +\n    geom_text(aes(label = ifelse(percentage <= 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1, \n        size = 6, \n        colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_y_discrete(labels = c(\"CPAL.JOB.015.a_1\" = \"Health or medical services\",\n                              \"CPAL.JOB.015.a_2\" = \"Food\",\n                              \"CPAL.JOB.015.a_3\" = \"Income (i.e. TANF)\",\n                              \"CPAL.JOB.015.a_4\" = \"Disability (non-military)\",\n                              \"CPAL.JOB.015.a_5\" = \"Military benefits\",\n                              \"CPAL.JOB.015.a_8\" = \"Housing\",\n                              \"CPAL.JOB.015.a_9\" = \"Childcare\",\n                              \"CPAL.JOB.015.a_10\" = \"Other\",\n                              \"CPAL.JOB.015.a_11\" = \"Transportation\",\n                              \"CPAL.JOB.015.a_13\" = \"Clothing\",\n                              \"CPAL.JOB.015.a_16\" = \"Unemployment\"\n                              ))\n\n```\n:::\n\n::: g-col-5\n**CPAL.BEN.001.b**\n\n> Do your food benefits make it possible to buy enough groceries each month?\n\n**Rate of response (all respondents):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.BEN.001.b)))/nrow(df), accuracy = 0.1)`\n\n**Rate of response (receives food benefits):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.BEN.001.b)))/nrow(df %>% filter(!is.na(CPAL.BEN.001.b))), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r benefits03, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.BEN.001.b)) %>%\n  mutate(CPAL.BEN.001.b = case_when(\n    CPAL.BEN.001.b == 1 ~ \"Yes\",\n    CPAL.BEN.001.b == 0 ~ \"No\",\n    CPAL.BEN.001.b == -98 ~ \"Unsure\",\n  )) %>%\n  group_by(CPAL.BEN.001.b) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.BEN.001.b)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.1, label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 16),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Unsure\" = \"#ababab\"),\n                    breaks = c(\"Yes\", \"No\", \"Unsure\"))\n\n```\n:::\n\n::: g-col-5\n**CPAL.BEN.001**\n\n> Have you tried to apply for a federal or local benefit in the last year, such as SNAP, WIC, Medicaid, or rental assistance?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.JOB.015)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r benefits02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  mutate(CPAL.BEN.001 = case_when(\n    CPAL.BEN.001 == 1 ~ \"Yes\",\n    CPAL.BEN.001 == 0 ~ \"No\",\n    CPAL.BEN.001 == -98 ~ \"Unsure\",\n    is.na(CPAL.BEN.001) ~ \"Unsure\"\n  )) %>%\n  group_by(CPAL.BEN.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.BEN.001)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.15, label = ifelse(prop > 0.05, scales::percent(prop, scale = 100), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size = 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 16),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Unsure\" = \"#ababab\"),\n                    breaks = c(\"Yes\", \"No\", \"Unsure\"))\n\n```\n\n*Percent* of those *applying* for benefits who found that...\n\n```{r benefits2, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.BEN.001.a_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1 & CPAL.BEN.001 == 1, na.rm = T)/sum(CPAL.BEN.001 == 1, na.rm = T))) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[1-3]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = 1.1, \n          size = 8, \n          colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1, \n        size = 8, \n        colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.BEN.001.a_1\" = \"The application was simple and easy to complete\",\n                 \"CPAL.BEN.001.a_2\" = \"I felt confident that I would receive help soon\",\n                 \"CPAL.BEN.001.a_3\" = \"I was able to access support in completing the application\" ,\n                 \"CPAL.BEN.001.a_4\" = \"The process was frustrating\",\n                 \"CPAL.BEN.001.a_5\" = \"It was hard to know what was needed to complete the application\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n:::\n\n:::\n\n## Employment and income\n\n::: grid\n::: g-col-5\n**CPAL.JOB.008**\n\n> Current employment status\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.JOB.008)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r empl01, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.JOB.008)) %>%\n  mutate(CPAL.JOB.008 = case_when(\n    CPAL.JOB.008 == 1 ~ \"Working (either full- or part-time)\",\n    CPAL.JOB.008 == 2 ~ \"Unemployed or laid off\",\n    CPAL.JOB.008 == 3 ~ \"Temporarily out of work or furloughed\",\n    CPAL.JOB.008 == 4 ~ \"Other\",\n    CPAL.JOB.008 == 5 ~ \"Stay-at-home parent (not seeking work)\",\n    CPAL.JOB.008 == 6 ~ \"Student (either working or not working)\"\n  )) %>%\n  group_by(CPAL.JOB.008) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.JOB.008)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.05, label = ifelse(prop > 0.1, scales::percent(prop * 100, scale = 1, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size = 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Working (either full- or part-time)\" = palette_cpal_main[1], \n                               \"Unemployed or laid off\" = palette_cpal_main[2], \n                               \"Temporarily out of work or furloughed\" = \"#b0663e\",\n                               \"Student (either working or not working)\" = \"#4c8a4a\",\n                               \"Stay-at-home parent (not seeking work)\" = palette_cpal_main[4],\n                               \"Other\" = \"#ababab\"),\n                    breaks = c(\"Working (either full- or part-time)\",\n                               \"Unemployed or laid off\",\n                               \"Temporarily out of work or furloughed\", \n                               \"Stay-at-home parent (not seeking work)\",\n                               \"Student (either working or not working)\",\n                               \"Other\")\n                    )\n\n```\n:::\n\n:::\n\n::: grid\n\n::: g-col-5\n**Annual2023Income**\n\n> Reported income from last year\n\n**Rate of Response:** `r round((nrow(df %>% filter(!is.na(Annual2023Income)))/nrow(df))*100, 2)`\n\n**Median Income:** `r scales::dollar_format()(median(df$Annual2023Income, na.rm = TRUE))`\n\n**Maximum Income:** `r scales::dollar_format()(max(df$Annual2023Income, na.rm = TRUE))`\n:::\n\n::: g-col-7\n\n&nbsp;\n\nThe Dallas County median income in 2021 was **`r scales::dollar(dallas_county_acs %>% pull(B19013_001))`**, so *this survey sample is lower-income* than Dallas County as a whole.\n\n```{r empl02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(Annual2023Income), Annual2023Income < 200000, Annual2023Income > 2000) %>%\n  ggplot(aes(x = factor(1), y = Annual2023Income)) + \n  geom_violin(trim=FALSE, fill=palette_cpal_main[1], color=palette_cpal_main[1]) + \n  labs(title = NULL,\n       x = NULL,\n       y = NULL) + \n  theme_minimal() +\n  theme(axis.title.x=element_blank(),\n        axis.ticks.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.text.y = element_text(size=16)) +\n  scale_y_continuous(labels = scales::dollar_format())\n\n```\n\n:::\n\n:::\n\n::: {.column-margin}\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n`r paste0(nrow(df %>% filter(Annual2023Income > 199999.99)), \" respondents reporting income above $200,000 not visualized. Maximum reported income is \", scales::dollar(max(df$Annual2023Income, na.rm = T)))`\n:::\n\n\n::: grid\n\n::: g-col-5\n**POVERTYLine2023**\n\n> Above or below poverty line\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(POVERTYLine2023)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\nThe Dallas County poverty rate in 2021 was **`r scales::percent(dallas_county_acs %>% pull(povertyRate))`**, so *this survey sample is lower-income* than Dallas County as a whole.\n\n```{r empl03, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(POVERTYLine2023)) %>%\n  mutate(POVERTYLine2023 = case_when(\n    POVERTYLine2023 == 1 ~ \"Under the poverty line\",\n    POVERTYLine2023 == 2 ~ \"Over the poverty line\",\n    TRUE ~ as.character(POVERTYLine2023)\n  )) %>%\n  count(POVERTYLine2023) %>%\n  mutate(prop = n / sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = POVERTYLine2023)) +\n  geom_bar(stat = \"identity\", width = 0.4) +\n  geom_text(aes(label = scales::percent(prop, accuracy = 0.1), y = prop, size = 2), color = \"white\", position = position_stack(vjust = 0.5)) +\n  geom_text(aes(label = POVERTYLine2023, y = prop, x = 1.3, size = 2), color = \"dimgrey\", position = position_stack(vjust = 0.5)) +\n  labs(title = NULL,\n       x = NULL,\n       y = NULL) +\n  coord_flip() +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    legend.position = \"none\"\n  ) +\n  scale_size_continuous(range = c(4, 6))\n\n# df %>%\n#   filter(!is.na(POVERTYLine2023), !is.na(CPAL.DEMO.007.2)) %>%\n#   count(POVERTYLine2023, CPAL.DEMO.007.2) %>%\n#   group_by(CPAL.DEMO.007.2) %>%\n#   mutate(prop = n / sum(n)) %>%\n#   ggplot(aes(x = CPAL.DEMO.007.2, y = prop, fill = interaction(CPAL.DEMO.007.2, POVERTYLine2023))) +\n#   geom_bar(stat = \"identity\", position = \"stack\", width = 0.8) +\n#   geom_text(data = . %>% filter(POVERTYLine2023 == \"Under\"),\n#             aes(label = scales::percent(prop), y = prop),\n#             color = \"white\", size = 4, \n#             # position = position_stack(vjust = 0.5)\n#             ) +\n#   scale_fill_manual(values = c(scales::alpha(palette_cpal_main[c(1:4,6:9)], 0.5), palette_cpal_main[c(1:4,6:9)]), \n#                     # name = \"Race\",\n#                     # breaks = unique(interaction(df$CPAL.DEMO.007.2, df$POVERTYLine2023)),\n#                     labels = rep(unique(df$CPAL.DEMO.007.2), 2)) + \n#   labs(title = NULL, x = NULL, y = NULL) +\n#   scale_y_continuous(labels = scales::percent) +\n#   theme_minimal() +\n#   theme(\n#     axis.text = element_blank(),\n#     axis.title = element_blank(),\n#     axis.ticks = element_blank(),\n#     panel.grid = element_blank()\n#   )\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.EHQ.001**\n\n> Which of the following best describes what has happened to your family income in the past month?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.EHQ.001)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n**`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.001), CPAL.EHQ.001 < 2))/nrow(df %>% filter(is.numeric(CPAL.EHQ.001))), accuracy = 0.1)`** of respondents report a *decrease* in monthly income, while only **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.001), CPAL.EHQ.001 > 2))/nrow(df %>% filter(is.numeric(CPAL.EHQ.001))), accuracy = 0.1)`** report an *increase*.\n\n```{r empl04, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  mutate(CPAL.EHQ.001 = factor(\n    case_when(\n      CPAL.EHQ.001 == 0 ~ \"Has decreased very much\",\n      CPAL.EHQ.001 == 1 ~ \"Has decreased somewhat\",\n      CPAL.EHQ.001 == 2 ~ \"Has stayed the same\",\n      CPAL.EHQ.001 == 3 ~ \"Has increased somewhat\",\n      CPAL.EHQ.001 == 4 ~ \"Has increased very much\",\n      TRUE ~ NA\n    ),\n    levels = c(\"Has decreased very much\", \n               \"Has decreased somewhat\", \n               \"Has stayed the same\", \n               \"Has increased somewhat\", \n               \"Has increased very much\")\n  )) %>%\n  filter(!is.na(CPAL.EHQ.001)) %>%\n  group_by(CPAL.EHQ.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = prop, y = CPAL.EHQ.001, fill = CPAL.EHQ.001)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  geom_text(aes(label = ifelse(prop > 0.05, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), hjust = 1.1, size = 8, colour = \"white\") +\n  geom_text(aes(label = ifelse(prop < 0.05, scales::percent(prop, scale = 100), \"\")), \n          position = position_dodge(width=0.9), hjust = -0.1, size = 8, colour = \"grey\") +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 14),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_fill_manual(values = colorRampPalette(c(palette_cpal_main[2], \"#ababab\", palette_cpal_main[1]))(5),\n                    breaks = c(\"Has decreased very much\",\n                               \"Has decreased somewhat\",\n                               \"Has stayed the same\", \n                               \"Has increased somewhat\",\n                               \"Has increased very much\")\n                    ) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), expand = expansion(mult = c(0.1, 0)))\n\n```\n\n#### **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.001), CPAL.EHQ.001 < 2, !is.na(CPAL.CBCL.015), CPAL.CBCL.015 > 0))/nrow(df %>% filter(!is.na(CPAL.CBCL.015), CPAL.CBCL.015 > 0, is.numeric(CPAL.EHQ.001))), accuracy = 0.1)`** of respondents with at least one child aged *6 or younger* report a *decrease* in monthly income, compared to **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.001), CPAL.EHQ.001 > 2, !is.na(CPAL.CBCL.015), CPAL.CBCL.015 > 0))/nrow(df %>% filter(!is.na(CPAL.CBCL.015), CPAL.CBCL.015 > 0, is.numeric(CPAL.EHQ.001))), accuracy = 0.1)`** reporting an *increase*.\n\n:::\n\n::: g-col-5\n**CPAL.EHQ.002**\n\n> Which of the following best describes your family financially at this time?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.EHQ.002)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n**`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.002), CPAL.EHQ.002 > 0))/nrow(df), accuracy = 0.1)`** of respondents report at least some family *financial problems*.\n\n```{r empl05, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.EHQ.002)) %>%\n  mutate(CPAL.EHQ.002 = factor(\n    case_when(\n      CPAL.EHQ.002 == 0 ~ \"No problems\",\n      CPAL.EHQ.002 == 1 ~ \"Minor problems\",\n      CPAL.EHQ.002 == 2 ~ \"Major problems\",\n      CPAL.EHQ.002 == 3 ~ \"Extreme problems\",\n    ),\n    levels = c(\"No problems\", \"Minor problems\", \"Major problems\", \"Extreme problems\")\n  )) %>%\n  group_by(CPAL.EHQ.002) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = prop, y = CPAL.EHQ.002, fill = CPAL.EHQ.002)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  geom_text(aes(label = ifelse(prop > 0.1, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = 1.1, \n            size = 8, \n            colour = \"white\") +\n  geom_text(aes(label = ifelse(prop <= 0.1, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1,\n        size = 8, \n        colour = \"grey\") +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 14),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_fill_manual(values = colorRampPalette(c(\"#ABABAB\", palette_cpal_main[2], \"#592523\"))(5),\n                    c(\"No problems\", \"Minor problems\", \"Major problems\", \"Extreme problems\")) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), expand = expansion(mult = c(0.1, 0)))\n\n\n```\n\n*White respondents* are least likely to report any financial hardships.\n\n```{r empl05_2, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.EHQ.002), CPAL.DEMO.007.2 %in% c(\n    \"Hispanic, Latine, or Latin origin\",\n    \"Black or African American\",\n    \"White\"\n  )) %>%\n  mutate(CPAL.EHQ.002 = factor(\n    case_when(\n      CPAL.EHQ.002 == 0 ~ 0,\n      CPAL.EHQ.002 > 0 ~ 1\n    )\n  )) %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  summarize(no = sum(CPAL.EHQ.002 == 0)/n(), yes = sum(CPAL.EHQ.002 == 1)/n()) %>%\n  gather(key = \"financial_problems\", value = \"prop\", -CPAL.DEMO.007.2) %>%\n  ggplot(aes(x = CPAL.DEMO.007.2, y = prop, fill = palette_cpal_main[1], alpha = financial_problems)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  geom_text(aes(label = ifelse(financial_problems == \"yes\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n          position = position_identity(), hjust = 1.1, size = 8, colour = \"white\") +\n  coord_flip() +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 12),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_alpha_manual(values = c(0.2, 1))\n\n\n\n```\n\n**`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.002), CPAL.EHQ.002 > 0, !is.na(POVERTYLine2023), as.numeric(POVERTYLine2023) == 1))/nrow(df %>% filter(is.numeric(CPAL.EHQ.002), !is.na(POVERTYLine2023), as.numeric(POVERTYLine2023) == 1)), accuracy = 0.1)`** of those *under* the poverty line report *family financial problems*, as do **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.EHQ.002), CPAL.EHQ.002 > 0, !is.na(POVERTYLine2023), as.numeric(POVERTYLine2023) == 2))/nrow(df %>% filter(is.numeric(CPAL.EHQ.002), !is.na(POVERTYLine2023), as.numeric(POVERTYLine2023) == 2)), accuracy = 0.1)`** of those *above* the poverty line.**\n\n```{r empl05_3, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.EHQ.002), !is.na(POVERTYLine2023)) %>%\n  mutate(\n    CPAL.EHQ.002 = factor(\n      case_when(\n        CPAL.EHQ.002 == 0 ~ 0,\n        CPAL.EHQ.002 > 0 ~ 1)),\n    POVERTYLine2023 = as.factor(POVERTYLine2023)\n  ) %>%\n  group_by(POVERTYLine2023) %>%\n  summarize(no = sum(CPAL.EHQ.002 == 0)/n(), yes = sum(CPAL.EHQ.002 == 1)/n()) %>%\n  mutate(POVERTYLine2023 = recode(POVERTYLine2023, `1` = \"Under the poverty line, reporting problems\", `2` = \"Over the poverty line, reporting problems\")) %>%\n  gather(key = \"financial_problems\", value = \"prop\", -POVERTYLine2023) %>%\n  ggplot(aes(x = POVERTYLine2023, y = prop, fill = POVERTYLine2023, alpha = financial_problems)) +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  geom_text(aes(label = ifelse(financial_problems == \"yes\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n          position = position_identity(), \n          hjust = 1.1, \n          size = 8, \n          colour = \"white\") +\n  coord_flip() +\n  theme(\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 12),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_color_manual(values = c(\"Over the poverty line, reporting problems\" = palette_cpal_main[1], \n                                \"Under the poverty line, reporting problems\" = palette_cpal_main[2]),\n                     breaks = c(\n                       \"Over the poverty line, reporting problems\",\n                       \"Under the poverty line, reporting problems\"\n                     )) +\n  scale_alpha_manual(values = c(0.2, 1))\n\n```\n:::\n\n::: g-col-5\n**CPAL.FSTR.001**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> In the past month, how hard has it been for your family to pay for the very basics like food, housing, medical care, and heating?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.FSTR.001)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n**`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.FSTR.001), CPAL.FSTR.001 > 0))/nrow(df), accuracy = 0.1)`** of respondents say paying for *basics* is *difficult*.\n\n**`r scales::percent(1 - nrow(df %>% filter(is.numeric(CPAL.FSTR.001), CPAL.FSTR.001 > 0, POVERTYLine2023 == 1))/nrow(df %>% filter(is.numeric(CPAL.FSTR.001), CPAL.FSTR.001 > 0)), accuracy = 0.1)`** of respondents who report difficulty paying for *basics* are *over* the poverty line.\n\n\n```{r empl06, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.FSTR.001)) %>%\n  mutate(CPAL.FSTR.001 = factor(\n    case_when(\n      CPAL.FSTR.001 == 0 ~ \"Not very hard\",\n      CPAL.FSTR.001 == 1 ~ \"Somewhat hard\",\n      CPAL.FSTR.001 == 2 ~ \"Hard\",\n      CPAL.FSTR.001 == 3 ~ \"Very hard\",\n    ),\n    levels = c(\"Not very hard\", \"Somewhat hard\", \"Hard\", \"Very hard\")\n  )) %>%\n  group_by(CPAL.FSTR.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = prop, y = CPAL.FSTR.001, fill = CPAL.FSTR.001)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  geom_text(aes(label = ifelse(prop > 0.10, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = 1.1, \n            size = 8, \n            colour = \"white\") +\n  geom_text(aes(label = ifelse(prop <= 0.10, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = -0.1, \n            size = 8, \n            colour = \"grey\") +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 16),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_fill_manual(values = colorRampPalette(c(\"#ABABAB\", palette_cpal_main[2], \"#592523\"))(5),\n                    c(\"Not very hard\", \"Somewhat hard\", \"Hard\", \"Very hard\")) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), expand = expansion(mult = c(0.1, 0)))\n\n```\n\n\n#### **`r scales::percent(nrow(df %>% filter(is.numeric(CPAL.FSTR.001), CPAL.FSTR.001 > 0, !is.na(CPAL.CBCL.015)))/nrow(df %>% filter(!is.na(CPAL.CBCL.015))), accuracy = 0.1)`** of respondents with at least one child *6 years old or younger* report *difficulty paying for basics*.\n\n\n```{r difficultypanel}\n\ndf %>%\n  filter(Annual2023Income < 10000000, !is.na(CPAL.FSTR.001)) %>%\n  mutate(CPAL.FSTR.001 = factor(\n    case_when(\n      CPAL.FSTR.001 == 0 ~ \"Not very hard\",\n      CPAL.FSTR.001 == 1 ~ \"Somewhat hard\",\n      CPAL.FSTR.001 == 2 ~ \"Hard\",\n      CPAL.FSTR.001 == 3 ~ \"Very hard\",\n    ),\n    levels = c(\"Not very hard\", \"Somewhat hard\", \"Hard\", \"Very hard\")\n  )) %>%\n  group_by(CPAL.FSTR.001) %>%\n  summarize(`Median income` = scales::dollar(median(Annual2023Income, na.rm = TRUE)),\n            `Median respondent age` = paste0(as.character(round(median(age_yr, na.rm = TRUE)), digits = 2), \" yrs.\"),\n            `Pct. with children under 6` = scales::percent(mean(ChildUnder6))) %>%\n  datatable(options = list(paging = FALSE,\n                           searching = FALSE,\n                           info = FALSE\n                           ),\n            rownames = FALSE)\n```\n\n&nbsp;\n\n```{r difficultymap}\n\nbasics_df <- df %>%\n  filter(!is.na(CPAL.FSTR.001)) %>%\n  group_by(CPAL.DEMO.001) %>%\n  summarize(pct = sum(CPAL.FSTR.001 > 0, na.rm = TRUE) / n(),\n            n = n(), \n            n_true = sum(CPAL.FSTR.001 > 0, na.rm = TRUE),\n            .groups = 'drop') %>%\n  mutate(GEOID = as.character(CPAL.DEMO.001)) %>%\n  left_join(zctas_dallas, by = \"GEOID\") %>%\n  mutate(\n    per_capita = case_when(\n      estimate > 0 ~ n/estimate,\n      TRUE ~ 0)\n  ) %>%\n  filter(!is.na(NAME)) %>%\n  st_as_sf()\n\nleaflet(basics_df) %>%\n  addProviderTiles(\"CartoDB.Positron\") %>%\n  addPolygons(\n    fillColor = ~colorNumeric(\"Reds\", pct)(pct),\n    weight = 1,\n    opacity = 1,\n    color = \"white\",\n    fillOpacity = 0.7,\n    highlight = TRUE,\n    label = ~as.character(GEOID),\n    popup = ~paste0(\"ZIP: \", GEOID, \n                    \"<br/>Percent struggling: \", scales::percent(pct, accuracy = 0.1),\n                    \"<br/>Count: \", n, \n                    \"<br/>Per capita: \", round(per_capita*1000, digits = 2), \"/1000\"\n                    )\n  ) %>%\n  addLegend(\n    pal = colorNumeric(\"Reds\", basics_df$pct),\n    values = basics_df$pct,\n    labels = scales::percent(basics_df$pct, accuracy = 0.1), \n    title = \"Percent who report <br/>paying for basics is difficult\")\n\n```\n:::\n\n::: g-col-5\n**CPAL.FTAX.001**\n\n> Did you file your taxes in 2023 (for the income year 2022)?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.FTAX.001)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r taxes, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.FTAX.001)) %>%\n  mutate(CPAL.FTAX.001 = case_when(\n    CPAL.FTAX.001 == 1 ~ \"Yes\",\n    CPAL.FTAX.001 == 0 ~ \"No\",\n    CPAL.FTAX.001 == -97 ~ \"Prefer not to answer\"\n  )) %>%\n  group_by(CPAL.FTAX.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.FTAX.001)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(label = ifelse(prop > 0.10, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Prefer not to answer\" = \"#ababab\"),\n                    breaks = c(\"Yes\", \"No\", \"Prefer not to answer\"))\n\n\ndf %>% \n  filter(rowSums(is.na(select(., starts_with(\"CPAL.FTAX.001.b_\")))) != length(select(., starts_with(\"CPAL.FTAX.001.b_\")))) %>%\n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.FTAX.001.b_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1 & CPAL.FTAX.001 == 1, na.rm = T)/sum(CPAL.FTAX.001 == 1, na.rm = T))) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[7]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.4, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = 1.1, \n          size = 8, \n          colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.4, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1, \n        size = 8, \n        colour = \"grey\") +\n  labs(title = \"Tax filers who found that...\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_text(size = 14),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.FTAX.001.b_1\" = \"I couldn't find the right forms\",\n                 \"CPAL.FTAX.001.b_2\" = \"I found it difficult to complete the right forms\",\n                 \"CPAL.FTAX.001.b_3\" = \"I was confused on where to begin\" ,\n                 \"CPAL.FTAX.001.b_4\" = \"I had trouble finding time\",\n                 \"CPAL.FTAX.001.b_5\" = \"I didn't understand how to file\",\n                 \"CPAL.FTAX.001.b_6\" = \"I needed help but didn't know where to find it\",\n                 \"CPAL.FTAX.001.b_7\" = \"I didn't have any challenges\",\n                 \"CPAL.FTAX.001.b_8\" = \"I experienced a challenge not listed\")\n    return(stringr::str_wrap(recodes[x], width = 40))\n  })\n\n\ndf %>% \n  filter(rowSums(is.na(select(., starts_with(\"CPAL.FTAX.001.c_\")))) != length(select(., starts_with(\"CPAL.FTAX.001.c_\"))))   %>%\n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.FTAX.001.c_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1 & CPAL.FTAX.001 == 0, na.rm = T)/sum(CPAL.FTAX.001 == 0, na.rm = T))) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[7]$\") ~ palette_cpal_main[2],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.4, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = 1.1, \n          size = 8, \n          colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.4, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), \n        hjust = -0.1, \n        size = 8, \n        colour = \"grey\") +\n  labs(title = stringr::str_wrap(\"Respondents who didn't do their taxes because...\", width = 40)) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_text(size = 14),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.FTAX.001.c_1\" = \"I don't understand what forms I need\",\n                 \"CPAL.FTAX.001.c_2\" = \"I am confused on where to begin\",\n                 \"CPAL.FTAX.001.c_3\" = \"I don't have time\" ,\n                 \"CPAL.FTAX.001.c_4\" = \"I don't understand how to file\",\n                 \"CPAL.FTAX.001.c_5\" = \"I need help and I don't know where to find it\",\n                 \"CPAL.FTAX.001.c_6\" = \"I don't think I make enough to file\",\n                 \"CPAL.FTAX.001.c_7\" = \"I experienced a challenge not listed\")\n    return(stringr::str_wrap(recodes[x], width = 35))\n  })\n\n\n```\n\n:::\n:::\n\n## Healthcare and childcare\n\n::: grid\n\n::: g-col-5\n**CPAL.HEALTH.001.a**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> Which of the following best represents your health insurance coverage?\n:::\n:::\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.POLICY.016\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n```{r healthcare001, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.HEALTH.001.a\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"10$\") ~ palette_cpal_main[2],\n      stringr::str_detect(answer, \"997$|998$|999$\") ~ palette_cpal_main[5],\n      TRUE ~ palette_cpal_main[1]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.25, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.25, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\nscale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.HEALTH.001.a_1\" = \"Insurance through current or former employer\",\n                 \"CPAL.HEALTH.001.a_2\" = \"Self-pay\",\n                 \"CPAL.HEALTH.001.a_3\" = \"Medicare\" ,\n                 \"CPAL.HEALTH.001.a_4\" = \"Medicaid\",\n                 \"CPAL.HEALTH.001.a_5\" = \"TRICARE\",\n                 \"CPAL.HEALTH.001.a_6\" = \"Enrolled for VA healthcare\",\n                 \"CPAL.HEALTH.001.a_7\" = \"Indian Health Service\",\n                 \"CPAL.HEALTH.001.a_8\" = \"Other\",         \n                 \"CPAL.HEALTH.001.a_10\" = \"Not covered\",\n                 \"CPAL.HEALTH.001.a_997\" = \"Do not wish to disclose\",\n                 \"CPAL.HEALTH.001.a_998\" = \"Unsure\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.HEALTH.002**\n\n> Are your children that are between 0 and 5 years of age covered by any kind of health insurance?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HEALTH.002)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.HEALTH.002), CPAL.HEALTH.002 != -97) %>%\n  mutate(CPAL.HEALTH.002 = factor(\n    case_when(\n      CPAL.HEALTH.002 == 1 ~ \"Covered\",\n      CPAL.HEALTH.002 == 2 ~ \"Not covered\",\n      CPAL.HEALTH.002 == -98 ~ \"I don't know\",\n      TRUE ~ NA\n    ),\n    levels = c(\"Covered\", \n               \"Not covered\",\n               \"I don't know\")\n  )) %>%\n  filter(!is.na(CPAL.HEALTH.002)) %>%\n  group_by(CPAL.HEALTH.002) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HEALTH.002)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Covered\" = palette_cpal_main[1], \"Not covered\" = palette_cpal_main[2], \"I don't know\" = \"#ababab\"),\n                    breaks = c(\"Covered\", \"Not covered\", \"I don't know\"))\n\n```\n:::\n\n::: g-col-5\n**CPAL.HEALTH.003.2**\n\n> At any time in the last month, did you DELAY getting medical care (including physical or mental health visits)?\n\n**Rate of response (if applicable):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HEALTH.003.2)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care00, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.HEALTH.004.2), CPAL.HEALTH.003.2 != -97) %>%\n  mutate(CPAL.HEALTH.003.2 = factor(\n    case_when(\n      CPAL.HEALTH.003.2 == 1 ~ \"Yes\",\n      CPAL.HEALTH.003.2 == 0 ~ \"No\",\n      CPAL.HEALTH.003.2 == -98 ~ \"I don't know\"\n    ),\n    levels = c(\"Yes\", \n               \"No\",\n               \"I don't know\"\n               )\n  )) %>%\n  group_by(CPAL.HEALTH.003.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HEALTH.003.2)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.25,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size=7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(palette_cpal_main[1], palette_cpal_main[2], \"#ababab\"),\n                    breaks = c(\"Yes\",\n                               \"No\",\n                               \"I don't know\"\n                               )\n                    )\n```\n:::\n\n::: g-col-5\n**CPAL.POLICY.035**\n\n> Are you currently looking for childcare?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.POLICY.035)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care01, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.POLICY.035)) %>%\n  mutate(CPAL.POLICY.035 = factor(\n    case_when(\n      CPAL.POLICY.035 == 1 ~ \"Yes\",\n      CPAL.POLICY.035 == 0 ~ \"No\",\n    ),\n    levels = c(\"Yes\", \n               \"No\")\n  )) %>%\n  group_by(CPAL.POLICY.035) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.POLICY.035)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.2, label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Yes\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2]),\n                    breaks = c(\"Yes\", \"No\"))\n\n```\n\n```{r care01_2, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>%\n  filter(!is.na(CPAL.POLICY.035), CPAL.POLICY.035 != -99, !is.na(Annual2023Income)) %>%\n  mutate(CPAL.POLICY.035 = factor(\n    CPAL.POLICY.035,\n  levels = c(0, \n             1)\n  )) %>%\n  mutate(`Income Bracket` = factor(case_when(\n      Annual2023Income < 15000 ~ \"Less than $15,000\",\n      Annual2023Income >= 15000 & Annual2023Income < 24999 ~ \"$15,000 to $24,999\",\n      Annual2023Income >= 25000 & Annual2023Income < 34999 ~ \"$25,000 to $34,999\",\n      Annual2023Income >= 35000 & Annual2023Income < 49999 ~ \"$35,000 to $49,999\",\n      Annual2023Income >= 50000 & Annual2023Income < 74999 ~ \"$50,000 to $74,999\",\n      Annual2023Income >= 75000 & Annual2023Income < 99999 ~ \"$75,000 to $99,999\",\n      Annual2023Income >= 100000 & Annual2023Income < 149999 ~ \"$100,000 to $150,999\",\n      Annual2023Income >= 150000 ~ \"$150,000 and above\"\n    ),\n    levels = c(\"Less than $15,000\",\n               \"$15,000 to $24,999\",\n               \"$25,000 to $34,999\",\n               \"$35,000 to $49,999\",\n               \"$50,000 to $74,999\",\n               \"$75,000 to $99,999\",\n               \"$100,000 to $150,999\",\n               \"$150,000 and above\")\n  )) %>%\n  group_by(`Income Bracket`) %>%\n  summarize(`Not looking` = sum(CPAL.POLICY.035 == 1)/n(), `Looking` = sum(CPAL.POLICY.035 == 0)/n()) %>%\n  gather(key = \"childcare\", value = \"prop\", -`Income Bracket`) %>%\n  ggplot(aes(x = `Income Bracket`, y = prop, fill = `Income Bracket`, alpha = childcare)) +\n  geom_text(aes(label = ifelse(childcare == \"Not looking\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n        position = position_stack(), hjust = -0.1, size = 8, colour = \"grey\") +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  coord_flip() +\n  labs(title = \"Looking for childcare by income\") +\n  theme(\n    axis.text.y = element_text(size = 16),\n    axis.title = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_alpha_manual(values = c(0.2, 1))\n```\n:::\n\n::: g-col-5\n**CPAL.POLICY.037**\n\n> Have you experienced disruptions to your childcare in the past month?\n\n**Rate of response (if applicable):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.POLICY.037), CPAL.POLICY.037 != -99))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care001, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.POLICY.037), CPAL.POLICY.037 != -99) %>%\n  mutate(CPAL.POLICY.037 = factor(\n    case_when(\n      CPAL.POLICY.037 == 0 ~ \"No disruptions\",\n      CPAL.POLICY.037 == 1 ~ \"Disruptions\",\n    ),\n    levels = c(\"No disruptions\", \n               \"Disruptions\")\n  )) %>%\n  group_by(CPAL.POLICY.037) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n    ggplot(aes(x = \"\", y = prop, fill = CPAL.POLICY.037)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.15, label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"No disruptions\" = palette_cpal_main[1], \"Disruptions\" = palette_cpal_main[2]),\n                    breaks = c(\"Disruptions\", \"No disruptions\"))\n\n```\n:::\n\n::: g-col-5\n**CPAL.POLICY.016**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> Currently, which of the following types of childcare do you use for your child(ren) under age 6 for at least 5 hours per week?\n:::\n:::\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.POLICY.016\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n```{r childcare001, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.POLICY.016\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[8:999]$\") ~ palette_cpal_main[2],\n      TRUE ~ palette_cpal_main[1]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\nscale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14),\n    panel.grid.major.y = element_blank()\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.POLICY.016_1\" = \"Daycare\",\n                 \"CPAL.POLICY.016_2\" = \"Paid family, friend, or neighbor\",\n                 \"CPAL.POLICY.016_3\" = \"Unpaid family, friend, or neighbor\" ,\n                 \"CPAL.POLICY.016_4\" = \"Private pre-K\",\n                 \"CPAL.POLICY.016_5\" = \"Public pre-K\",\n                 \"CPAL.POLICY.016_6\" = \"HeadStart or Early Head Start\",\n                 \"CPAL.POLICY.016_7\" = \"Faith-based nursery\",\n                 \"CPAL.POLICY.016_8\" = \"None of these\",\n                 \"CPAL.POLICY.016_998\" = \"Unsure\",\n                 \"CPAL.POLICY.016_999\" = \"None of these\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.HEALTH.002**\n\n> Have you missed a well baby check up in the past month?\n\n**Rate of response (if applicable):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HEALTH.004.2), CPAL.HEALTH.004.2 != -99))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r care03, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.HEALTH.004.2), CPAL.HEALTH.004.2 != -99, CPAL.HEALTH.004.2 != -97) %>%\n  mutate(CPAL.HEALTH.004.2 = factor(\n    case_when(\n      CPAL.HEALTH.004.2 == 1 ~ \"Have missed\",\n      CPAL.HEALTH.004.2 == 0 ~ \"Have not missed\",\n    ),\n    levels = c(\"Have missed\", \n               \"Have not missed\"\n               )\n  )) %>%\n  group_by(CPAL.HEALTH.004.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HEALTH.004.2)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.25,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Have not missed\" = palette_cpal_main[1], \"Have missed\" = palette_cpal_main[2]),\n                    breaks = c(\"Have missed\", \"Have not missed\"))\n\n```\n:::\n:::\n\n\n## Housing and home conditions\n\n::: grid\n::: g-col-5\n**CPAL.DEBT.007**\n\n> Please describe your housing status\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.DEBT.007)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r home01, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.DEBT.007)) %>%\n  mutate(CPAL.DEBT.007 = factor(\n    case_when(\n      CPAL.DEBT.007 == 1 ~ \"I rent the home I live in\",\n      CPAL.DEBT.007 == 2 ~ \"I own the home I live in\",\n      CPAL.DEBT.007 == 3 ~ \"Currently unhoused/homeless\",\n      CPAL.DEBT.007 == 4 ~ \"Other\"),\n    levels = c(\"I rent the home I live in\", \"I own the home I live in\", \"Currently unhoused/homeless\", \"Other\")\n  )) %>%\n  group_by(CPAL.DEBT.007) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.DEBT.007)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.10,label = ifelse(prop > 0.05, scales::percent(prop * 100, scale = 1), \"\")), \n            position = position_stack(vjust = 0.6), colour = \"white\", size = 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) \n\n```\n:::\n\n::: g-col-5\n**CPAL.DEMO.011**\n\n> What are the living arrangements for children in your household under the age of 6 years?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.DEMO.011\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n\n```{r home06, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DEMO.011_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[999]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = -0.1,\n          size = 7, \n          colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14),\n    panel.grid.major.y = element_blank(),\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.DEMO.011_1\" = \"Two parents\",\n                 \"CPAL.DEMO.011_2\" = \"One parent\",\n                 \"CPAL.DEMO.011_3\" = \"Other children/siblings older than 6\" ,\n                 \"CPAL.DEMO.011_4\" = \"Adult relatives\",\n                 \"CPAL.DEMO.011_5\" = \"Adult non-relatives\",\n                 \"CPAL.DEMO.011_6\" = \"Other\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\nover_under_50k_two_parents <- df %>%\n  replace_na(list(`CPAL.DEMO.011_1` = 0)) %>%\n  group_by(`Over/Under 50k`) %>%\n  summarise(two_parent_percentage = mean(`CPAL.DEMO.011_1` == 1, na.rm = TRUE) )\n\n```\n\n#### **`r scales::percent(pull(over_under_50k_two_parents[1,2]), accuracy = 0.1)`** of respondents with income above $50,000 report a two-parent living arrangement, compared to only **`r scales::percent(pull(over_under_50k_two_parents[2,2]), accuracy = 0.1)`** of respondents with an income below $50,000.\n\n```{r home06_heatmap, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DEMO.011_\")) %>%\n  group_by(answer, `Income Bracket`) %>% \n  summarise(percentage = (sum(value == 1, na.rm = TRUE)/n())) %>%\n  ggplot(aes(x = `Income Bracket`, y = answer, fill = percentage)) +\n  geom_tile() +\n  scale_fill_gradient(low = scales::alpha(palette_cpal_main[2], 0), high = scales::alpha(palette_cpal_main[2], 1), labels = scales::percent_format()) +\n  labs(title = \"Heatmap by Income Bracket\") +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.DEMO.011_1\" = \"Two parents\",\n                 \"CPAL.DEMO.011_2\" = \"One parent\",\n                 \"CPAL.DEMO.011_3\" = \"Other children/siblings older than 6\",\n                 \"CPAL.DEMO.011_4\" = \"Adult relatives\",\n                 \"CPAL.DEMO.011_5\" = \"Adult non-relatives\",\n                 \"CPAL.DEMO.011_6\" = \"Other\")\n    return(stringr::str_wrap(recodes[x], width = 25))\n  }) +\n  theme_minimal() +\n  theme(\n    title = element_text(size = 14),\n    axis.title = element_blank(),\n    axis.text = element_text(size = 14),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    panel.grid = element_blank(),\n  )\n```\n\n:::\n\n\n::: g-col-5\n**CPAL.INTERNET.001**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> How often is the internet available to people in your household?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.INTERNET.001)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n\n```{r internet, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.INTERNET.001)) %>%\n  mutate(CPAL.INTERNET.001 = factor(\n    case_when(\n      CPAL.INTERNET.001 == 0 ~ \"Never available\",\n      CPAL.INTERNET.001 == 1 ~ \"Rarely available\",\n      CPAL.INTERNET.001 == 2 ~ \"Sometimes available\",\n      CPAL.INTERNET.001 == 3 ~ \"Usually available\",\n      CPAL.INTERNET.001 == 4 ~ \"Always available\"\n    ),\n    levels = c(\"Never available\", \"Rarely available\", \"Sometimes available\", \"Usually available\", \"Always available\")\n  )) %>%\n  group_by(CPAL.INTERNET.001) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = prop, y = CPAL.INTERNET.001, fill = CPAL.INTERNET.001)) +\n  geom_bar(stat = \"identity\", position = \"dodge\", width = 0.7) +\n  geom_text(aes(label = ifelse(prop > 0.10, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = 1.1, \n            size = 8, \n            colour = \"white\") +\n  geom_text(aes(label = ifelse(prop <= 0.10, scales::percent(prop, scale = 100), \"\")), \n            position = position_dodge(width=0.9), \n            hjust = -0.1, \n            size = 8, \n            colour = \"grey\") +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 12),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    axis.text.y = element_text(size = 16),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = colorRampPalette(c( palette_cpal_main[2], palette_cpal_main[1]))(5),\n                    c(\"Never available\", \"Rarely available\", \"Sometimes available\", \"Usually available\", \"Always available\")) +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), expand = expansion(mult = c(0.1, 0)))\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.HOME.005**\n\n> Is your home's heating equipment able to keep you warm in the winter?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HOME.005)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r home02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.HOME.005)) %>%\n  mutate(CPAL.HOME.005 = case_when(\n    CPAL.HOME.005 == 2 ~ \"Always\",\n    CPAL.HOME.005 == 0 ~ \"No\",\n    CPAL.HOME.005 == 1 ~ \"Sometimes\"\n  )) %>%\n  group_by(CPAL.HOME.005) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HOME.005)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1,label = ifelse(prop > 0.10, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 8) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Always\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Sometimes\" = palette_cpal_main[4]),\n                    breaks = c(\"Always\", \"Sometimes\", \"No\"))\n\n```\n:::\n\n::: g-col-5\n**CPAL.HOME.006**\n\n> Is your home's cooling equipment (air conditioning, fans, etc.) able to keep you cool in the summer?\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.HOME.006)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r home03, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.HOME.006)) %>%\n  mutate(CPAL.HOME.006 = case_when(\n    CPAL.HOME.006 == 2 ~ \"Always\",\n    CPAL.HOME.006 == 0 ~ \"No\",\n    CPAL.HOME.006 == 1 ~ \"Sometimes\"\n  )) %>%\n  group_by(CPAL.HOME.006) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.HOME.006)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.2, label = ifelse(prop > 0.05, scales::percent(prop , scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Always\" = palette_cpal_main[1], \"No\" = palette_cpal_main[2], \"Sometimes\" = palette_cpal_main[4]),\n                    breaks = c(\"Always\", \"Sometimes\", \"No\"))\n\n```\n:::\n\n::: g-col-12\nIn total, only **`r scales::percent(nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005), CPAL.HOME.006 == 2, CPAL.HOME.005 == 2))/nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005))), accuracy = 0.1)`** of respondents say that both their *heating and cooling always work* at home.\n\n<!-- When only considering respondents with at least one child 6 years old or under, this percentage `r paste0( ifelse(  nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005), CPAL.HOME.006 == 2, CPAL.HOME.005 == 2))/nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005))) < nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005), CPAL.HOME.006 == 2, CPAL.HOME.005 == 2, !is.na(CPAL.CBCL.015)))/nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005))), \"rises\", \"drops\"  ), \" to \", scales::percent(nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005), CPAL.HOME.006 == 2, CPAL.HOME.005 == 2, is.numeric(CPAL.CBCL.015)))/nrow(df %>% filter(!is.na(CPAL.HOME.006), !is.na(CPAL.HOME.005))), accuracy = 0.1), \".\"  )` -->\n:::\n\n\n::: g-col-5\n**CPAL.MH.009**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> In the last 30 days, were you evicted from the place you rented?\n:::\n:::\n\n\n**Rate of response (renters):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.MH.009)))/nrow(df %>% filter(CPAL.DEBT.007 == 1)), accuracy = 0.1)`\n\n**Rate of response (total):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.MH.009)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n#### **`r scales::percent(nrow(df %>% filter(CPAL.MH.009 == 1, !is.na(CPAL.MH.009)))/nrow(df %>% filter(!is.na(CPAL.MH.009))), accuracy = 0.1)`** of renters report being *evicted* in the *past 30 days*.\n\n\n\n```{r home04, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.MH.009)) %>%\n  mutate(CPAL.MH.009 = case_when(\n    CPAL.MH.009 == 0 ~ \"Not evicted\",\n    CPAL.MH.009 == 1 ~ \"Evicted\",\n    TRUE ~ \"Other\"\n  )) %>%\n  filter(CPAL.MH.009 != \"Other\") %>%\n  group_by(CPAL.MH.009) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.MH.009)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.25,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Evicted\" = palette_cpal_main[2], \"Not evicted\" = palette_cpal_main[1]),\n                    breaks = c(\"Evicted\", \"Not evicted\"))\n\n```\n:::\n\n:::\n\n::: grid\n\n::: g-col-5\n\n:::\n\n::: g-col-7\n\n```{r home04_2, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.MH.009), CPAL.MH.009 %in% c(0:1)) %>%\n  group_by(`Income Bracket`) %>%\n  summarize(`Not evicted` = sum(CPAL.MH.009 == 0)/n(), `Evicted` = sum(CPAL.MH.009 == 1)/n()) %>%\n  gather(key = \"evicted\", value = \"prop\", -`Income Bracket`) %>%\n  mutate(\n    evicted = factor(\n      evicted,\n    levels = c(\"Not evicted\",\"Evicted\"))\n  ) %>%\n  ggplot(aes(x = `Income Bracket`, y = prop, fill = `Income Bracket`, alpha = evicted)) +\n  geom_text(aes(label = ifelse(evicted == \"Evicted\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n        position = position_stack(), hjust = -0.1, size = 8, colour = \"grey\") +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  coord_flip() +\n  labs(title = \"Evictions by income\") +\n  theme(\n    axis.text.y = element_text(size = 16),\n    axis.title = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_alpha_manual(values = c(0.2, 1))\n\n\n# df %>%\n#   filter(!is.na(CPAL.MH.009), CPAL.MH.009 %in% c(0:1)) %>%\n#   group_by(CPAL.DEMO.007.2) %>%\n#   summarize(`Not evicted` = sum(CPAL.MH.009 == 0)/n(), `Evicted` = sum(CPAL.MH.009 == 1)/n()) %>%\n#   gather(key = \"evicted\", value = \"prop\", -CPAL.DEMO.007.2) %>%\n#   mutate(\n#     evicted = factor(\n#       evicted,\n#     levels = c(\"Not evicted\",\"Evicted\"))\n#   ) %>%\n#   ggplot(aes(x = CPAL.DEMO.007.2, y = prop, fill = CPAL.DEMO.007.2, alpha = evicted)) +\n#   geom_text(aes(label = ifelse(evicted == \"Evicted\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n#         position = position_stack(), hjust = -0.1, size = 7, colour = \"grey\") +\n#   geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n#   coord_flip() +\n#   labs(title = \"Evictions by race\") +\n#   theme(\n#     axis.text.y = element_text(size = 16),\n#     axis.title = element_blank(),\n#     axis.text.x = element_blank(),\n#     legend.position = \"none\",\n#     plot.background = element_rect(fill = \"transparent\", colour = NA),\n#     panel.background = element_rect(fill = \"transparent\", colour = NA),\n#     strip.background = element_rect(fill = \"transparent\", colour = NA)\n#   ) +\n#   scale_alpha_manual(values = c(0.2, 1))\n\n```\n\n```{r whoevicted, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(CPAL.MH.009 == 1) %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n),\n         CPAL.DEMO.007.2 = stringr::str_wrap(CPAL.DEMO.007.2, width = 20)\n) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.DEMO.007.2)) +\n    geom_bar(width = 0.7, stat = \"identity\") +\n    coord_polar(theta = \"y\", start = 0) +\n    labs(title = \"Who is getting evicted?\") +\n    geom_text(aes(x=1.12,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n              position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 16),\n      legend.position = \"left\",\n      legend.title = element_blank(),\n      legend.key.size = unit(2, \"lines\"), \n      legend.text = element_text(size = 14),\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      axis.title = element_blank(),\n      panel.grid = element_blank(),\n      plot.background = element_rect(fill = \"transparent\", colour = NA),\n      panel.background = element_rect(fill = \"transparent\", colour = NA),\n      strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\n\n```\n\n:::\n\n:::\n\n::: {.column-margin}\n\nNote: evictions $n=`r nrow(df %>% filter(CPAL.MH.009 == 1))`$.\n\n:::\n\n::: grid\n\n::: g-col-5\n**CPAL.MH.010**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> In the last 30 days, was your mortgage foreclosed on?\n:::\n:::\n\n**Rate of response (homeowners):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.MH.010)))/nrow(df %>% filter(CPAL.DEBT.007 == 2)), accuracy = 0.1)`\n\n**Rate of response (total):** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.MH.010)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n&nbsp;\n\n#### **`r scales::percent(nrow(df %>% filter(CPAL.MH.010 == 1, !is.na(CPAL.MH.010)))/nrow(df %>% filter(!is.na(CPAL.MH.010))), accuracy = 0.1)`** of homeowners report being *foreclosed on* in the *past 30 days*.\n\n\n```{r home05, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.MH.010)) %>%\n  mutate(CPAL.MH.010 = case_when(\n    CPAL.MH.010 == 0 ~ \"Not foreclosed\",\n    CPAL.MH.010 == 1 ~ \"Foreclosed\",\n    TRUE ~ \"Other\"\n  )) %>%\n  filter(CPAL.MH.010 != \"Other\") %>%\n  group_by(CPAL.MH.010) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.MH.010)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x=1.25,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = c(\"Foreclosed\" = palette_cpal_main[2], \"Not foreclosed\" = palette_cpal_main[1]),\n                    breaks = c(\"Foreclosed\", \"Not foreclosed\"))\n\n```\n\nMost homeowners make *less than \\$100,000*, as do **all** who were *foreclosed on*.\n\n:::\n\n:::\n\n::: grid\n\n::: g-col-5\n:::\n\n::: g-col-7\n```{r home05_2, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# df %>%\n#   filter(Annual2023Income < 500000) %>%\n#   filter(!is.na(CPAL.MH.010), CPAL.MH.010 %in% c(0:1)) %>%\n#   mutate(CPAL.MH.010 = case_when(\n#     CPAL.MH.010 == 0 ~ \"Not foreclosed on\",\n#     CPAL.MH.010 == 1 ~ \"Foreclosed on\",\n#     TRUE ~ \"Other\"\n#   )) %>%\n#   ggplot(aes(x = Annual2023Income, fill = CPAL.MH.010)) +\n#   geom_histogram(binwidth = 10000, boundary = 0) +\n#   scale_x_continuous(\n#     labels = scales::dollar_format(),\n#     limits = c(0, 500000)\n#   ) +\n#   theme_minimal() +\n#   theme(axis.title.x = element_blank(),\n#         plot.background = element_rect(fill = \"transparent\", colour = NA),\n#         panel.background = element_rect(fill = \"transparent\", colour = NA),\n#         strip.background = element_rect(fill = \"transparent\", colour = NA),\n#         legend.text = element_text(size = 12)\n#         ) +\n#   scale_fill_manual(values = c(\"Foreclosed on\" = palette_cpal_main[2], \"Not foreclosed on\" = palette_cpal_main[1]),\n#                     breaks = c(\"Foreclosed on\", \"Not foreclosed on\"))\n\ndf %>%\n  filter(!is.na(CPAL.MH.010), CPAL.MH.010 %in% c(0:1)) %>%\n  group_by(`Income Bracket`) %>%\n  summarize(`Not foreclosed on` = sum(CPAL.MH.010 == 0)/n(), `Foreclosed on` = sum(CPAL.MH.010 == 1)/n()) %>%\n  gather(key = \"foreclosed\", value = \"prop\", -`Income Bracket`) %>%\n  mutate(\n    foreclosed = factor(\n      foreclosed,\n    levels = c(\"Not foreclosed on\",\"Foreclosed on\"))\n  ) %>%\n  ggplot(aes(x = `Income Bracket`, y = prop, fill = `Income Bracket`, alpha = foreclosed)) +\n  geom_text(aes(label = ifelse(foreclosed == \"Foreclosed on\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n        position = position_stack(), hjust = -0.1, size = 8, colour = \"grey\") +\n  geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n  coord_flip() +\n  labs(title = \"Foreclosures by income\") +\n  theme(\n    axis.text.y = element_text(size = 16),\n    axis.title = element_blank(),\n    axis.text.x = element_blank(),\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_alpha_manual(values = c(0.2, 1))\n\n# df %>%\n#   filter(!is.na(CPAL.MH.010), CPAL.MH.010 %in% c(0:1)) %>%\n#   group_by(CPAL.DEMO.007.2) %>%\n#   summarize(`Not foreclosed on` = sum(CPAL.MH.010 == 0)/n(), `Foreclosed on` = sum(CPAL.MH.010 == 1)/n()) %>%\n#   gather(key = \"foreclosed\", value = \"prop\", -CPAL.DEMO.007.2) %>%\n#   mutate(\n#     foreclosed = factor(\n#       foreclosed,\n#     levels = c(\"Not foreclosed on\",\"Foreclosed on\"))\n#   ) %>%\n#   ggplot(aes(x = CPAL.DEMO.007.2, y = prop, fill = CPAL.DEMO.007.2, alpha = foreclosed)) +\n#   geom_text(aes(label = ifelse(foreclosed == \"Foreclosed on\", scales::percent(prop, scale = 100, accuracy = 0.1), \"\")),\n#         position = position_stack(), hjust = -0.1, size = 8, colour = \"grey\") +\n#   geom_bar(stat = \"identity\", position = \"stack\", width = 0.9) +\n#   coord_flip() +\n#   labs(title = \"Foreclosures by race\") +\n#   theme(\n#     axis.text.y = element_text(size = 16),\n#     axis.title = element_blank(),\n#     axis.text.x = element_blank(),\n#     legend.position = \"none\",\n#     plot.background = element_rect(fill = \"transparent\", colour = NA),\n#     panel.background = element_rect(fill = \"transparent\", colour = NA),\n#     strip.background = element_rect(fill = \"transparent\", colour = NA)\n#   ) +\n#   scale_alpha_manual(values = c(0.2, 1))\n\n```\n\n```{r whoforc, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\ndf %>%\n  filter(!is.na(CPAL.MH.010), CPAL.MH.010 %in% c(0:1)) %>%\n  group_by(CPAL.DEMO.007.2) %>%\n  tally() %>%\n  mutate(prop = n/sum(n),\n         CPAL.DEMO.007.2 = stringr::str_wrap(CPAL.DEMO.007.2, width = 20)\n) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.DEMO.007.2)) +\n    geom_bar(width = 0.7, stat = \"identity\") +\n    coord_polar(theta = \"y\", start = 0) +\n    labs(title = \"Who is getting foreclosed on?\") +\n    geom_text(aes(x=1.12,label = ifelse(prop > 0.05, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n              position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 16),\n      legend.position = \"left\",\n      legend.title = element_blank(),\n      legend.key.size = unit(2, \"lines\"), \n      legend.text = element_text(size = 14),\n      axis.text = element_blank(),\n      axis.ticks = element_blank(),\n      axis.title = element_blank(),\n      panel.grid = element_blank(),\n      plot.background = element_rect(fill = \"transparent\", colour = NA),\n      panel.background = element_rect(fill = \"transparent\", colour = NA),\n      strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\n\n```\n\n:::\n\n:::\n\n\n::: {.column-margin}\n\nNote: foreclosures $n=`r nrow(df %>% filter(CPAL.MH.010 == 1))`$.\n\n&nbsp;\n\nThe selection of homeowners in lower income ranges is likely due to data misentry; *we are currently still reviewing these responses*.\n:::\n\n\n::: grid\n\n::: g-col-5\n**CPAL.DALLASCORE.003**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> During the past three months, has any member of your household spent at least one night in jail or prison?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.DALLASCORE.003_\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n<!-- **`r scales::percent(nrow(df %>% filter(CPAL.MH.010 == 1, !is.na(CPAL.MH.010)))/nrow(df %>% filter(!is.na(CPAL.MH.010))), accuracy = 0.1)` of respondents with at least one child aged 6 or younger in the home report a household member spending at least one night in jail or prison in the past 3 months.** -->\n\n\n```{r home07, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DALLASCORE.003_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[999]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.15, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), \n          hjust = -0.1,\n          size = 7, \n          colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.DALLASCORE.003_1\" = \"Myself\",\n                 \"CPAL.DALLASCORE.003_2\" = \"A parent\",\n                 \"CPAL.DALLASCORE.003_3\" = \"A partner or spouse\" ,\n                 \"CPAL.DALLASCORE.003_4\" = \"A child\",\n                 \"CPAL.DALLASCORE.003_5\" = \"Other\",\n                 \"CPAL.DALLASCORE.003_999\" = \"Does not apply\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n\n\n:::\n\n:::\n\n\n## Community and wellbeing\n\n::: grid\n\n\n::: g-col-5\n**CPAL.CESD.001.b**\n\n> In the past month, please describe how often you felt hopeful about the future\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(!is.na(CPAL.CESD.001.b)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n```{r other02, dev = \"png\", dev.args=list(bg=\"transparent\")}\n\n# palette_cpal_main[1] blue\n# palette_cpal_main[2] red\n# #808080 grey\n\ndf %>%\n  filter(!is.na(CPAL.CESD.001.b)) %>%\n  mutate(CPAL.CESD.001.b = case_when(\n    CPAL.CESD.001.b == 1 ~ \"Rarely or never\",\n    CPAL.CESD.001.b == 2 ~ \"Some or little of the time\",\n    CPAL.CESD.001.b == 3 ~ \"Occasionally or moderately\",\n    CPAL.CESD.001.b == 4 ~ \"Most or all of the time\"\n  )) %>%\n  group_by(CPAL.CESD.001.b) %>%\n  tally() %>%\n  mutate(prop = n/sum(n)) %>%\n  ggplot(aes(x = \"\", y = prop, fill = CPAL.CESD.001.b)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(theta = \"y\", start = 0) +\n  geom_text(aes(x = 1.2, label = ifelse(prop > 0.08, scales::percent(prop, scale = 100, accuracy = 0.1), \"\")), \n            position = position_stack(vjust = 0.5), colour = \"white\", size= 7) +\n  labs(fill = \"\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"left\",\n    legend.key.size = unit(2, \"lines\"), \n    legend.text = element_text(size = 14),\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA),\n    panel.background = element_rect(fill = \"transparent\", colour = NA),\n    strip.background = element_rect(fill = \"transparent\", colour = NA)\n  ) +\n  scale_fill_manual(values = colorRampPalette(c( palette_cpal_main[2], palette_cpal_main[1]))(4),\n                    breaks = c(\"Rarely or never\", \"Some or little of the time\", \"Occasionally or moderately\", \"Most or all of the time\"))\n\n```\n:::\n\n\n::: g-col-5\n**CPAL.SOCIALSUPP.003.a**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> Who do you turn to for social support? Think about who you turned to for social support in this last week.\n:::\n:::\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.SOCIALSUPP.003.a\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n```{r socialsupp, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  filter(rowSums(is.na(select(., starts_with(\"CPAL.SOCIALSUPP.003.a\")))) != length(select(., starts_with(\"CPAL.SOCIALSUPP.003.a\")))) %>%  \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.SOCIALSUPP.003.a\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      TRUE ~ palette_cpal_main[1]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.9) +\n  geom_text(aes(label = ifelse(percentage > 0.3, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.3, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\nscale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.SOCIALSUPP.003.a_1\" = \"Partner\",\n                 \"CPAL.SOCIALSUPP.003.a_2\" = \"Child\",\n                 \"CPAL.SOCIALSUPP.003.a_3\" = \"Parent\" ,\n                 \"CPAL.SOCIALSUPP.003.a_4\" = \"Relative\",\n                 \"CPAL.SOCIALSUPP.003.a_5\" = \"Friend\",\n                 \"CPAL.SOCIALSUPP.003.a_6\" = \"Neighbor\",\n                 \"CPAL.SOCIALSUPP.003.a_7\" = \"Co-worker\",\n                 \"CPAL.SOCIALSUPP.003.a_8\" = \"Member of a religious community\",         \n                 \"CPAL.SOCIALSUPP.003.a_9\" = \"Spiritual figure\",\n                 \"CPAL.SOCIALSUPP.003.a_10\" = \"Parent group\",\n                 \"CPAL.SOCIALSUPP.003.a_11\" = \"Health or mental health professional\",\n                 \"CPAL.SOCIALSUPP.003.a_12\" = \"Babysitter\",\n                 \"CPAL.SOCIALSUPP.003.a_13\" = \"Childcare provider\",\n                 \"CPAL.SOCIALSUPP.003.a_14\" = \"Mentor/teacher\"\n                 )\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n```{r socialsupp_pov, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  filter(POVERTYLine2023 == 1) %>%\n  filter(rowSums(is.na(select(., starts_with(\"CPAL.SOCIALSUPP.003.a\")))) != length(select(., starts_with(\"CPAL.SOCIALSUPP.003.a\")))) %>%  \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.SOCIALSUPP.003.a\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  ggplot(aes(x = percentage, y = answer)) +\n  geom_bar(stat = \"identity\", width = 0.9, fill = palette_cpal_main[2]) +\n  geom_text(aes(label = ifelse(percentage > 0.3, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.3, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\nscale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  labs(title = \"Only respondents under the poverty line\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16),\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.SOCIALSUPP.003.a_1\" = \"Partner\",\n                 \"CPAL.SOCIALSUPP.003.a_2\" = \"Child\",\n                 \"CPAL.SOCIALSUPP.003.a_3\" = \"Parent\" ,\n                 \"CPAL.SOCIALSUPP.003.a_4\" = \"Relative\",\n                 \"CPAL.SOCIALSUPP.003.a_5\" = \"Friend\",\n                 \"CPAL.SOCIALSUPP.003.a_6\" = \"Neighbor\",\n                 \"CPAL.SOCIALSUPP.003.a_7\" = \"Co-worker\",\n                 \"CPAL.SOCIALSUPP.003.a_8\" = \"Member of a religious community\",         \n                 \"CPAL.SOCIALSUPP.003.a_9\" = \"Spiritual figure\",\n                 \"CPAL.SOCIALSUPP.003.a_10\" = \"Parent group\",\n                 \"CPAL.SOCIALSUPP.003.a_11\" = \"Health or mental health professional\",\n                 \"CPAL.SOCIALSUPP.003.a_12\" = \"Babysitter\",\n                 \"CPAL.SOCIALSUPP.003.a_13\" = \"Childcare provider\",\n                 \"CPAL.SOCIALSUPP.003.a_14\" = \"Mentor/teacher\"\n                 )\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\n```\n\n:::\n\n::: g-col-5\n**CPAL.DALLASCORE.002**\n\n::: grid\n::: g-col-1\n<i class=\"bi bi-star\"></i>\n:::\n::: g-col-11\n> In the past 3 months, have you done any of the following out of concern for your own safety while in your neighborhood?\n:::\n:::\n\n\n**Rate of response:** `r scales::percent(nrow(df %>% filter(rowSums(is.na(.[grepl(\"^CPAL.DALLASSCORE.002_\", names(.))])) < ncol(.)))/nrow(df), accuracy = 0.1)`\n:::\n\n::: g-col-7\n\n```{r other01, dev = \"png\", dev.args=list(bg=\"transparent\")}\ndf %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DALLASCORE.002_\")) %>%\n  group_by(answer) %>% \n  summarise(percentage = (sum(value == 1, na.rm = T)/n())) %>% \n  arrange(desc(percentage)) %>%\n  mutate(\n    color = case_when(\n      stringr::str_detect(answer, \"[999]$\") ~ palette_cpal_main[1],\n      TRUE ~ palette_cpal_main[2]\n    )\n  ) %>%\n  ggplot(aes(x = percentage, y = answer, fill = color)) +\n  geom_bar(stat = \"identity\", width = 0.7) +\n  geom_text(aes(label = ifelse(percentage > 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n          position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n        position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\n  scale_x_continuous(labels = scales::percent_format(scale = 100), limits = c(0,1)) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    title = element_blank(),\n    axis.title = element_blank(),\n    axis.text.y = element_text(size = 14)\n  ) +\n  scale_color_manual(values = palette_cpal_main) +\n  scale_y_discrete(labels = function(x) {\n    recodes <- c(\"CPAL.DALLASCORE.002_1\" = \"Avoid certain streets\",\n                 \"CPAL.DALLASCORE.002_2\" = \"Stay in at night\",\n                 \"CPAL.DALLASCORE.002_3\" = \"Not travel alone\" ,\n                 \"CPAL.DALLASCORE.002_4\" = \"Avoid certain buildings or locations\",\n                 \"CPAL.DALLASCORE.002_5\" = \"Carry a weapon\",\n                 \"CPAL.DALLASCORE.002_6\" = \"Call 911\",\n                 \"CPAL.DALLASCORE.002_999\" = \"Does not apply\")\n    return(stringr::str_wrap(recodes[x], width = 30))\n  })\n\ndf %>%\n  mutate(unsafe = case_when(\n    rowSums(select(., starts_with(\"CPAL.DALLASCORE.002_\"), -CPAL.DALLASCORE.002_999) == 1, na.rm = TRUE) > 0 ~ 1,\n    CPAL.DALLASCORE.002_999 == 1 ~ 0,\n    TRUE ~ NA_real_\n  )) %>%\n  filter(!is.na(unsafe)) %>%\n  mutate(unsafe = factor(unsafe, levels = c(0, 1)),\n         weight = if_else(unsafe == 1, -1, 1)) %>%\n  ggplot(aes(x = age_yr, fill = unsafe, weight = weight)) +\n    geom_histogram(binwidth = 2.5, alpha = 0.8) +\n    geom_text(aes(x = 80, y = 20, label = \"Did not report feeling unsafe\"), size = 5, hjust = 1) +\n    geom_text(aes(x = 80, y = -20, label = \"Reported feeling unsafe\"), size = 5, hjust = 1) +\n    scale_x_continuous(limits = c(0,80)) +\n    scale_y_continuous(limits = c(-150, 150)) +\n    labs(x = \"Age\", title = stringr::str_wrap(\"Ages of respondents\", width = 40)) + \n    theme_minimal() +\n    theme(\n      legend.position = \"none\",\n      plot.title = element_text(size = 18),\n      axis.title.y = element_blank(),\n      axis.title.x = element_text(size=18),\n      axis.text.x = element_text(size=16),\n      axis.text.y = element_blank(), # Hide y-axis text\n      axis.ticks.y = element_blank(), # Hide y-axis ticks\n      plot.background = element_rect(fill = \"transparent\", colour = NA),\n      panel.background = element_rect(fill = \"transparent\", colour = NA),\n      strip.background = element_rect(fill = \"transparent\", colour = NA)\n    )\n\nage_groups <- c(\"0-9\", \"10-19\", \"20-29\", \"30-39\", \"40-49\", \"50-59\", \"60-69\", \"70-79\", \"80+\")\n\ndf %>%\n  filter(rowSums(select(., starts_with(\"CPAL.DALLASCORE.002_\"), -CPAL.DALLASCORE.002_999) == 1, na.rm = TRUE) > 0) %>%\n  group_by(age_bucket) %>%\n  summarise(percentage = sum(CPAL.DALLASCORE.002_5 == 1, na.rm = TRUE) / n()) %>%\n  right_join(data.frame(age_bucket = factor(age_groups, levels = age_groups)), by = \"age_bucket\") %>%\n  replace_na(list(percentage = 0)) %>%\n  ggplot(aes(x = age_bucket, y = percentage)) +\n  geom_bar(stat = \"identity\", width = 0.7, fill = palette_cpal_main[2], position = \"dodge\") +\n  geom_text(aes(label = ifelse(percentage > 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n            position = position_dodge(width=0.9), hjust = 1.1, size = 7, colour = \"white\") +\n  geom_text(aes(label = ifelse(percentage <= 0.20, scales::percent(percentage, scale = 100, accuracy = 0.1), \"\")), \n            position = position_dodge(width=0.9), hjust = -0.1, size = 7, colour = \"grey\") +\n  coord_flip() +\n  labs(title = stringr::str_wrap(\"Proportion of respondents who reported carrying a weapon as a response to feeling unsafe, by age group\", width = 40),\n       x = \"Age group\",\n       y = \"Proportion\") +\n  scale_y_continuous(labels = scales::percent_format(scale = 1),\n                     limits = c(0, 0.25)) + \n  theme_minimal() +\n  theme(\n    title = element_text(size = 16),\n    legend.position = \"none\",\n    axis.text.y = element_text(size = 14),\n    axis.text.x = element_blank(),\n    axis.title = element_blank()\n  )\n  \n```\n\n#### All respondents who report carrying a weapon as a response to feeling unsafe are between 20 to 49 years old.\n\n```{r other01_map, dev = \"png\", dev.args=list(bg=\"transparent\")}\n  \nsafety_df <- df %>% \n  gather(key = \"answer\", value = \"value\", starts_with(\"CPAL.DALLASCORE.002_\")) %>%\n  filter(answer != \"CPAL.DALLASCORE.002_999\") %>%\n  group_by(CPAL.DEMO.001) %>%\n  summarize(pct = sum(value, na.rm = TRUE) / n(),\n            n = n(), \n            n_true = sum(value, na.rm = TRUE),\n            .groups = 'drop') %>%\n  mutate(GEOID = as.character(CPAL.DEMO.001)) %>%\n  left_join(zctas_dallas, by = \"GEOID\") %>%\n  mutate(\n    per_capita = case_when(\n      estimate > 0 ~ n/estimate,\n      TRUE ~ 0)\n  ) %>%\n  filter(!is.na(NAME)) %>%\n  st_as_sf()\n\nleaflet(safety_df) %>%\n  addProviderTiles(\"CartoDB.Positron\") %>%\n  addPolygons(\n    fillColor = ~colorNumeric(\"Reds\", pct)(pct),\n    weight = 1,\n    opacity = 1,\n    color = \"white\",\n    fillOpacity = 0.7,\n    highlight = TRUE,\n    label = ~as.character(GEOID),\n    popup = ~paste0(\"ZIP: \", GEOID, \n                    \"<br/>Percent concerned: \", scales::percent(pct, accuracy = 0.1),\n                    \"<br/>Count: \", n, \n                    \"<br/>Per capita: \", round(per_capita*1000, digits = 2), \"/1000\"\n                    )\n  ) %>%\n  addLegend(\n    pal = colorNumeric(\"Reds\", safety_df$pct),\n    values = safety_df$pct,\n    labels = function(values) { scales::percent(values, accuracy = 0.1) }, \n    title = \"Percent who report <br/>concern with safety\"\n  )\n\n```\n\n:::\n\n:::"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":9,"fig-height":7,"fig-format":"retina","fig-dpi":300,"df-print":"default","error":true,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":3,"output-file":"Q2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Reveal Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","theme":"www/web_report.scss","toc-title":"Contents","toc-location":"right","anchor-sections":false,"code-copy":"hover","smooth-scroll":true,"grid":{"sidebar-width":"250px","body-width":"900px","margin-width":"300px"},"code-block-bg":true,"code-block-border-left":"#008097","message":false,"title":"RAPID Q2 Overview"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}